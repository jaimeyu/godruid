swagger: '2.0'
host: 'localhost:10001'
info:
  title: Gather
  description: Gather API Documentation
  version: 1.0.0
  contact:
    email: "mpreston@accedian.com"
basePath: "/api"
schemes:
  - http
consumes:
  - application/json
  - application/vnd.api+json
produces:
  - application/json
  - application/vnd.api+json
paths:
  /v1/admin:
    post:
      summary: Create a User with Administrative access.
      operationId: CreateAdminUser
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiAdminUser'
        '400':
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiAdminUser'
      tags:
        - AdminProvisioningService
    put:
      summary: Update a User with Administrative access.
      operationId: UpdateAdminUser
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiAdminUser'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiAdminUser'
      tags:
        - AdminProvisioningService
  /v1/admin-user-list:
    get:
      summary: Retrieve all Administrative Users.
      operationId: GetAllAdminUsers
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiAdminUserList'
      tags:
        - AdminProvisioningService
  '/v1/admin/{value}':
    get:
      summary: Retrieve an Administrative User by id.
      operationId: GetAdminUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiAdminUser'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
    delete:
      summary: Delete a User with Administrative access.
      operationId: DeleteAdminUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiAdminUser'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
  /v1/tenants:
    post:
      summary: Create a Tenant.
      operationId: CreateTenant
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenant'
        '400':
          description: "Request data does not pass validation"
        '409':
          description: "The Tenant being provisioned already exists"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenant'
      tags:
        - AdminProvisioningService
    put:
      summary: Update a Tenant.
      operationId: UpdateTenant
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenant'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenant'
      tags:
        - AdminProvisioningService
  /v1/tenant-list:
    get:
      summary: Retrieve all Tenants.
      operationId: GetAllTenants
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantList'
        '500':
          description: "Unexpected error processing request"
      tags:
        - AdminProvisioningService
  '/v1/tenants/{value}':
    get:
      summary: Retrieve a Tenant by id.
      operationId: GetTenant
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenant'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
    delete:
      summary: Delete a Tenant
      operationId: DeleteTenant
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenant'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
  '/v1/tenant-by-alias/{value}':
    get:
      summary: Returns the Id of a Tenant that matches the provided alias.
      operationId: GettenantIdByAlias
      produces:
        - text/plain
      responses:
        '200':
          description: ''
          schema:
                type: "string"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
  '/v1/tenant-summary-by-alias/{value}':
    get:
      summary: Returns a summary of the Tenant that matches the provided alias.
      operationId: GetTenantSummaryByAlias
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: "#/definitions/TenantSummary"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
  /v1/ingestion-dictionaries:
    post:
      summary: Create an Ingestion Dictionary. 
      operationId: CreateIngestionDictionary
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiIngestionDictionary'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiIngestionDictionary'
      tags:
        - AdminProvisioningService
    put:
      summary: Update an Ingestion Dictionary. 
      operationId: UpdateIngestionDictionary
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiIngestionDictionary'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiIngestionDictionary'
      tags:
        - AdminProvisioningService
    get:
      summary: Retrieve an Ingestion Dictionary.
      operationId: GetIngestionDictionary
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiIngestionDictionary'
        '500':
          description: "Unexpected error processing request"
      tags:
        - AdminProvisioningService
    delete:
      summary: Delete an Ingestion Dictionary.
      operationId: DeleteIngestionDictionary
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiIngestionDictionary'
        '500':
          description: "Unexpected error processing request"
      tags:
        - AdminProvisioningService
  /v1/valid-types:
    post:
      summary: Create a Valid Types object. 
      operationId: CreateValidTypes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiValidTypes'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiValidTypes'
      tags:
        - AdminProvisioningService
    put:
      summary: Update a Valid Types object. 
      operationId: UpdateValidTypes
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiValidTypes'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiValidTypes'
      tags:
        - AdminProvisioningService
    get:
      summary: Retrieve a Valid Types object.
      operationId: GetValidTypes
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiValidTypes'
        '500':
          description: "Unexpected error processing request"
      tags:
        - AdminProvisioningService
    delete:
      summary: Delete a Valid Types object.
      operationId: DeleteValidTypes
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiValidTypes'
        '500':
          description: "Unexpected error processing request"
      tags:
        - AdminProvisioningService
  /v1/tenants/{tenantId}/users:
    post:
      summary: Create a User for a Tenant.
      operationId: CreateTenantUser
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantUser'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantUser'
      tags:
        - TenantProvisioningService
    put:
      summary: Update a Tenant User
      operationId: UpdateTenantUser
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantUser'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantUser'
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/user-list:
    get:
      summary: Retrieve all Users for the specified Tenant.
      operationId: GetAllTenantUsers
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantUserList'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/users/{userId}':
    get:
      summary: Retrieve a Tenant User by id.
      operationId: GetTenantUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantUser'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
    delete:
      summary: Delete a Tenant User specified by the provided userId.
      operationId: DeleteTenantUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantUser'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/domains:
    post:
      summary: Create a Domain for a Tenant.
      operationId: CreateTenantDomain
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantDomain'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantDomain'
      tags:
        - TenantProvisioningService
    put:
      summary: Update a Tenant Domain
      operationId: UpdateTenantDomain
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantDomain'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantDomain'
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/report-schedule-configs:
    post:
      summary: Create a report schedule configuration for a Tenant.
      operationId: CreateReportScheduleConfig
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantReportScheduleConfig'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantReportScheduleConfig'
      tags:
        - TenantProvisioningService
    put:
      summary: Update a report schedule configuration for a Tenant.
      operationId: UpdateReportScheduleConfig
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantReportScheduleConfig'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantReportScheduleConfig'
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/report-schedule-configs/{configId}':
    get:
      summary: Retrieve a report schedule configuration for a Tenant by configuration Id.
      operationId: GetReportScheduleConfig
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantReportScheduleConfig'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: configId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
    delete:
      summary: Delete a report schedule configuration for a Tenant by configuration Id.
      operationId: DeleteReportScheduleConfig
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantReportScheduleConfig'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: configId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/domain-list:
    get:
      summary: Retrieve all Domains for the specified Tenant.
      operationId: GetAllTenantDomains
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantDomainList'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/domains/{domainId}':
    get:
      summary: Retrieve a Tenant Domain by Id.
      operationId: GetTenantDomain
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantDomain'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: domainId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
    delete:
      summary: Delete a Tenant Domain specified by the provided Domain Id.
      operationId: DeleteTenantDomain
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantDomain'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: domainId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/ingestion-profiles:
    post:
      summary: Create an Ingestion Profile for a Tenant.
      operationId: CreateIngestionProfile
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantIngestionProfile'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantIngestionProfile'
      tags:
        - TenantProvisioningService
    put:
      summary: Update a Tenant Ingestion Profile
      operationId: UpdateTenantIngestionProfile
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantIngestionProfile'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantIngestionProfile'
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/active-ingestion-profile:
    get:
      summary: Retrieve the active Ingestion Profile for the specified Tenant.
      operationId: GetActiveIngestionProfile
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantIngestionProfile'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/ingestion-profiles/{ingestionProfileId}':
    get:
      summary: Retrieve a Tenant Ingestion Profile by id.
      operationId: GetTenantIngestionProfile
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantIngestionProfile'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: ingestionProfileId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
    delete:
      summary: Delete a Tenant Ingestion Profile specified by the provided Ingestion Profile Id.
      operationId: DeleteTenantIngestionProfile
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantIngestionProfile'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: ingestionProfileId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/threshold-profiles:
    post:
      summary: Create a Threshold Profile for a Tenant.
      operationId: CreateTenantThresholdProfile
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantThresholdProfile'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantThresholdProfile'
      tags:
        - TenantProvisioningService
    put:
      summary: Update a Tenant Threshold Profile
      operationId: UpdateTenantThresholdProfile
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantThresholdProfile'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantMonitoredObject'
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/threshold-profile-list:
    get:
      summary: Retrieve all Threshold Profiles for the specified Tenant.
      operationId: GetAllTenantThresholdProfiles
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantThresholdProfileList'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/threshold-profiles/{thrPrfId}':
    get:
      summary: Retrieve a Tenant Threshold Profile by id.
      operationId: GetTenantThresholdProfile
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantThresholdProfile'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: thrPrfId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
    delete:
      summary: Delete a Tenant Threshold Profile specified by the provided id.
      operationId: DeleteTenantThresholdProfile
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantThresholdProfile'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: thrPrfId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/monitored-objects:
    post:
      summary: Create a Monitored Object for a Tenant.
      operationId: CreateTenantMonitoredObject
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantMonitoredObject'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantMonitoredObject'
      tags:
        - TenantProvisioningService
    put:
      summary: Update a Tenant Monitored Object
      operationId: UpdateTenantMonitoredObject
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantMonitoredObject'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantMonitoredObject'
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/monitored-object-list:
    get:
      summary: Retrieve all Monitored Objects for the specified Tenant.
      operationId: GetAllTenantMonitoredObjects
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantMonitoredObjectList'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/monitored-objects/{monObjId}':
    get:
      summary: Retrieve a Tenant Monitored Object by id.
      operationId: GetTenantMonitoredObject
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantMonitoredObject'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: monObjId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
    delete:
      summary: Delete a Tenant Monitored Object specified by the provided id.
      operationId: DeleteTenantMonitoredObject
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantMonitoredObject'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: monObjId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/monitored-object-domain-map':
    post:
      summary: Retrieve a mapping of Monitored Objects that are associated with each Domain.
      operationId: GetDomainToMonitoredObjectMap
      produces:
        - application/json        
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/MonitoredObjectCountByDomainResponse'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/MonitoredObjectCountByDomainRequest'
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/bulk/insert/monitored-objects':
    post:
      summary: Create one or more Monitored Objects in a single API request.
      operationId: BulkInsertMonitoredObjects
      produces:
        - application/json        
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BulkOperationResult'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: "array"
            items: 
              - $ref: '#/definitions/CreateTenantMonitoredObjectRequest'
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/meta:
    post:
      summary: Create a Metadata record for a Tenant.
      operationId: CreateTenantMetadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantMetadata'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantMetadata'
      tags:
        - TenantProvisioningService
    put:
      summary: Update a Tenant Metadata record
      operationId: UpdateTenantMetadata
      consumes:
        - application/vnd.api+json
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantMetadata'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/JsonApiTenantIngestionProfile'
      tags:
        - TenantProvisioningService
    get:
      summary: Retrieve a Tenant Metadata record
      operationId: GetTenantMetadata
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantMetadata'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
    delete:
      summary: Delete a Tenant Metadata record
      operationId: DeleteTenantMetadata
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/JsonApiTenantMetadata'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService


# All API definitions below here are for the MetricsService and will need to be modified
# when the MetricsService is altered to use the jsonapi implementation.
  /v1/histogram:
    get:
      summary: Retrieve a histogram of measurements for given time range and metric
      operationId: GetHistogram
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gathergrpcJSONAPIObject'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: interval
          description: ISO-8601 Intervals.
          in: query
          required: false
          type: string
        - name: tenant
          in: query
          required: false
          type: string
        - name: domain
          in: query
          required: false
          type: string
        - name: granularity
          description: ISO-8601 period combination.
          in: query
          required: false
          type: string
        - name: direction
          in: query
          required: false
          type: string
        - name: metric
          in: query
          required: false
          type: string
        - name: granularityBuckets
          in: query
          required: false
          type: integer
          format: int32
        - name: resolution
          in: query
          required: false
          type: integer
          format: int32
        - name: vendor
          in: query
          required: false
          type: string
        - name: timeout
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - MetricsService
  /v1/raw-metrics:
    get:
      summary: Returns raw metrics from druid
      operationId: GetRawMetrics
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gathergrpcJSONAPIObject'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: interval
          description: ISO-8601 Intervals.
          in: query
          required: false
          type: string
        - name: tenant
          in: query
          required: false
          type: string
        - name: direction
          in: query
          required: false
          type: string
        - name: metric
          in: query
          required: false
          type: array
          items:
            type: string
        - name: objectType
          in: query
          required: false
          type: string
        - name: monitoredObjectId
          in: query
          required: false
          type: array
          items:
            type: string
        - name: timeout
          in: query
          required: false
          type: integer
          format: int32
        - name: granularity
          in: query
          required: false
          type: string
      tags:
        - MetricsService
  /v1/threshold-crossing:
    get:
      summary: Retrieve threshold crossing for given metric.
      operationId: GetThresholdCrossing
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gathergrpcJSONAPIObject'
        '400':
          description: "Request data does not pass validation"
        '404':
          description: "Unable to find Threshold Profile for provided id"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: interval
          description: ISO-8601 Intervals.
          in: query
          required: true
          type: string
        - name: tenant
          description: Tenant ID
          in: query
          required: true
          type: string
        - name: domain
          description: Domain ID
          in: query
          required: false
          type: array
          items:
            type: string
        - name: granularity
          description: ISO-8601 period combination.
          in: query
          required: false
          type: string
        - name: objectType
          description: the type of object (e.g. twamp-pe)
          in: query
          required: false
          type: array
          items:
            type: string
        - name: direction
          in: query
          required: false
          type: array
          items:
            type: string
        - name: metric
          in: query
          required: false
          type: array
          items:
            type: string
        - name: thresholdProfileId
          in: query
          required: true
          type: string
        - name: vendor
          in: query
          required: false
          type: array
          items:
            type: string
        - name: timeout
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - MetricsService
  /v1/threshold-crossing-by-monitored-object:
    get:
      operationId: GetThresholdCrossingByMonitoredObject
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gathergrpcJSONAPIObject'
        '400':
          description: "Request data does not pass validation"
        '404':
          description: "Unable to find Threshold Profile for provided id"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: interval
          description: ISO-8601 Intervals.
          in: query
          required: true
          type: string
        - name: tenant
          description: Tenant ID
          in: query
          required: true
          type: string
        - name: domain
          description: Domain ID
          in: query
          required: false
          type: array
          items:
            type: string
        - name: granularity
          description: ISO-8601 period combination.
          in: query
          required: false
          type: string
        - name: objectType
          in: query
          required: false
          type: array
          items:
            type: string
        - name: direction
          in: query
          required: false
          type: array
          items:
            type: string
        - name: metric
          in: query
          required: false
          type: array
          items:
            type: string
        - name: thresholdProfileId
          in: query
          required: true
          type: string
        - name: vendor
          in: query
          required: false
          type: array
          items:
            type: string
        - name: timeout
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - MetricsService
  /v1/threshold-crossing-by-monitored-object-top-n:
    get:
      operationId: GetThresholdCrossingByMonitoredObjectTopN
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gathergrpcJSONAPIObject'
        '400':
          description: "Request data does not pass validation"
        '404':
          description: "Unable to find Threshold Profile for provided id"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: interval
          description: ISO-8601 Intervals.
          in: query
          required: true
          type: string
        - name: tenantId
          description: Tenant ID
          in: query
          required: true
          type: string
        - name: domain
          description: Domain ID
          in: query
          required: false
          type: array
          items:
            type: string
        - name: granularity
          description: ISO-8601 period combination.
          in: query
          required: false
          type: string
        - name: objectType
          in: query
          required: true
          type: string
        - name: direction
          in: query
          required: false
          type: string
        - name: metric
          in: query
          required: true
          type: string
        - name: thresholdProfileId
          in: query
          required: true
          type: string
        - name: vendor
          in: query
          required: true
          type: string
        - name: timeout
          in: query
          required: false
          type: integer
          format: int32
        - name: numResults
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - MetricsService
  /v1/sla-report:
    get:
      summary: Generate an SLA Report.
      operationId: GetSLAReport
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gathergrpcJSONAPIObject'
        '400':
          description: "Request data does not pass validation"
        '404':
          description: "Unable to find Threshold Profile for provided id"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: interval
          description: ISO-8601 Intervals.
          in: query
          required: true
          type: string
        - name: tenant
          description: Tenant ID
          in: query
          required: true
          type: string
        - name: domain
          description: Domain ID
          in: query
          required: false
          type: array
          items:
            type: string
        - name: thresholdProfileId
          description: ID of the ThresholdProfile to use for the report
          in: query
          required: true
          type: string
        - name: granularity
          description: the granularity for timeseries in ISO-8601 Duration format
          in: query
          required: false
          type: string
          default: PT1H
        - name: timeout
          description: database query timeout in milliseconds
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - MetricsService
definitions:

  JsonApiAdminUser:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/AdminUser'
  JsonApiAdminUserList:
    type: "object"
    properties:
      data:
        type: "array"
        items:
           $ref: '#/definitions/AdminUser'

  AdminUser:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [adminUsers]
      id:
        type: "string"
      attributes:
        $ref: '#/definitions/AdminUserAttr'

  AdminUserAttr:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      username:
        type: "string"
      password: 
        type: "string"
      sendOnboardingEmail:
        type: "boolean"
      onboardingToken:
        type: "string"
      userVerified:
        type: "boolean"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"

  JsonApiTenant:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/Tenant'
  JsonApiTenantList:
    type: "object"
    properties:
      data:
        type: "array"
        items:
           $ref: '#/definitions/Tenant'
  Tenant:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [tenants]
      id:
        type: "string"
      attributes:
        $ref: '#/definitions/TenantAttr'
  TenantAttr:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      name:
        type: "string"
      urlSubdomain:
        type: "string"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"

  JsonApiIngestionDictionary:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/IngestionDictionary'
  IngestionDictionary:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [ingestionDictionaries]
      id:
        type: "string"
      attributes:
        $ref: '#/definitions/IngestionDictionaryAttr'
  IngestionDictionaryAttr:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      metrics:
        type: "object"
        additionalProperties:
          $ref: '#/definitions/IngestionDictionaryMetrics'
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  IngestionDictionaryMetrics:
    type: "object"
    additionalProperties:
      $ref: '#/definitions/IngestionDictionaryMetricMap'
  IngestionDictionaryMetricMap:
    type: "object"
    properties:
      ui:
        $ref: '#/definitions/IngestionDictionaryMetricMapUI'
      metricMap:
        type: "object"
        additionalProperties:
          $ref: '#/definitions/IngestionDictionaryMetricMapMetricDefinition'
  IngestionDictionaryMetricMapUI:
    type: "array"
    items:
      type: "string"
  IngestionDictionaryMetricMapMetricDefinition:
    type: "object"
    properties:
      monitoredObjectTypes:
        type: "array"
        items:
          $ref: '#/definitions/IngestionDictionaryMetricMapMetricDefinitionMonitoredObjectType'
      ui:
        $ref: '#/definitions/IngestionDictionaryMetricMapMetricDefinitionUIData'
  IngestionDictionaryMetricMapMetricDefinitionMonitoredObjectType:
    type: "object"
    properties:
      key:
        type: "string"
      rawMetricId:
        type: "string"
      units:
        type: "array"
        items:
          type: "string"
      directions:
        type: "array"
        items:
          type: "string"
  IngestionDictionaryMetricMapMetricDefinitionUIData:
    type: "object"
    properties:
      group:
        type: "string"
      position:
        type: "string"
  TenantSummary:
    type: "object"
    properties:
      id: 
        type: "string"
      alias:
        type: "string"

  JsonApiValidTypes:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/ValidTypes'
  ValidTypes:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [validTypes]
      id:
        type: "string"
      attributes:
        $ref: '#/definitions/ValidTypesAttr'
  ValidTypesAttr:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      monitoredObjectTypes:
        type: "object"
        additionalProperties:
          type: "string"
      monitoredObjectDeviceTypes:
        type: "object"
        additionalProperties:
          type: "string"
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"

  JsonApiTenantUser:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/TenantUser'
  JsonApiTenantUserList:
    type: "object"
    properties:
      data:
        type: "array"
        items:
           $ref: '#/definitions/TenantUser'
  TenantUser:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [users]
      id:
        type: "string"
      attributes:
        $ref: '#/definitions/TenantUserAttr'  
  TenantUserAttr:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      tenantId:
        type: "string"
      username:
        type: "string"
      password: 
        type: "string"
      sendOnboardingEmail:
        type: "boolean"
      onboardingToken:
        type: "string"
      userVerified:
        type: "boolean"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
      domains:
        type: "array"
        items: 
          type: "string"
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"

  JsonApiRelationship:
    type: "object"
    properties:
      data: 
        type: "array"
        items:
          $ref: '#/definitions/JsonApiRelationshipData'
  JsonApiRelationshipData:
    type: "object"
    properties:
      type: 
        type: "string"
      id:
        type: "string"

  JsonApiTenantDomain:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/TenantDomain'
  JsonApiTenantDomainList:
    type: "object"
    properties:
      data:
        type: "array"
        items:
           $ref: '#/definitions/TenantDomain'
  TenantDomain:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [domains]
      id:
        type: "string"
      attributes:
        $ref: '#/definitions/TenantDomainAttr'
      relationships:
        $ref: '#/definitions/TenantDomainRelationships'
  TenantDomainAttr:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      tenantId:
        type: "string"
      name:
        type: "string"
      color: 
        type: "string"
      # thresholdProfileSet:
      #   type: "array"
      #   items: 
      #     type: "string"
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  TenantDomainRelationships:
    type: "object"
    properties:
      thresholdProfiles:
        $ref: '#/definitions/JsonApiRelationship'

  JsonApiTenantMonitoredObject:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/TenantMonitoredObject'
  JsonApiTenantMonitoredObjectList:
    type: "object"
    properties:
      data:
        type: "array"
        items:
           $ref: '#/definitions/TenantMonitoredObject'
  TenantMonitoredObject:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [monitoredObjects]
      id:
        type: "string"
      attributes:
        $ref: '#/definitions/TenantMonitoredObjectAttr'
      relationships:
        $ref: '#/definitions/TenantMonitoredObjectRelationships'
  TenantMonitoredObjectAttr:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      tenantId:
        type: "string"
      id:
        type: "string"
      actuatorName: 
        type: "string"
      actuatorType: 
        type: "string"
        enum: [unknown, accedian-nid, accedian-vnid]
      reflectorName: 
        type: "string"
      reflectorType: 
        type: "string"
        enum: [unknown, accedian-nid, accedian-vnid]
      objectName: 
        type: "string"
      objectType: 
        type: "string"
        enum: [unknown, flowmeter, twamp-pe, twamp-sf, twamp-sl]
      # domainSet:
      #   type: "array"
      #   items: 
      #     type: "string"
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  TenantMonitoredObjectRelationships:
    type: "object"
    properties:
      domains:
        $ref: '#/definitions/JsonApiRelationship'

  CreateTenantMonitoredObjectRequest:
    type: "object"
    properties:
      tenantId:
        type: "string"
      id:
        type: "string"
      actuatorName: 
        type: "string"
      actuatorType: 
        type: "string"
        enum: [unknown, accedian-nid, accedian-vnid]
      reflectorName: 
        type: "string"
      reflectorType: 
        type: "string"
        enum: [unknown, accedian-nid, accedian-vnid]
      objectName: 
        type: "string"
      objectType: 
        type: "string"
        enum: [unknown, flowmeter, twamp-pe, twamp-sf, twamp-sl]
      domainSet:
        type: "array"
        items: 
          type: "string"

  MonitoredObjectCountByDomainRequest:
    type: "object"
    properties:
      byCount: 
        type: "boolean"
      domainSet:
        type: "array"
        items: 
          type: "string"
  MonitoredObjectCountByDomainResponse:
    type: "object"
    properties:
      domainToMonitoredObjectCountMap:
        type: "object"
        additionalProperties:
          type: "integer"
      domainToMonitoredObjectSetMap:
        type: "object"
        additionalProperties:
          type: "array"
          items: 
            type: "string"

  BulkOperationResult:
    type: "object"
    properties:
      ok:
        type: "boolean"
      id:
        type: "string"
      rev:
        type: "string"
      error:
        type: "string"
      reason:
        type: "string"

  JsonApiTenantIngestionProfile:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/TenantIngestionProfile'
  TenantIngestionProfile:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [ingestionProfiles]
      id:
        type: "string"
      attributes:
        $ref: '#/definitions/TenantIngestionProfileAttr'
  TenantIngestionProfileAttr:
    type: "object"
    properties:
      tenantId:
        type: "string"
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      metrics:
        $ref: '#/definitions/TenantIngestionProfileVendorMap'
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  TenantIngestionProfileVendorMap:
    type: "object"
    properties:
      vendorMap:
        type: "object"
        additionalProperties:
          $ref: '#/definitions/TenantIngestionProfileVendorMapMonitoredObjectTypeMap'
  TenantIngestionProfileVendorMapMonitoredObjectTypeMap:
    type: "object"
    properties:
      monitoredObjectTypeMap:
        type: "object"
        additionalProperties:
          $ref: '#/definitions/TenantIngestionProfileVendorMapMonitoredObjectTypeMapMetricMap'
  TenantIngestionProfileVendorMapMonitoredObjectTypeMapMetricMap:
    type: "object"
    additionalProperties:
      type: "boolean"
  JsonApiTenantReportScheduleConfig:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/TenantReportScheduleConfig'
  TenantReportScheduleConfig:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [reportScheduleConfigs]
      id:
        type: "string"
      attributes:
        $ref: '#/definitions/TenantReportScheduleConfigAttr'
  TenantReportScheduleConfigAttr:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      tenantId:
        type: "string"
      datePeriodDays: 
        type: "integer"
      domain: 
        type: "array"
        items: 
          type: "string"
      thresholdProfileId: 
        type: "string"
      granularity: 
        type: "string"
      timeout: 
        type: "integer"
      #timezone: 
      #  type: "integer"
      reportName: 
        type: "string"
      minute: 
        type: "integer"
      hour: 
        type: "integer"
      dayMonth: 
        type: "integer"
      month: 
        type: "integer"
      dayWeek: 
        type: "integer"
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  JsonApiTenantThresholdProfile:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/TenantThresholdProfile'
  JsonApiTenantThresholdProfileList:
    type: "object"
    properties:
      data:
        type: "array"
        items:
           $ref: '#/definitions/TenantThresholdProfile'
  TenantThresholdProfile:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [thresholdProfiles]
      id:
        type: "string"
      attributes:
        $ref: '#/definitions/TenantThresholdProfileAttr'
  TenantThresholdProfileAttr:
    type: "object"
    properties:
      tenantId:
        type: "string"
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      thresholds:
        $ref: '#/definitions/TenantThresholdProfileVendorMap'
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  TenantThresholdProfileVendorMap:
    type: "object"
    properties:
      vendorMap:
        type: "object"
        additionalProperties:
          $ref: '#/definitions/TenantThresholdProfileMetric'
  TenantThresholdProfileMetric:
    type: "object"
    properties:
      metricMap:
        type: "object"
        additionalProperties:
          $ref: '#/definitions/TenantThresholdProfileUIEventAttrMap'
      monitoredObjectTypeMap:
        type: "object"
        additionalProperties:
          $ref: '#/definitions/TenantThresholdProfileMonitoredObjectTypeMapMetricMap'
  TenantThresholdProfileUIEventAttrMap:
    type: "object"
    properties:
      eventAttrMap:
        type: "object"
        additionalProperties:
          type: "string"
  TenantThresholdProfileMonitoredObjectTypeMapMetricMap:
    type: "object"
    properties:
      metricMap:
        type: "object"
        additionalProperties:
          $ref: '#/definitions/TenantThresholdProfileMonitoredObjectTypeMapMetricMapDirectionMap'
  TenantThresholdProfileMonitoredObjectTypeMapMetricMapDirectionMap:
    type: "object"
    properties:
      directionMap:
        type: "object"
        additionalProperties:
          $ref: '#/definitions/TenantThresholdProfileMonitoredObjectTypeMapMetricMapDirectionMapEventMap'
  TenantThresholdProfileMonitoredObjectTypeMapMetricMapDirectionMapEventMap:
    type: "object"
    properties:
      eventMap:
        type: "object"
        additionalProperties:
          $ref: '#/definitions/TenantThresholdProfileMonitoredObjectTypeMapMetricMapDirectionMapEventMapEventAttrMap'
  TenantThresholdProfileMonitoredObjectTypeMapMetricMapDirectionMapEventMapEventAttrMap:
    type: "object"
    properties:
      eventAttrMap:
        type: "object"
        additionalProperties:
          type: "string"

  JsonApiTenantMetadata:
    type: "object"
    properties:
      data:
        $ref: '#/definitions/TenantMetadata'
  TenantMetadata:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [tenantMetadata]
      id:
        type: "string"
      attributes:
        $ref: '#/definitions/TenantMetadataAttr'
      relationships:
        $ref: '#/definitions/TenantMetadataRelationships'
  TenantMetadataAttr:
    type: "object"
    properties:
      tenantId:
        type: "string"
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      tenantName:
        type: "string"
      # defaultThresholdProfile:
      #   type: "string"
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  TenantMetadataRelationships:
    type: "object"
    properties:
      defaultThresholdProfile:
        $ref: '#/definitions/JsonApiRelationship'

  # Here down are Metrics Service object definitions that are currently carried over from the 
  # Protobuf definitions we were using. Until we clean this up with the jsonapi implementation
  # this will remain
  gathergrpcJSONAPIObject:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/gathergrpcData'
      errors:
        type: array
        items:
          $ref: '#/definitions/gathergrpcError'
      metadata:
        type: object
        additionalProperties:
          type: string
      jsonapi:
        type: object
        additionalProperties:
          type: string
      links:
        $ref: '#/definitions/gathergrpcLinks'
      included:
        type: array
        items:
          $ref: '#/definitions/gathergrpcResource'
  gathergrpcLinks:
    type: object
    properties:
      related:
        $ref: '#/definitions/LinksRelated'
      self:
        type: string
      first:
        type: string
      next:
        type: string
      prev:
        type: string
      last:
        type: string
      about:
        type: string
      article:
        type: string
    description: |-
      Links technically allow any valid json string as a key,
      we obviously can't do this, so we have to stick to the following.
  LinksRelated:
    type: object
    properties:
      href:
        type: string
      metadata:
        type: object
        additionalProperties:
          type: string
  gathergrpcResource:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      attributes:
        type: object
        additionalProperties:
          type: string
      links:
        $ref: '#/definitions/gathergrpcLinks'
      metadata:
        type: object
        additionalProperties:
          type: string
      relationships:
        $ref: '#/definitions/gathergrpcRelationships'
  gathergrpcRelationships:
    type: object
    properties:
      links:
        $ref: '#/definitions/gathergrpcLinks'
      data:
        $ref: '#/definitions/protobufAny'
      metadata:
        type: object
        additionalProperties:
          type: string
  protobufAny:
    type: object
    properties:
      type_url:
        type: string
        description: |-
          A URL/resource name whose content describes the type of the
          serialized protocol buffer message.

          For URLs which use the scheme `http`, `https`, or no scheme, the
          following restrictions and interpretations apply:

          * If no scheme is provided, `https` is assumed.
          * The last segment of the URL's path must represent the fully
            qualified name of the type (as in `path/google.protobuf.Duration`).
            The name should be in a canonical form (e.g., leading "." is
            not accepted).
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
      value:
        type: string
        format: byte
        description: Must be a valid serialized protocol buffer of the above specified type.
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := ptypes.MarshalAny(foo)
           ...
           foo := &pb.Foo{}
           if err := ptypes.UnmarshalAny(any, foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".


      JSON
      ====
      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  gathergrpcData:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      attributes:
        $ref: '#/definitions/protobufAny'
  gathergrpcError:
    type: object
    properties:
      id:
        type: string
      links:
        $ref: '#/definitions/gathergrpcLinks'
      status:
        type: string
      code:
        type: string
      title:
        type: string
      detail:
        type: string
      metadata:
        type: object
        additionalProperties:
          type: string
      source:
        type: object
        additionalProperties:
          type: string