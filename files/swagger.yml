swagger: '2.0'
host: 'localhost:10001'
info:
  title: Gather
  description: |-
    Gather API Documentation

    Majority of Gather API responses conform to the jsonapi format (http://jsonapi.org/). Conforming
    to the jsonapi response format means that the response objects will share a common structure, however
    the data in the response is determined by the context of the request. Using Swagger 2.0 to define this 
    structure does not allow specific response structures for each API definition. As such, when looking
    at the response for a given API it is important to look at the structure of the corresponding model 
    described in the "Models section".  
  version: 1.0.0
  contact:
    email: "mpreston@accedian.com"
basePath: "/api"
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
  - application/vnd.api+json
paths:
  /v1/admin:
    post:
      summary: Create a User with Administrative access.
      operationId: CreateAdminUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'AdminUser'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAdminUserRequest'
      tags:
        - AdminProvisioningService
    put:
      summary: Update a User with Administrative access.
      operationId: UpdateAdminUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'AdminUser'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAdminUserRequest'
      tags:
        - AdminProvisioningService
  /v1/admin-user-list:
    get:
      summary: Retrieve all Administrative Users.
      operationId: GetAllAdminUsers
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'AdminUser'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
      tags:
        - AdminProvisioningService
  '/v1/admin/{value}':
    get:
      summary: Retrieve an Administrative User by id.
      operationId: GetAdminUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'AdminUser'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
    delete:
      summary: Delete a User with Administrative access.
      operationId: DeleteAdminUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'AdminUser'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
  /v1/tenants:
    post:
      summary: Create a Tenant.
      operationId: CreateTenant
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'Tenant'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '400':
          description: "Request data does not pass validation"
        '409':
          description: "The Tenant being provisioned already exists"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTenantRequest'
      tags:
        - AdminProvisioningService
    put:
      summary: Update a Tenant.
      operationId: UpdateTenant
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'Tenant'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTenantRequest'
      tags:
        - AdminProvisioningService
  /v1/tenant-list:
    get:
      summary: Retrieve all Tenants.
      operationId: GetAllTenants
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'Tenant'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      tags:
        - AdminProvisioningService
  '/v1/tenants/{value}':
    get:
      summary: Retrieve a Tenant by id.
      operationId: GetTenant
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'Tenant'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
    delete:
      summary: Delete a Tenant
      operationId: DeleteTenant
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'Tenant'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
  '/v1/tenant-by-alias/{value}':
    get:
      summary: Returns the ID of a Tenant that matches the provided alias.
      operationId: GettenantIdByAlias
      produces:
        - text/plain
      responses:
        '200':
          description: ''
          schema:
                type: "string"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
  '/v1/tenant-summary-by-alias/{value}':
    get:
      summary: Returns a summary of the Tenant that matches the provided alias.
      operationId: GetTenantSummaryByAlias
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: "#/definitions/TenantSummary"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: value
          in: path
          required: true
          type: string
      tags:
        - AdminProvisioningService
  /v1/tenants/{tenantId}/users:
    post:
      summary: Create a User for a Tenant.
      operationId: CreateTenantUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantUser'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTenantUserRequest'
      tags:
        - TenantProvisioningService
    put:
      summary: Update a Tenant User
      operationId: UpdateTenantUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantUser'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTenantUserRequest'
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/user-list:
    get:
      summary: Retrieve all Users for the specified Tenant.
      operationId: GetAllTenantUsers
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantUser'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/users/{userId}':
    get:
      summary: Retrieve a Tenant User by id.
      operationId: GetTenantUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantUser'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
    delete:
      summary: Delete a Tenant User specified by the provided userId.
      operationId: DeleteTenantUser
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantUser'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/domains:
    post:
      summary: Create a Domain for a Tenant.
      operationId: CreateTenantDomain
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantDomain'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTenantDomainRequest'
      tags:
        - TenantProvisioningService
    put:
      summary: Update a Tenant Domain
      operationId: UpdateTenantDomain
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantDomain'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTenantDomainRequest'
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/domain-list:
    get:
      summary: Retrieve all Domains for the specified Tenant.
      operationId: GetAllTenantDomains
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantDomain'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/domains/{domainId}':
    get:
      summary: Retrieve a Tenant Domain by id.
      operationId: GetTenantDomain
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantDomain'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: domainId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
    delete:
      summary: Delete a Tenant Domain specified by the provided userId.
      operationId: DeleteTenantDomain
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantDomain'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: domainId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/monitored-objects:
    post:
      summary: Create a Monitored Object for a Tenant.
      operationId: CreateTenantMonitoredObject
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantMonitoredObject'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTenantMonitoredObjectRequest'
      tags:
        - TenantProvisioningService
    put:
      summary: Update a Tenant Monitored Object
      operationId: UpdateTenantMonitoredObject
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantMonitoredObject'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTenantMonitoredObjectRequest'
      tags:
        - TenantProvisioningService
  /v1/tenants/{tenantId}/monitored-object-list:
    get:
      summary: Retrieve all Monitored Objects for the specified Tenant.
      operationId: GetAllTenantMonitoredObjects
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantMonitoredObject'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/monitored-objects/{monObjId}':
    get:
      summary: Retrieve a Tenant Monitored Object by id.
      operationId: GetTenantMonitoredObject
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantMonitoredObject'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: monObjId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
    delete:
      summary: Delete a Tenant Monitored Object specified by the provided id.
      operationId: DeleteTenantMonitoredObject
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: "Response object model is of type 'TenantMonitoredObject'"
          schema:
            $ref: '#/definitions/JsonApiResponse'
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: monObjId
          in: path
          required: true
          type: string
        - name: tenantId
          in: path
          required: true
          type: string
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/monitored-object-domain-map':
    post:
      summary: Retrieve a mapping of Monitored Objects that are associated with each Domain.
      operationId: GetDomainToMonitoredObjectMap
      produces:
        - application/json        
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/MonitoredObjectCountByDomainResponse'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/MonitoredObjectCountByDomainRequest'
      tags:
        - TenantProvisioningService
  '/v1/tenants/{tenantId}/bulk/insert/monitored-objects':
    post:
      summary: Create one or more Monitored Objects in a single API request.
      operationId: BulkInsertMonitoredObjects
      produces:
        - application/json        
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/BulkOperationResult'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: tenantId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: "array"
            items: 
              - $ref: '#/definitions/CreateTenantMonitoredObjectRequest'
      tags:
        - TenantProvisioningService
# All API definitions below here are for the MetricsService and will need to be modified
# when the MetricsService is altered to use the jsonapi implementation.
  /v1/histogram:
    get:
      summary: Retrieve a histogram of measurements for given time range and metric
      operationId: GetHistogram
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gathergrpcJSONAPIObject'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: interval
          description: ISO-8601 Intervals.
          in: query
          required: false
          type: string
        - name: tenant
          in: query
          required: false
          type: string
        - name: domain
          in: query
          required: false
          type: string
        - name: granularity
          description: ISO-8601 period combination.
          in: query
          required: false
          type: string
        - name: direction
          in: query
          required: false
          type: string
        - name: metric
          in: query
          required: false
          type: string
        - name: granularityBuckets
          in: query
          required: false
          type: integer
          format: int32
        - name: resolution
          in: query
          required: false
          type: integer
          format: int32
        - name: vendor
          in: query
          required: false
          type: string
        - name: timeout
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - MetricsService
  /v1/raw-metrics:
    get:
      summary: Returns raw metrics from druid
      operationId: GetRawMetrics
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gathergrpcJSONAPIObject'
        '400':
          description: "Request data does not pass validation"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: interval
          description: ISO-8601 Intervals.
          in: query
          required: false
          type: string
        - name: tenant
          in: query
          required: false
          type: string
        - name: direction
          in: query
          required: false
          type: string
        - name: metric
          in: query
          required: false
          type: string
        - name: objectType
          in: query
          required: false
          type: string
        - name: monitoredObjectId
          in: query
          required: false
          type: string
        - name: timeout
          in: query
          required: false
          type: integer
          format: int32
        - name: granularity
          in: query
          required: false
          type: string
      tags:
        - MetricsService
  /v1/threshold-crossing:
    get:
      summary: Retrieve threshold crossing for given metric.
      operationId: GetThresholdCrossing
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gathergrpcJSONAPIObject'
        '400':
          description: "Request data does not pass validation"
        '404':
          description: "Unable to find Threshold Profile for provided id"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: interval
          description: ISO-8601 Intervals.
          in: query
          required: false
          type: string
        - name: tenant
          in: query
          required: false
          type: string
        - name: domain
          in: query
          required: false
          type: string
        - name: granularity
          description: ISO-8601 period combination.
          in: query
          required: false
          type: string
        - name: objectType
          in: query
          required: false
          type: string
        - name: direction
          in: query
          required: false
          type: string
        - name: metric
          in: query
          required: false
          type: string
        - name: thresholdProfileId
          in: query
          required: false
          type: string
        - name: vendor
          in: query
          required: false
          type: string
        - name: timeout
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - MetricsService
  /v1/threshold-crossing-by-monitored-object:
    get:
      operationId: GetThresholdCrossingByMonitoredObject
      produces:
        - application/vnd.api+json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/gathergrpcJSONAPIObject'
        '400':
          description: "Request data does not pass validation"
        '404':
          description: "Unable to find Threshold Profile for provided id"
        '500':
          description: "Unexpected error processing request"
      parameters:
        - name: interval
          description: ISO-8601 Intervals.
          in: query
          required: false
          type: string
        - name: tenant
          in: query
          required: false
          type: string
        - name: domain
          in: query
          required: false
          type: string
        - name: granularity
          description: ISO-8601 period combination.
          in: query
          required: false
          type: string
        - name: objectType
          in: query
          required: false
          type: string
        - name: direction
          in: query
          required: false
          type: string
        - name: metric
          in: query
          required: false
          type: string
        - name: thresholdProfileId
          in: query
          required: false
          type: string
        - name: vendor
          in: query
          required: false
          type: string
        - name: timeout
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - MetricsService
definitions:

  AdminUser:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      username:
        type: "string"
      password: 
        type: "string"
      sendOnboardingEmail:
        type: "boolean"
      onboardingToken:
        type: "string"
      userVerified:
        type: "boolean"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  CreateAdminUserRequest:
    type: "object"
    properties:
      username:
        type: "string"
      password: 
        type: "string"
      sendOnboardingEmail:
        type: "boolean"
      onboardingToken:
        type: "string"
      userVerified:
        type: "boolean"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
  UpdateAdminUserRequest:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      username:
        type: "string"
      password: 
        type: "string"
      sendOnboardingEmail:
        type: "boolean"
      onboardingToken:
        type: "string"
      userVerified:
        type: "boolean"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
      createdTimestamp:
        type: "integer"

  Tenant:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      name:
        type: "string"
      urlSubdomain:
        type: "string"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  CreateTenantRequest:
    type: "object"
    properties:
      name:
        type: "string"
      urlSubdomain:
        type: "string"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
  UpdateTenantRequest:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      name:
        type: "string"
      urlSubdomain:
        type: "string"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
      createdTimestamp:
        type: "integer"

  TenantSummary:
    type: "object"
    properties:
      id: 
        type: "string"
      alias:
        type: "string"
        
  TenantUser:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      tenantId:
        type: "string"
      username:
        type: "string"
      password: 
        type: "string"
      sendOnboardingEmail:
        type: "boolean"
      onboardingToken:
        type: "string"
      userVerified:
        type: "boolean"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
      domains:
        type: "array"
        items: 
          type: "string"
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  CreateTenantUserRequest:
    type: "object"
    properties:
      tenantId:
        type: "string"
      username:
        type: "string"
      password: 
        type: "string"
      sendOnboardingEmail:
        type: "boolean"
      onboardingToken:
        type: "string"
      userVerified:
        type: "boolean"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
      domains:
        type: "array"
        items: 
          type: "string"
  UpdateTenantUserRequest:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      tenantId:
        type: "string"
      username:
        type: "string"
      password: 
        type: "string"
      sendOnboardingEmail:
        type: "boolean"
      onboardingToken:
        type: "string"
      userVerified:
        type: "boolean"
      state:
        type: "string"
        enum: [USER_UNKNOWN, INVITED, ACTIVE, SUSPENDED, PENDING_DELETE]
      domains:
        type: "array"
        items: 
          type: "string"
      createdTimestamp:
        type: "integer"

  TenantDomain:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      tenantId:
        type: "string"
      name:
        type: "string"
      color: 
        type: "string"
      thresholdProfileSet:
        type: "array"
        items: 
          type: "string"
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  CreateTenantDomainRequest:
    type: "object"
    properties:
      tenantId:
        type: "string"
      name:
        type: "string"
      color: 
        type: "string"
      thresholdProfileSet:
        type: "array"
        items: 
          type: "string"
  UpdateTenantDomainRequest:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      tenantId:
        type: "string"
      name:
        type: "string"
      color: 
        type: "string"
      thresholdProfileSet:
        type: "array"
        items: 
          type: "string"
      createdTimestamp:
        type: "integer"

  TenantMonitoredObject:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      datatype:
        type: "string"
      tenantId:
        type: "string"
      id:
        type: "string"
      actuatorName: 
        type: "string"
      actuatorType: 
        type: "string"
        enum: [unknown, accedian-nid, accedian-vnid]
      reflectorName: 
        type: "string"
      reflectorType: 
        type: "string"
        enum: [unknown, accedian-nid, accedian-vnid]
      objectName: 
        type: "string"
      objectType: 
        type: "string"
        enum: [unknown, flowmeter, twamp-pe, twamp-sf, twamp-sl]
      domainSet:
        type: "array"
        items: 
          type: "string"
      createdTimestamp:
        type: "integer"
      lastModifiedTimestamp:
        type: "integer"
  CreateTenantMonitoredObjectRequest:
    type: "object"
    properties:
      tenantId:
        type: "string"
      id:
        type: "string"
      actuatorName: 
        type: "string"
      actuatorType: 
        type: "string"
        enum: [unknown, accedian-nid, accedian-vnid]
      reflectorName: 
        type: "string"
      reflectorType: 
        type: "string"
        enum: [unknown, accedian-nid, accedian-vnid]
      objectName: 
        type: "string"
      objectType: 
        type: "string"
        enum: [unknown, flowmeter, twamp-pe, twamp-sf, twamp-sl]
      domainSet:
        type: "array"
        items: 
          type: "string"
  UpdateTenantMonitoredObjectRequest:
    type: "object"
    properties:
      _id:
        type: "string"
      _rev:
        type: "string"
      tenantId:
        type: "string"
      id:
        type: "string"
      actuatorName: 
        type: "string"
      actuatorType: 
        type: "string"
        enum: [unknown, accedian-nid, accedian-vnid]
      reflectorName: 
        type: "string"
      reflectorType: 
        type: "string"
        enum: [unknown, accedian-nid, accedian-vnid]
      objectName: 
        type: "string"
      objectType: 
        type: "string"
        enum: [unknown, flowmeter, twamp-pe, twamp-sf, twamp-sl]
      domainSet:
        type: "array"
        items: 
          type: "string"
      createdTimestamp:
        type: "integer"
  MonitoredObjectCountByDomainRequest:
    type: "object"
    properties:
      byCount: 
        type: "boolean"
      domainSet:
        type: "array"
        items: 
          type: "string"
  MonitoredObjectCountByDomainResponse:
    type: "object"
    properties:
      domainToMonitoredObjectCountMap:
        type: "object"
        additionalProperties:
          type: "integer"
      domainToMonitoredObjectSetMap:
        type: "object"
        additionalProperties:
          type: "array"
          items: 
            type: "string"

  BulkOperationResult:
    type: "object"
    properties:
      ok:
        type: "boolean"
      id:
        type: "string"
      rev:
        type: "string"
      error:
        type: "string"
      reason:
        type: "string"

  JsonApiResponse:
    type: "object"
    properties:
      data:
        type: "array"
        items:
           - $ref: '#/definitions/AdminUser'
           - $ref: '#/definitions/Tenant'
           - $ref: '#/definitions/TenantUser'
           - $ref: '#/definitions/TenantDomain'
           - $ref: '#/definitions/TenantMonitoredObject'
      # relationships:
      #   type: "array"
      #   items:
      #     - $ref: '#/definitions/relationshipsJoe'
      #     - $ref: '#/definitions/relationshipsBob'
  
  # Here down are Metrics Service object definitions that are currently carried over from the 
  # Protobuf definitions we were using. Until we clean this up with the jsonapi implementation
  # this will remain
  gathergrpcJSONAPIObject:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/gathergrpcData'
      errors:
        type: array
        items:
          $ref: '#/definitions/gathergrpcError'
      metadata:
        type: object
        additionalProperties:
          type: string
      jsonapi:
        type: object
        additionalProperties:
          type: string
      links:
        $ref: '#/definitions/gathergrpcLinks'
      included:
        type: array
        items:
          $ref: '#/definitions/gathergrpcResource'
  gathergrpcLinks:
    type: object
    properties:
      related:
        $ref: '#/definitions/LinksRelated'
      self:
        type: string
      first:
        type: string
      next:
        type: string
      prev:
        type: string
      last:
        type: string
      about:
        type: string
      article:
        type: string
    description: |-
      Links technically allow any valid json string as a key,
      we obviously can't do this, so we have to stick to the following.
  LinksRelated:
    type: object
    properties:
      href:
        type: string
      metadata:
        type: object
        additionalProperties:
          type: string
  gathergrpcResource:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      attributes:
        type: object
        additionalProperties:
          type: string
      links:
        $ref: '#/definitions/gathergrpcLinks'
      metadata:
        type: object
        additionalProperties:
          type: string
      relationships:
        $ref: '#/definitions/gathergrpcRelationships'
  gathergrpcRelationships:
    type: object
    properties:
      links:
        $ref: '#/definitions/gathergrpcLinks'
      data:
        $ref: '#/definitions/protobufAny'
      metadata:
        type: object
        additionalProperties:
          type: string
  protobufAny:
    type: object
    properties:
      type_url:
        type: string
        description: |-
          A URL/resource name whose content describes the type of the
          serialized protocol buffer message.

          For URLs which use the scheme `http`, `https`, or no scheme, the
          following restrictions and interpretations apply:

          * If no scheme is provided, `https` is assumed.
          * The last segment of the URL's path must represent the fully
            qualified name of the type (as in `path/google.protobuf.Duration`).
            The name should be in a canonical form (e.g., leading "." is
            not accepted).
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
      value:
        type: string
        format: byte
        description: Must be a valid serialized protocol buffer of the above specified type.
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := ptypes.MarshalAny(foo)
           ...
           foo := &pb.Foo{}
           if err := ptypes.UnmarshalAny(any, foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".


      JSON
      ====
      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  gathergrpcData:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
      attributes:
        $ref: '#/definitions/protobufAny'
  gathergrpcError:
    type: object
    properties:
      id:
        type: string
      links:
        $ref: '#/definitions/gathergrpcLinks'
      status:
        type: string
      code:
        type: string
      title:
        type: string
      detail:
        type: string
      metadata:
        type: object
        additionalProperties:
          type: string
      source:
        type: object
        additionalProperties:
          type: string