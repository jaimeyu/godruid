  DashboardCreateRequest:
    type: "object"
    required: ["data"]
    description: "Object used to create a Dashboard in Datahub"
    properties:
      data:
        type: "object"
        required: ["type", "attributes"]
        properties:
          type: 
            type: "string"
            enum: [dashboards]
          id:
            type: "string"
          relationships:
            $ref: '#/definitions/DashboardRelationships'
          attributes:
            type: "object"
            required: ["name"]
            properties:
              name:
                type: "string"
                description: "User provided identifier for a Dashboard"
              category: 
                type: "string"
                description: "Name of the visual 'group' where this Dashboard will be displayed when looking at the list of all Dashboards in Datahub"
              metadataFilters:
                type: "array"
                items:
                  $ref: '#/definitions/MetadataFilter'
                description: "List of filters used to obtain a list of Monitoreed Objects which will be useds to provide metric data to the Dashboard"
              cardPositions:
                description: "Describes the locations of the Cards on the Dashboard in the Datahub UI"
                $ref: '#/definitions/CardPositions'
              
  DashboardUpdateRequest:
    type: "object"
    required: ["data"]
    description: "Object used to update a Dashboard in Datahub"
    properties:
      data:
        type: "object"
        required: ["type", "attributes", "id"]
        properties:
          type: 
            type: "string"
            enum: [dashboards]
          id:
            type: "string"
          relationships:
            $ref: '#/definitions/DashboardRelationships'
          attributes:
            type: "object"
            required: ["_rev"]
            properties:
              _rev:
                type: "string"
                description: "Value used to ensure updates to this object are handled in order."
              name:
                type: "string"
                description: "User provided identifier for a Dashboard"
              category: 
                type: "string"
                description: "Name of the visual 'group' where this Dashboard will be displayed when looking at the list of all Dashboards in Datahub"
              metadataFilters:
                type: "array"
                items:
                  $ref: '#/definitions/MetadataFilter'
                description: "List of filters used to obtain a list of Monitoreed Objects which will be useds to provide metric data to the Dashboard"
              cardPositions:
                description: "Describes the locations of the Cards on the Dashboard in the Datahub UI"
                $ref: '#/definitions/CardPositions'
  
  DashboardResponse:
    type: "object"
    required: ["data"]
    description: "A single object Dashboard response from Datahub"
    properties:
      data:
        $ref: '#/definitions/Dashboard'
  DashboardListResponse:
    type: "object"
    required: ["data"]
    description: "Response for one ore more Dashboards from Datahub"
    properties:
      data:
        type: "array"
        items:
           $ref: '#/definitions/Dashboard'
  
  Dashboard:
    type: "object"
    required: ["type", "id", "attributes"]
    description: "Represents a Dashboard used to display metric information on the Datahub UI"
    properties:
      type: 
        type: "string"
        enum: [dashboards]
      id:
        type: "string"
      relationships:
        $ref: '#/definitions/DashboardRelationships'
      attributes:
        type: "object"
        required: ["_rev", "name", "datatype", "port", "tenantId", "category", "metadataFilters", "cardPositions", "createdTimestamp", "lastModifiedTimestamp"]
        properties:
          _rev:
            type: "string"
            description: "Value used to ensure updates to this object are handled in order."
          datatype:
            description: "Name used to identify this type of record in Datahub"
            type: "string"
          tenantId:
            description: "Unique identifier of a Tenant in Datahub"
            type: "string"
          name:
            type: "string"
            description: "User provided identifier for a Dashboard"
          category: 
            type: "string"
            description: "Name of the visual 'group' where this Dashboard will be displayed when looking at the list of all Dashboards in Datahub"
          metadataFilters:
            description: "List of filters used to obtain a list of Monitoreed Objects which will be useds to provide metric data to the Dashboard"
            type: "array"
            items:
              $ref: '#/definitions/MetadataFilter'
          cardPositions:
            description: "Describes the locations of the Cards on the Dashboard in the Datahub UI"
            $ref: '#/definitions/CardPositions'
          createdTimestamp:
            type: "integer"
            format: "int64"
          lastModifiedTimestamp:
            type: "integer"
            format: "int64"
            description: "Time since epoch at which this object was last altered."

  CardPositions:
    type: "object"
    description: "Describes the locations of the Cards on the Dashboard in the Datahub UI"
    additionalProperties:
      type: "object"
      required: ["position"]
      properties:
        position: 
          type: "integer"
          description: "The placement order of this card on the Dashboard"
        dimensions:
          type: "object"
          description: "The amount of columns and rows this card will occupy"
          properties:
            columns: 
              type: "integer"
            rows: 
              type: "integer"

  MetadataFilter:
    type: "object"
    description: "Used to obtain a list of Monitoreed Objects which will be useds to provide metric data to the Dashboard"
    properties:
      key:
        type: "string"
      values:
        type: "array"
        items: 
          type: "string"

  DashboardRelationships:
    type: "object"
    properties:
      cards:
        description: "References the unique identifiers of the Cards that are used on this Dashboard in the Datahub UI"
        $ref: '#/definitions/JsonApiRelationship'
      thresholdProfile:
        description: "References the unique identifier of the Threshold Profile used to generate Threshold Crossing Events on this Dashboard in the Datahub UI"
        $ref: '#/definitions/JsonApiSingleRelationship'

  CardCreateRequest:
    type: "object"
    description: "Object used to create a Card in Datahub"
    required: ["data"]
    properties:
      data:
        type: "object"
        required: ["type", "attributes"]
        properties:
          type: 
            type: "string"
            enum: [cards]
          id:
            type: "string"
          attributes:
            type: "object"
            required: ["name", "state"]
            properties:
              name:
                type: "string"
              description: 
                type: "string"
              state: 
                type: "string"
                enum: [active, pending]
              visualization:
                $ref: '#/definitions/CardVisualization'
              metadataFilters:
                type: "array"
                items:
                  $ref: '#/definitions/MetadataFilter'
              metrics:
                type: "array"
                items:
                  $ref: '#/definitions/CardMetric'
              
  CardUpdateRequest:
    type: "object"
    description: "Object used to update a Card in Datahub"
    required: ["data"]
    properties:
      data:
        type: "object"
        required: ["type", "attributes", "id"]
        properties:
          type: 
            type: "string"
            enum: [cards]
          id:
            type: "string"
          attributes:
            type: "object"
            required: ["_rev"]
            properties:
              _rev:
                type: "string"
                description: "Value used to ensure updates to this object are handled in order."
              name:
                type: "string"
              description: 
                type: "string"
              state: 
                type: "string"
                enum: [active, pending]
              visualization:
                $ref: '#/definitions/CardVisualization'
              metadataFilters:
                type: "array"
                items:
                  $ref: '#/definitions/MetadataFilter'
              metrics:
                type: "array"
                items:
                  $ref: '#/definitions/CardMetric'
  
  CardResponse:
    type: "object"
    description: "A single object Card response from Datahub"
    required: ["data"]
    properties:
      data:
        $ref: '#/definitions/Card'
  CardListResponse:
    type: "object"
    description: "Response for one ore more Cards from Datahub"
    required: ["data"]
    properties:
      data:
        type: "array"
        items:
           $ref: '#/definitions/Card'
  
  Card:
    type: "object"
    description: "Models a single Card used by Dashboards in the Datahub UI"
    required: ["type", "id", "attributes"]
    properties:
      type: 
        type: "string"
        enum: [cards]
      id:
        type: "string"
      attributes:
        type: "object"
        required: ["_rev", "name", "datatype", "tenantId", "description", "state", "visualization", "metadataFilters", "metrics", "createdTimestamp", "lastModifiedTimestamp"]
        properties:
          _rev:
            type: "string"
            description: "Value used to ensure updates to this object are handled in order."
          datatype:
            type: "string"
            description: "Name used to identify this type of record in Datahub"
          tenantId:
            type: "string"
            description: "Unique identifier of a Tenant in Datahub"
          name:
            type: "string"
            description: "User provided identifier for a Card"
          description: 
            type: "string"
            description: "User provided description for a Card"
          state: 
            type: "string"
            enum: [active, pending]
          visualization:
            $ref: '#/definitions/CardVisualization'
            description: "Object which contains the components to display on this Card"
          metadataFilters:
              type: "array"
              items:
                $ref: '#/definitions/MetadataFilter'
          metrics:
            type: "array"
            description: "A list of the data which will be displayed in the Card visualization"
            items:
              $ref: '#/definitions/CardMetric'
          createdTimestamp:
            type: "integer"
            description: "Time since epoch at which this object was instantiated."
          lastModifiedTimestamp:
            type: "integer"
            description: "Time since epoch at which this object was last altered."

  CardVisualization:
    type: "object"
    properties:
      key:
        type: "string"
        description: "Label referencing the type of visualization to be displayed"
      label:
        type: "string"
        description: "User provided identifier for a Visualization"
      category:
        type: "string"
      icon:
        type: "string"
      component:
        type: "string"
      queryParams:
        type: "object"
        properties:
          limit:
            description : "Restricts the number ofresults to the provided limit."
            type: "integer"
          sortDescending:
            type: "boolean"
            description: "Items will be displayed sorted in descending order when true, ascending order when false"
            default: true
          aggregator:
            type: "string"
            description: "The type of aggregation to use when displaying the values"
            enum: ["min","max","avg"]
            default: "avg"
      availability:
        type: "object"
        properties:
          count: 
            type: "integer"
          type:
            type: "array"
            items:
              type: "string"
      defaultDimensions:
        type: "object"
        properties:
          columns: 
            type: "integer"
          rows: 
            type: "integer"
  
  CardMetric:
    type: "object"
    properties:
      key: # DEPRECATE FOR V3
        type: "string"
      label: # DEPRECATE FOR V3
        type: "string"
      vendorLabel: # DEPRECATE FOR V3
        type: "string"
      vendorKey: # DEPRECATE FOR V3
        type: "string"
      vendor:
        type: "string"
      objectType: # DEPRECATE FOR V3
        type: "string"
      unit:
        type: "string"
      type: # DEPRECATE FOR V3
        type: "string"
      rawMetricId: # DEPRECATE FOR V3
        type: "string"
      metric:
        type: "string"
      metricKey: # DEPRECATE FOR V3
        type: "string"
      enabled: # DEPRECATE FOR V3
        type: "boolean"
      monitoredObjectTypes:
        type: "array"
        items:
          type: "string"
      directions:
        type: "array"
        x-omitempty: true
        items:
          type: "string"
      units: # DEPRECATE FOR V3
        type: "array"
        items:
          type: "string"
      options:
        type: "object"
        properties:
          useExplicitSeries: # DEPRECATE FOR V3
            type: "boolean"
          useBins: # DEPRECATE FOR V3
            type: "boolean"
          formatUnit: # DEPRECATE FOR V3
            type: "string"
          bins: # DEPRECATE FOR V3
            type: "array"
            items:
              type: "number"
              format: "double"
          series: # DEPRECATE FOR V3
            type: "array"
            items:
              type: "string"
          type:
            type: "string"
            enum: ["measure","events","bins"]
          directions:
            type: "array"
            x-omitempty: true
            items:
              type: "string"
          buckets:
            type: "array"
            x-omitempty: true
            items:
              type: "object"
              additionalProperties: true
          aggregation:
            type: "string"
            enum: ["none","sum"]
