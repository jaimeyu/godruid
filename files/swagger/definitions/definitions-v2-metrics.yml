   
  # THRESHOLD CROSSING BY MONITORED OBJECT TOPN REPORT DEFINITIONS
  ## REQUEST DEFINITION 
  JsonApiThresholdCrossingByMOTopNRequest:
    description: JSON API compliant wrapper for the threshold crossing by monitored object topn query
    type: object
    properties:
      data:
        type: object
        required: [type, attributes]
        properties:
          id: 
            type: string
          type: 
            type: string
            enum: [thresholdCrossingByMOTopNs]
          attributes:
            $ref: '#/definitions/ThresholdCrossingByMOTopNConfig'

  ## RESPONSE DEFINITION
  JsonApiThresholdCrossingByMOTopNResponse:
    description: JSON API compliant wrapper for the threshold crossing by monitored object topn response
    type: object
    properties:
      data:
        type: object
        required: [type]
        properties:
          id:
            type: string
          type: 
            type: string
            enum: [thresholdCrossingByMOTopNs]
          attributes:
            type: object
            allOf:
              - $ref: '#/definitions/ThresholdCrossingByMOTopNConfig'
              - properties:
                  result:
                    $ref: '#/definitions/ThresholdCrossingByMOTopNReport'

  ## ENTITY DEFINITIONS
  ThresholdCrossingByMOTopNConfig:
    description: The necessary request parameters for the metric api call
    type: object
    required: [interval, thresholdProfileId, numResults, metric]
    properties:
      aggregator:
        description: the type of aggregation to determine the top N result set
        type: string
        enum: [min, max, avg]
        example:
          - max
          - min
          - avg
      interval:
        description: Time boundary for the metrics under consideration using the ISO-8601 standard
        type: string
        example: 2018-04-08T14:00:00/2018-04-09T15:00:00
      meta:
        description: An object that allows filtering on arbitrary metadata criteria and their values. Refer to the MetaFilter object for additional details
        $ref: '#/definitions/MetaFilter'
        example: {"region":["montreal","ottawa"], "group":["radio"]}
      thresholdProfileId:
        description: ID of the threshold profile that is used to select metrics and events
        type: string
        example: d1988d68-7444-4098-91eb-bd5a987397cb
      timeout:
        description: Query timeout in milliseconds
        type: integer
        example: 30000
      numResults:
        description: Query timeout in milliseconds
        type: integer
        format: int32
        example: 30000
      metric:
        description: The metric to be used for the top N query
        $ref: '#/definitions/MetricIdentifierFilter'
        
  
  ThresholdCrossingByMOTopNReport:
    description: The rendered response structure from the metric query
    type: array
    items:
      description: A set of entries detailing the number of event crossings per type ordered from most to least. Ranking is based on weighted criticality of each event type.
      type: object
      allOf:
        - $ref: '#/definitions/ResultEntryParameters'
        - properties:
            result:
              type: object
              properties:
                critical:
                  description: Number of critical event crossings for this metric
                  type: integer
                major:
                  description: Number of major event crossings for this metric
                  type: integer
                minor:
                  description: Number of minor event crossings for this metric
                  type: integer
                info:
                  description: Number of info event crossings for this metric
                  type: integer
                warn:
                  description: Number of warning event crossings for this metric
                  type: integer
                scored:
                  description: The score that determined the ranking of this specific entry within the topn
                  type: number
                  format: float
                total:
                  description: Total number of event crossings
                  type: integer

  # SLA REPORT DEFINITIONS
  ## REQUEST DEFINITION 
  JsonApiSLAReportRequest:
    description: JSON API compliant wrapper for the SLA report query
    type: object
    properties:
      data:
        type: object
        required: [type, attributes]
        properties:
          id: 
            type: string
          type: 
            type: string
            enum: [slaReports]
          attributes:
            $ref: '#/definitions/SLAReportConfig'

  ## RESPONSE DEFINITION
  JsonApiSLAReportResponse:
    description: JSON API compliant wrapper for the SLA report response
    type: object
    properties:
      data:
        type: object
        required: [type]
        properties:
          id:
            type: string
          type: 
            type: string
            enum: [slaReports]
          attributes:
            type: object
            properties:
              config:   
                $ref: '#/definitions/SLAReportConfig'
              result:
                $ref: '#/definitions/SLAReport'

  ## ENTITY DEFINITIONS
  SLAReportConfig:
    description: The necessary request parameters for the metric api call
    type: object
    required: [interval, thresholdProfileId]
    properties:
      interval:
        description: Time boundary for the metrics under consideration using the ISO-8601 standard
        type: string
        example: 2018-04-08T14:00:00/2018-04-09T15:00:00
      meta:
        description: An object that allows filtering on arbitrary metadata criteria and their values. Refer to the MetaFilter object for additional details
        $ref: '#/definitions/MetaFilter'
        example: {"region":["montreal","ottawa"], "group":["radio"]}
      thresholdProfileId:
        description: ID of the threshold profile that is used to select metrics and events
        type: string
        example: d1988d68-7444-4098-91eb-bd5a987397cb
      granularity:
        description: The granularity for timeseries in ISO-8601 duration format, or ALL
        type: string
        example: PT1H
      timeout:
        description: Query timeout in milliseconds
        type: integer
        example: 30000
      timezone: 
        description: timezone used for time-based buckets (e.g. hour of day buckets) see http://joda-time.sourceforge.net/timezones.html
        type: string

  SLAReportSummary:
    description: The rendered response structure from the metric query
    type: object
    properties:
      objectCount:
        type: integer
      totalDuration:
        type: integer
      totalViolationCount:
        type: integer
      totalViolationDuration:
        type: integer
      slaCompliancePercent:
        type: number
        format: float
      byGranularity:
        type: array
        x-omitempty: true
        items:
            $ref: '#/definitions/SLATotalsTimestamp'
    required: 
      - objectCount
      - totalDuration
      - totalViolationCount
      - totalViolationDuration
      - slaCompliancePercent
  SLATotalsTimestamp:
    type: object
    required:
      - timestamp
      - totalDuration
      - totalViolationCount
      - totalViolationDuration
    properties:
      timestamp:
        type: string
      totalDuration:
        type: integer
      totalViolationCount:
        type: integer
      totalViolationDuration:
        type: integer
  SLAReport:
    type: object
    properties:
      summary:
        $ref: '#/definitions/SLAReportSummary'
      metric:
        type: array
        items:
          $ref: '#/definitions/SLAReportMetric'
  SLAReportMetric:
    
    allOf:
    - $ref: '#/definitions/MetricIdentifier'
    - properties:
        byGranularity:
            type: array
            x-omitempty: true
            items:
                $ref: '#/definitions/SLAMetricEntryTimeStamp'
        byHourOfDay:
            type: array
            x-omitempty: true
            items:
                $ref: '#/definitions/SLAMetricByHourOfDay'
        byDayOfWeek:
            type: array
            x-omitempty: true
            items:
                $ref: '#/definitions/SLAMetricByDayOfWeek'
  SLAMetricByHourOfDay:
    type: object
    required: 
      - hourOfDay
      - violationCount
    properties:
      hourOfDay:
        type: string
      violationCount:
        type: integer
  SLAMetricByDayOfWeek:
    type: object
    required:
      - violationCount
      - dayOfWeek
    properties:
      dayOfWeek:
        type: string
      violationCount:
        type: integer

  SLAMetricEntryTimeStamp:
    type: object
    required:
      - timestamp
      - totalDuration
      - violationCount
      - violationDuration
    properties:
      timestamp:
        type: string
      totalDuration:
        type: integer
      violationCount:
        type: integer
      violationDuration:
        type: integer
  SLAMetricEntry:
    type: object
    required:
            - totalDuration
            - violationCount
            - violationDuration
    properties:
      totalDuration:
        type: integer
      violationCount:
        type: integer
      violationDuration:
        type: integer
  # RAW METRICS DEFINITIONS
  ## ENTITY DEFINITIONS
  FilteredRawMetricsRequestObject:
    type: object
    required: [tenantId, interval, objectType, metrics, directions]
    properties:
      tenantId:
        type: string
        description: The tenant identifier
        example: 8501f157-b7f5-41c3-aaba-c75e0566c54c
      meta:
        description: An object that allows filtering on arbitrary metadata criteria and their values. Refer to the MetaFilter object for additional details
        $ref: '#/definitions/MetaFilter'
        example: {"region":["montreal","ottawa"], "group":["radio"]}
      interval:
        description: Time boundary for the metrics under consideration using the ISO-8601 standard
        type: string
        example: 2018-04-08T14:00:00/2018-04-09T15:00:00
      timeout:
        description: Query timeout in milliseconds
        type: integer
        example: 30000
      metrics:
        description: Array of metric names to be used as a whitelist to be considered for the raw metrics request
        type: array
        items:
          type: string
      directions:
        description: Array of directions to be used as a whitelist to be considered for the raw metrics request
        type: array
        items:
          type: string
      objectType:
        description: The type of monitored object that we want to consider for the request
        type: string
        example: twamp-sf
      granularity:
        description: the granularity for timeseries in ISO-8601 duration format, or ALL
        type: string
        example: PT1H, all
          
  # AGGREGATION DEFINITIONS
  ## REQUEST DEFINITION
  JsonApiAggregationRequest:
    description: JSON API compliant wrapper for the aggregation query
    type: object
    properties:
      data:
        type: object
        required: [type, attributes]
        properties:
          id: 
            type: string
          type: 
            type: string
            enum: [aggregateMetrics]
          attributes:
            $ref: '#/definitions/AggregationConfig'

  ## RESPONSE DEFINITION
  JsonApiAggregationResponse:
    description: JSON API compliant wrapper for the aggregation response
    type: object
    properties:
      data:
        type: object
        required: [type]
        properties:
          id:
            type: string
          type: 
            type: string
            enum: [aggregateMetrics]
          attributes:
            type: object
            allOf:
              - $ref: '#/definitions/AggregationConfig'
              - properties:
                  result:
                    $ref: '#/definitions/AggregationReport'

  ## ENTITY DEFINITIONS
  AggregationConfig:
    description: The necessary request parameters for the metric api call
    type: object
    required: [interval, aggregation, metrics]
    properties:
      monitoredObjects:
        description: An optional array of monitored objects that we want to retrieve specific aggregations against. This attribute cannot be used if the meta attribute is also present in the request.
        x-omitempty: true
        type: array
        items:
          type: string
        example: 
          - 7c3d3280-628c-c778-92ec-4e9b83fcbb4d
          - 41f1b537-b7f5-41c3-a1b2-a75e1536c54e
      meta:
        description: An object that allows filtering on arbitrary metadata criteria and their values. This attribute cannot be used if the monitoredObjects attribute is also present in the request. Refer to the MetaFilter object for additional details
        $ref: '#/definitions/MetaFilter'
        example: {"region":["montreal","ottawa"], "group":["radio"]}
      interval:
        description: Time boundary for the metrics under consideration using the ISO-8601 standard
        type: string
        example: 2018-04-08T14:00:00/2018-04-09T15:00:00
      granularity:
        description: The granularity for timeseries in ISO-8601 duration format, or ALL
        type: string
        example: PT1H
      timeout:
        description: Query timeout in milliseconds
        type: integer
        example: 30000
      aggregation:
        description: The aggregation function to be used against the metrics filtered-in for the query
        type: string
        enum: [min, max, avg]
        example:
          - min
          - max
          - avg
      metrics:
        description: An array of identifiers that filter-in specifically identified metrics.
        type: array
        items:
          $ref: '#/definitions/MetricIdentifierFilter'
      dimensions:
        description: An array of metric dimensions that filter-in metrics that adhere to those dimensions. Refer to the DimensionFilter object for further information
        $ref: '#/definitions/DimensionFilter'

  AggregationReport:
    description: The rendered response structure from the metric query
    type: array
    items:
      $ref: '#/definitions/MetricResultSeries'

  # HISTOGRAM DEFINITIONS
  ## REQUEST DEFINITION
  JsonApiHistogramRequest:
    description: JSON API compliant wrapper for the histogram query
    type: object
    properties:
      data:
        type: object
        required: [type, attributes]
        properties:
          id: 
            type: string
          type: 
            type: string
            enum: [histograms]
          attributes:
            $ref: '#/definitions/HistogramConfig'

  ## RESPONSE DEFINITION
  JsonApiHistogramResponse:
    description: JSON API compliant wrapper for the histogram response
    type: object
    properties:
      data:
        type: object
        required: [type]
        properties:
          id:
            type: string
          type: 
            type: string
            enum: [histograms]
          attributes:
            type: object
            allOf:
              - $ref: '#/definitions/HistogramConfig'
              - properties:
                  result:
                    $ref: '#/definitions/HistogramReport'

  ## ENTITY DEFINITIONS
  HistogramConfig:
    description: The necessary request parameters for the metric api call
    type: object
    required: [interval, metrics]
    properties:
      meta:
        description: An object that allows filtering on arbitrary metadata criteria and their values. Refer to the MetaFilter object for additional details
        $ref: '#/definitions/MetaFilter'
        example: {"region":["montreal","ottawa"], "group":["radio"]}
      interval:
        description: Time boundary for the metrics under consideration using the ISO-8601 standard
        type: string
        example: 2018-04-08T14:00:00/2018-04-09T15:00:00
      timeout:
        description: Query timeout in milliseconds
        type: integer
        example: 30000
      granularity:
        description: The granularity for timeseries in ISO-8601 duration format, or ALL
        type: string
        example: PT1H
      metrics:
        description: A list of the requested metric identifiers and the histogram buckets associated with those identifiers
        type: array
        items:
          allOf:
            - $ref: '#/definitions/MetricIdentifierFilter'
            - properties:
                buckets:
                  description: An ordered set of histogram buckets that should be filled with the appropriate metric data
                  example: > 
                    "buckets":[{"lower":{"value":0},"upper":{"value":200}},{"lower":{"value":200},"upper":{"value":400}},{"lower":{"value":400},"upper":{"value":600}},{"lower":{"value":600}}]
                  type: array
                  items:
                    type: object
                    properties:
                      lower:
                        description: The specification for the lower boundary of the bucket
                        type: object
                        required: [value]
                        properties:
                          value:
                            description: The lower, positive number to be used to describe the lowest value of the bucket. Omitting this value assumes that this bucket includes anything lower than the defined "upper" value
                            type: number
                            format: float
                          strict:
                            description: If set to true, then the lower value is assumed to be exclusive. Otherwise a value of false or the absence of this value assumes that the lower value is to be taken inclusively
                            type: boolean
                      upper:
                        description: The specification for the upper boundary of the bucket
                        type: object
                        required: [value]
                        properties:
                          value:
                            description: The upper, positive number to be used to describe the highest value of the bucket. Omitting this value assumes that this bucket includes anything higher than the defined "lower" value
                            type: number
                            format: float
                          strict:
                            description: If set to true, then the upper value is assumed to be exclusive. Otherwise a value of false or the absence of this value assumes that the upper value is to be taken inclusively
                            type: boolean
      dimensions:
        description: An array of metric dimensions that filter-in metrics that adhere to those dimensions. Refer to the DimensionFilter object for further information
        $ref: '#/definitions/DimensionFilter'

  HistogramReport:
    description: The rendered response structure from the metric query
    type: array
    items:
      allOf:
        - $ref: '#/definitions/ResultEntryParameters'
        - properties:
            series:
              description: An ordered list of metric values corresponding to the buckets provided in the histogram request
              type: array
              items:
                type: object
                required: [values]
                properties:
                  timestamp:
                    type: string
                  values:
                    type: array
                    items:
                      type: integer

  # TOPNFORMETRIC DEFINITIONS
  ## REQUEST DEFINITIONS
  JsonApiTopNForMetricRequest:
    description: JSON API compliant wrapper for the topn query
    type: object
    properties:
      data:
        type: object
        required: [type, attributes]
        properties:
          id:
            type: string
          type: 
            type: string
            enum: [topNForMetrics]
          attributes:
            $ref: '#/definitions/TopNForMetricConfig'

  ## RESPONSE DEFINITIONS
  JsonApiTopNForMetricResponse:
    description: JSON API compliant wrapper for the topn response
    type: object
    properties:
      data:
        type: object
        required: [type]
        properties:
          id:
            type: string
          type: 
            type: string
            enum: [topNForMetrics]
          attributes:
            type: object
            allOf:
              - $ref: '#/definitions/TopNForMetricConfig'
              - properties:
                  result:
                    $ref: '#/definitions/TopNForMetricReport'

  ## ENTITY DEFINITIONS
  TopNForMetricConfig:
    description: The necessary request parameters for the metric api call
    type: object
    required: [interval, aggregator, metric]
    properties:
      meta:
        description: An object that allows filtering on arbitrary metadata criteria and their values. Refer to the MetaFilter object for additional details
        $ref: '#/definitions/MetaFilter'
        example: {"region":["montreal","ottawa"], "group":["radio"]}
      monitoredObjects:
        description: An optional array of monitored objects that we want to retrieve specific topn against. This attribute cannot be used if the meta attribute is also present in the request.
        x-omitempty: true
        type: array
        items:
          type: string
        example: 
          - 7c3d3280-628c-c778-92ec-4e9b83fcbb4d
          - 41f1b537-b7f5-41c3-a1b2-a75e1536c54e
      interval:
        description: Time boundary for the metrics under consideration using the ISO-8601 standard
        type: string
        example: 2018-04-08T14:00:00/2018-04-09T15:00:00
      timeout:
        description: Query timeout in milliseconds
        type: integer
        example: 30000
      aggregator:
        type: string
        description: The type of aggregation (avg/min/max)
        enum: [min, max, avg]
        example:
          - min
          - max
          - avg
      numResults:
        description: Number of results to return
        type: integer
      metric:
        description: An identifier that considers one specific metric based on the provided information
        $ref: '#/definitions/MetricIdentifierFilter'
      dimensions:
        description: An array of metric dimensions that filter-in metrics that adhere to those dimensions. Refer to the DimensionFilter object for further information
        $ref: '#/definitions/DimensionFilter'
      metricsView:
        x-omitempty: true
        type: array
        items:
          $ref: '#/definitions/MetricView'

  MetricView:
    type: object
    required: [metric, aggregator, name]
    properties:
      metric:
        type: string
        example: delayP95_max
      aggregator:
        type: string
        example: min/max/sum/
      name:
        type: string
        example: delayP95

  TopNForMetricReport:
    description: The rendered response structure from the metric query
    type: array
    items:
      type: object
      allOf:
        - $ref: '#/definitions/ResultEntryParameters'
        - properties:
            result:
              description: Ranked list of top metric values for the specified criteria
              type: object
              required: [value]
              properties:
                count:
                  type: integer
                value:
                  type: number
                  format: float

  # THRESHOLD CROSSING DEFINITIONS
  ## REQUEST DEFINITION
  JsonApiThresholdCrossingRequest:
    description: JSON API compliant wrapper for the threshold crossing query
    type: object
    properties:
      data:
        type: object
        required: [type, attributes]
        properties:
          id:
            type: string
          type: 
            type: string
            enum: [thresholdCrossings]
          attributes:
            $ref: '#/definitions/ThresholdCrossingConfig'

  ## RESPONSE DEFINITION
  JsonApiThresholdCrossingResponse:
    description: JSON API compliant wrapper for the threshold crossing response
    type: object
    properties:
      data:
        type: object
        required: [type]
        properties:
          id:
            type: string
          type: 
            type: string
            enum: [thresholdCrossings]
          attributes:
            type: object
            properties:
              config:
                $ref: '#/definitions/ThresholdCrossingConfig'
              result:
                $ref: '#/definitions/ThresholdCrossingReport'
        
  ## ENTITY DEFINITIONS
  ThresholdCrossingConfig:
    description: The necessary request parameters for the metric api call
    type: object
    required: [interval, metrics]
    properties:
      meta:
        description: An object that allows filtering on arbitrary metadata criteria and their values. Refer to the MetaFilter object for additional details
        $ref: '#/definitions/MetaFilter'
        example: {"region":["montreal","ottawa"], "group":["radio"]}
      interval:
        description: Time boundary for the metrics under consideration using the ISO-8601 standard
        type: string
        example: 2018-04-08T14:00:00/2018-04-09T15:00:00
      granularity:
        description: the granularity for timeseries in ISO-8601 duration format, or ALL
        type: string
        example: PT1H
      thresholdProfileId:
        type: string
        description: ID of the threshold profile that is used to select metrics and events
        example: d1988d68-7444-4098-91eb-bd5a987397cb
      timeout:
        type: integer
        description: query timeout in milliseconds
        example: 30000
      metrics:
        type: array
        description: limits the results to include only metrics in the whitelist
        items:
          $ref: '#/definitions/MetricIdentifierFilter'

  ThresholdCrossingReport:
    type: object
    properties:
      metric:
        type: array
        items:
          $ref: '#/definitions/ThresholdCrossingReportMetric'

  ThresholdCrossingReportMetric:
    allOf: 
    - $ref: '#/definitions/MetricIdentifierFilter'
    - properties:
        critical:
            type: array
            items:
                $ref: '#/definitions/ThresholdCrossingViolations'
        major:
            type: array
            items:
                $ref: '#/definitions/ThresholdCrossingViolations'
        minor:
            type: array
            items:
                $ref: '#/definitions/ThresholdCrossingViolations'
        warning:
            type: array
            items:
                $ref: '#/definitions/ThresholdCrossingViolations'
        sla:
            type: array
            items:
                $ref: '#/definitions/ThresholdCrossingViolations'

  ThresholdCrossingViolations:
    type: object
    required:
      - violationCount
      - violationDuration
      - timestamp
    properties:
      timestamp:
        type: string
      violationCount:
        type: integer
      violationDuration:
        type: integer

  # COMMON METRIC ENTITIES
  ResultEntryParameters:
    description: Describes filtering criteria used for a particular query
    type: object
    required: [metric]
    properties:
      monitoredObjectIds:
        x-omitempty: true
        type: array
        items:
          type: string
      vendor:
        type: string
      objectType:
        x-omitempty: true
        type: array
        items:
          type: string
      metric:
        type: string
      direction:
        x-omitempty: true
        type: array
        items:
          type: string

  MetricResultSeries:
    description: Describes series data prefixed with the filter criteria that were used to generate the output
    type: object
    allOf:
      - $ref: '#/definitions/ResultEntryParameters'
      - properties:
          series:
            type: array
            items:
              $ref: '#/definitions/MetricResultEntry'
        required: [series]

  MetricResultEntry:
    description: A singular time series entry that contains the timestamp and value
    type: object
    required: [timestamp, value]
    properties:
      timestamp:
        type: string
      value:
        type: number
        format: double
