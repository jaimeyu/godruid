// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gathergrpc/adminModels.proto

package gathergrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Provides the metadata of a Tenant. This information is used to
// idetify/describe a full Tenant entity.
type TenantDescriptorData struct {
	Datatype              string    `protobuf:"bytes,2,opt,name=datatype" json:"datatype,omitempty"`
	Name                  string    `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	UrlSubdomain          string    `protobuf:"bytes,4,opt,name=urlSubdomain" json:"urlSubdomain,omitempty"`
	State                 UserState `protobuf:"varint,5,opt,name=state,enum=gathergrpc.UserState" json:"state,omitempty"`
	CreatedTimestamp      int64     `protobuf:"varint,6,opt,name=createdTimestamp" json:"createdTimestamp,omitempty"`
	LastModifiedTimestamp int64     `protobuf:"varint,7,opt,name=lastModifiedTimestamp" json:"lastModifiedTimestamp,omitempty"`
}

func (m *TenantDescriptorData) Reset()                    { *m = TenantDescriptorData{} }
func (m *TenantDescriptorData) String() string            { return proto.CompactTextString(m) }
func (*TenantDescriptorData) ProtoMessage()               {}
func (*TenantDescriptorData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *TenantDescriptorData) GetDatatype() string {
	if m != nil {
		return m.Datatype
	}
	return ""
}

func (m *TenantDescriptorData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TenantDescriptorData) GetUrlSubdomain() string {
	if m != nil {
		return m.UrlSubdomain
	}
	return ""
}

func (m *TenantDescriptorData) GetState() UserState {
	if m != nil {
		return m.State
	}
	return UserState_USER_UNKNOWN
}

func (m *TenantDescriptorData) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *TenantDescriptorData) GetLastModifiedTimestamp() int64 {
	if m != nil {
		return m.LastModifiedTimestamp
	}
	return 0
}

// TenantDescriptor - wrapper for passing TenantDescriptor
// data as a request to the service.
type TenantDescriptor struct {
	XId  string                `protobuf:"bytes,1,opt,name=_id,json=Id" json:"_id,omitempty"`
	XRev string                `protobuf:"bytes,2,opt,name=_rev,json=Rev" json:"_rev,omitempty"`
	Data *TenantDescriptorData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TenantDescriptor) Reset()                    { *m = TenantDescriptor{} }
func (m *TenantDescriptor) String() string            { return proto.CompactTextString(m) }
func (*TenantDescriptor) ProtoMessage()               {}
func (*TenantDescriptor) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *TenantDescriptor) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *TenantDescriptor) GetXRev() string {
	if m != nil {
		return m.XRev
	}
	return ""
}

func (m *TenantDescriptor) GetData() *TenantDescriptorData {
	if m != nil {
		return m.Data
	}
	return nil
}

// Wrapper message to provide a response in the form of
// a container of multiple TenantDescriptor objects.
type TenantDescriptorList struct {
	Data []*TenantDescriptor `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *TenantDescriptorList) Reset()                    { *m = TenantDescriptorList{} }
func (m *TenantDescriptorList) String() string            { return proto.CompactTextString(m) }
func (*TenantDescriptorList) ProtoMessage()               {}
func (*TenantDescriptorList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *TenantDescriptorList) GetData() []*TenantDescriptor {
	if m != nil {
		return m.Data
	}
	return nil
}

// User data for an Adminstrative User.
type AdminUserData struct {
	Datatype              string    `protobuf:"bytes,2,opt,name=datatype" json:"datatype,omitempty"`
	Username              string    `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	Password              string    `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	SendOnboardingEmail   bool      `protobuf:"varint,5,opt,name=sendOnboardingEmail" json:"sendOnboardingEmail,omitempty"`
	OnboardingToken       string    `protobuf:"bytes,6,opt,name=onboardingToken" json:"onboardingToken,omitempty"`
	UserVerified          bool      `protobuf:"varint,7,opt,name=userVerified" json:"userVerified,omitempty"`
	State                 UserState `protobuf:"varint,8,opt,name=state,enum=gathergrpc.UserState" json:"state,omitempty"`
	CreatedTimestamp      int64     `protobuf:"varint,9,opt,name=createdTimestamp" json:"createdTimestamp,omitempty"`
	LastModifiedTimestamp int64     `protobuf:"varint,10,opt,name=lastModifiedTimestamp" json:"lastModifiedTimestamp,omitempty"`
}

func (m *AdminUserData) Reset()                    { *m = AdminUserData{} }
func (m *AdminUserData) String() string            { return proto.CompactTextString(m) }
func (*AdminUserData) ProtoMessage()               {}
func (*AdminUserData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *AdminUserData) GetDatatype() string {
	if m != nil {
		return m.Datatype
	}
	return ""
}

func (m *AdminUserData) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AdminUserData) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AdminUserData) GetSendOnboardingEmail() bool {
	if m != nil {
		return m.SendOnboardingEmail
	}
	return false
}

func (m *AdminUserData) GetOnboardingToken() string {
	if m != nil {
		return m.OnboardingToken
	}
	return ""
}

func (m *AdminUserData) GetUserVerified() bool {
	if m != nil {
		return m.UserVerified
	}
	return false
}

func (m *AdminUserData) GetState() UserState {
	if m != nil {
		return m.State
	}
	return UserState_USER_UNKNOWN
}

func (m *AdminUserData) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *AdminUserData) GetLastModifiedTimestamp() int64 {
	if m != nil {
		return m.LastModifiedTimestamp
	}
	return 0
}

// AdminUser - wrapper for passing AdminUser
// data as a request to the service.
type AdminUser struct {
	XId  string         `protobuf:"bytes,1,opt,name=_id,json=Id" json:"_id,omitempty"`
	XRev string         `protobuf:"bytes,2,opt,name=_rev,json=Rev" json:"_rev,omitempty"`
	Data *AdminUserData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *AdminUser) Reset()                    { *m = AdminUser{} }
func (m *AdminUser) String() string            { return proto.CompactTextString(m) }
func (*AdminUser) ProtoMessage()               {}
func (*AdminUser) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *AdminUser) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *AdminUser) GetXRev() string {
	if m != nil {
		return m.XRev
	}
	return ""
}

func (m *AdminUser) GetData() *AdminUserData {
	if m != nil {
		return m.Data
	}
	return nil
}

// Wrapper message to provide a response in the form of
// a container of multiple AdminUser objects.
type AdminUserList struct {
	Data []*AdminUser `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *AdminUserList) Reset()                    { *m = AdminUserList{} }
func (m *AdminUserList) String() string            { return proto.CompactTextString(m) }
func (*AdminUserList) ProtoMessage()               {}
func (*AdminUserList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *AdminUserList) GetData() []*AdminUser {
	if m != nil {
		return m.Data
	}
	return nil
}

// Stores the available values of the metrics that may be ingested by ADH.
type IngestionDictionaryData struct {
	Datatype              string                                        `protobuf:"bytes,2,opt,name=datatype" json:"datatype,omitempty"`
	Metrics               map[string]*IngestionDictionaryData_MetricMap `protobuf:"bytes,3,rep,name=metrics" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedTimestamp      int64                                         `protobuf:"varint,4,opt,name=createdTimestamp" json:"createdTimestamp,omitempty"`
	LastModifiedTimestamp int64                                         `protobuf:"varint,5,opt,name=lastModifiedTimestamp" json:"lastModifiedTimestamp,omitempty"`
}

func (m *IngestionDictionaryData) Reset()                    { *m = IngestionDictionaryData{} }
func (m *IngestionDictionaryData) String() string            { return proto.CompactTextString(m) }
func (*IngestionDictionaryData) ProtoMessage()               {}
func (*IngestionDictionaryData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *IngestionDictionaryData) GetDatatype() string {
	if m != nil {
		return m.Datatype
	}
	return ""
}

func (m *IngestionDictionaryData) GetMetrics() map[string]*IngestionDictionaryData_MetricMap {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *IngestionDictionaryData) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *IngestionDictionaryData) GetLastModifiedTimestamp() int64 {
	if m != nil {
		return m.LastModifiedTimestamp
	}
	return 0
}

type IngestionDictionaryData_UIData struct {
	Group    string `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Position string `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
}

func (m *IngestionDictionaryData_UIData) Reset()         { *m = IngestionDictionaryData_UIData{} }
func (m *IngestionDictionaryData_UIData) String() string { return proto.CompactTextString(m) }
func (*IngestionDictionaryData_UIData) ProtoMessage()    {}
func (*IngestionDictionaryData_UIData) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{6, 0}
}

func (m *IngestionDictionaryData_UIData) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *IngestionDictionaryData_UIData) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

type IngestionDictionaryData_MonitoredObjectType struct {
	Key         string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	RawMetricId string   `protobuf:"bytes,2,opt,name=rawMetricId" json:"rawMetricId,omitempty"`
	Units       []string `protobuf:"bytes,3,rep,name=units" json:"units,omitempty"`
	Directions  []string `protobuf:"bytes,4,rep,name=directions" json:"directions,omitempty"`
}

func (m *IngestionDictionaryData_MonitoredObjectType) Reset() {
	*m = IngestionDictionaryData_MonitoredObjectType{}
}
func (m *IngestionDictionaryData_MonitoredObjectType) String() string {
	return proto.CompactTextString(m)
}
func (*IngestionDictionaryData_MonitoredObjectType) ProtoMessage() {}
func (*IngestionDictionaryData_MonitoredObjectType) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{6, 1}
}

func (m *IngestionDictionaryData_MonitoredObjectType) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *IngestionDictionaryData_MonitoredObjectType) GetRawMetricId() string {
	if m != nil {
		return m.RawMetricId
	}
	return ""
}

func (m *IngestionDictionaryData_MonitoredObjectType) GetUnits() []string {
	if m != nil {
		return m.Units
	}
	return nil
}

func (m *IngestionDictionaryData_MonitoredObjectType) GetDirections() []string {
	if m != nil {
		return m.Directions
	}
	return nil
}

type IngestionDictionaryData_MetricDefinition struct {
	MonitoredObjectTypes []*IngestionDictionaryData_MonitoredObjectType `protobuf:"bytes,1,rep,name=monitoredObjectTypes" json:"monitoredObjectTypes,omitempty"`
	Ui                   *IngestionDictionaryData_UIData                `protobuf:"bytes,2,opt,name=ui" json:"ui,omitempty"`
}

func (m *IngestionDictionaryData_MetricDefinition) Reset() {
	*m = IngestionDictionaryData_MetricDefinition{}
}
func (m *IngestionDictionaryData_MetricDefinition) String() string { return proto.CompactTextString(m) }
func (*IngestionDictionaryData_MetricDefinition) ProtoMessage()    {}
func (*IngestionDictionaryData_MetricDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{6, 2}
}

func (m *IngestionDictionaryData_MetricDefinition) GetMonitoredObjectTypes() []*IngestionDictionaryData_MonitoredObjectType {
	if m != nil {
		return m.MonitoredObjectTypes
	}
	return nil
}

func (m *IngestionDictionaryData_MetricDefinition) GetUi() *IngestionDictionaryData_UIData {
	if m != nil {
		return m.Ui
	}
	return nil
}

type IngestionDictionaryData_UIGroupData struct {
	MetricGroups []string `protobuf:"bytes,1,rep,name=metricGroups" json:"metricGroups,omitempty"`
}

func (m *IngestionDictionaryData_UIGroupData) Reset()         { *m = IngestionDictionaryData_UIGroupData{} }
func (m *IngestionDictionaryData_UIGroupData) String() string { return proto.CompactTextString(m) }
func (*IngestionDictionaryData_UIGroupData) ProtoMessage()    {}
func (*IngestionDictionaryData_UIGroupData) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{6, 3}
}

func (m *IngestionDictionaryData_UIGroupData) GetMetricGroups() []string {
	if m != nil {
		return m.MetricGroups
	}
	return nil
}

type IngestionDictionaryData_MetricMap struct {
	MetricMap map[string]*IngestionDictionaryData_MetricDefinition `protobuf:"bytes,1,rep,name=metricMap" json:"metricMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Ui        *IngestionDictionaryData_UIGroupData                 `protobuf:"bytes,2,opt,name=ui" json:"ui,omitempty"`
}

func (m *IngestionDictionaryData_MetricMap) Reset()         { *m = IngestionDictionaryData_MetricMap{} }
func (m *IngestionDictionaryData_MetricMap) String() string { return proto.CompactTextString(m) }
func (*IngestionDictionaryData_MetricMap) ProtoMessage()    {}
func (*IngestionDictionaryData_MetricMap) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{6, 4}
}

func (m *IngestionDictionaryData_MetricMap) GetMetricMap() map[string]*IngestionDictionaryData_MetricDefinition {
	if m != nil {
		return m.MetricMap
	}
	return nil
}

func (m *IngestionDictionaryData_MetricMap) GetUi() *IngestionDictionaryData_UIGroupData {
	if m != nil {
		return m.Ui
	}
	return nil
}

// Wrapper fos the object that stores the available values of the metrics that may be ingested by ADH.
type IngestionDictionary struct {
	XId  string                   `protobuf:"bytes,1,opt,name=_id,json=Id" json:"_id,omitempty"`
	XRev string                   `protobuf:"bytes,2,opt,name=_rev,json=Rev" json:"_rev,omitempty"`
	Data *IngestionDictionaryData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *IngestionDictionary) Reset()                    { *m = IngestionDictionary{} }
func (m *IngestionDictionary) String() string            { return proto.CompactTextString(m) }
func (*IngestionDictionary) ProtoMessage()               {}
func (*IngestionDictionary) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *IngestionDictionary) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *IngestionDictionary) GetXRev() string {
	if m != nil {
		return m.XRev
	}
	return ""
}

func (m *IngestionDictionary) GetData() *IngestionDictionaryData {
	if m != nil {
		return m.Data
	}
	return nil
}

// ValidTypesRequest - used as query parameters to the API which retrieves various value definitions used
// in Skylight Datahub
type ValidTypesRequest struct {
	MonitoredObjectTypes       bool `protobuf:"varint,1,opt,name=monitoredObjectTypes" json:"monitoredObjectTypes,omitempty"`
	MonitoredObjectDeviceTypes bool `protobuf:"varint,2,opt,name=monitoredObjectDeviceTypes" json:"monitoredObjectDeviceTypes,omitempty"`
}

func (m *ValidTypesRequest) Reset()                    { *m = ValidTypesRequest{} }
func (m *ValidTypesRequest) String() string            { return proto.CompactTextString(m) }
func (*ValidTypesRequest) ProtoMessage()               {}
func (*ValidTypesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *ValidTypesRequest) GetMonitoredObjectTypes() bool {
	if m != nil {
		return m.MonitoredObjectTypes
	}
	return false
}

func (m *ValidTypesRequest) GetMonitoredObjectDeviceTypes() bool {
	if m != nil {
		return m.MonitoredObjectDeviceTypes
	}
	return false
}

type ValidTypesData struct {
	MonitoredObjectTypes       map[string]string `protobuf:"bytes,1,rep,name=monitoredObjectTypes" json:"monitoredObjectTypes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MonitoredObjectDeviceTypes map[string]string `protobuf:"bytes,2,rep,name=monitoredObjectDeviceTypes" json:"monitoredObjectDeviceTypes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedTimestamp           int64             `protobuf:"varint,3,opt,name=createdTimestamp" json:"createdTimestamp,omitempty"`
	LastModifiedTimestamp      int64             `protobuf:"varint,4,opt,name=lastModifiedTimestamp" json:"lastModifiedTimestamp,omitempty"`
}

func (m *ValidTypesData) Reset()                    { *m = ValidTypesData{} }
func (m *ValidTypesData) String() string            { return proto.CompactTextString(m) }
func (*ValidTypesData) ProtoMessage()               {}
func (*ValidTypesData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ValidTypesData) GetMonitoredObjectTypes() map[string]string {
	if m != nil {
		return m.MonitoredObjectTypes
	}
	return nil
}

func (m *ValidTypesData) GetMonitoredObjectDeviceTypes() map[string]string {
	if m != nil {
		return m.MonitoredObjectDeviceTypes
	}
	return nil
}

func (m *ValidTypesData) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *ValidTypesData) GetLastModifiedTimestamp() int64 {
	if m != nil {
		return m.LastModifiedTimestamp
	}
	return 0
}

// ValidTypes - contains variious type definitions used in Skylight Datahhub
type ValidTypes struct {
	XId  string          `protobuf:"bytes,1,opt,name=_id,json=Id" json:"_id,omitempty"`
	XRev string          `protobuf:"bytes,2,opt,name=_rev,json=Rev" json:"_rev,omitempty"`
	Data *ValidTypesData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ValidTypes) Reset()                    { *m = ValidTypes{} }
func (m *ValidTypes) String() string            { return proto.CompactTextString(m) }
func (*ValidTypes) ProtoMessage()               {}
func (*ValidTypes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *ValidTypes) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *ValidTypes) GetXRev() string {
	if m != nil {
		return m.XRev
	}
	return ""
}

func (m *ValidTypes) GetData() *ValidTypesData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*TenantDescriptorData)(nil), "gathergrpc.TenantDescriptorData")
	proto.RegisterType((*TenantDescriptor)(nil), "gathergrpc.TenantDescriptor")
	proto.RegisterType((*TenantDescriptorList)(nil), "gathergrpc.TenantDescriptorList")
	proto.RegisterType((*AdminUserData)(nil), "gathergrpc.AdminUserData")
	proto.RegisterType((*AdminUser)(nil), "gathergrpc.AdminUser")
	proto.RegisterType((*AdminUserList)(nil), "gathergrpc.AdminUserList")
	proto.RegisterType((*IngestionDictionaryData)(nil), "gathergrpc.IngestionDictionaryData")
	proto.RegisterType((*IngestionDictionaryData_UIData)(nil), "gathergrpc.IngestionDictionaryData.UIData")
	proto.RegisterType((*IngestionDictionaryData_MonitoredObjectType)(nil), "gathergrpc.IngestionDictionaryData.MonitoredObjectType")
	proto.RegisterType((*IngestionDictionaryData_MetricDefinition)(nil), "gathergrpc.IngestionDictionaryData.MetricDefinition")
	proto.RegisterType((*IngestionDictionaryData_UIGroupData)(nil), "gathergrpc.IngestionDictionaryData.UIGroupData")
	proto.RegisterType((*IngestionDictionaryData_MetricMap)(nil), "gathergrpc.IngestionDictionaryData.MetricMap")
	proto.RegisterType((*IngestionDictionary)(nil), "gathergrpc.IngestionDictionary")
	proto.RegisterType((*ValidTypesRequest)(nil), "gathergrpc.ValidTypesRequest")
	proto.RegisterType((*ValidTypesData)(nil), "gathergrpc.ValidTypesData")
	proto.RegisterType((*ValidTypes)(nil), "gathergrpc.ValidTypes")
}

func init() { proto.RegisterFile("gathergrpc/adminModels.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 893 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x41, 0x8f, 0xdb, 0x44,
	0x14, 0x96, 0xed, 0x64, 0x1b, 0xbf, 0x2c, 0xdb, 0xed, 0xec, 0xae, 0x70, 0xad, 0x02, 0x91, 0xb9,
	0x84, 0xa2, 0xa6, 0x4b, 0x58, 0xa9, 0x28, 0x42, 0x20, 0x44, 0xaa, 0x92, 0x8a, 0xa8, 0x92, 0xbb,
	0xdb, 0x03, 0x07, 0xca, 0xac, 0x3d, 0x4d, 0x87, 0x8d, 0x3d, 0x66, 0x66, 0xbc, 0xd5, 0x72, 0xe1,
	0xc8, 0x8f, 0x80, 0x7f, 0xc2, 0x9f, 0x42, 0xdc, 0xb8, 0x21, 0xcf, 0x38, 0xb1, 0xbd, 0x71, 0x12,
	0x87, 0x53, 0x3c, 0x6f, 0xe6, 0x7d, 0xef, 0xbd, 0xef, 0xfb, 0x66, 0x14, 0x78, 0x30, 0xc3, 0xf2,
	0x2d, 0xe1, 0x33, 0x9e, 0x04, 0x8f, 0x71, 0x18, 0xd1, 0x78, 0xca, 0x42, 0x32, 0x17, 0x83, 0x84,
	0x33, 0xc9, 0x10, 0x14, 0xbb, 0xee, 0x07, 0xa5, 0x93, 0x01, 0x8b, 0x22, 0x56, 0x39, 0xea, 0xfd,
	0x6b, 0xc0, 0xf1, 0x39, 0x89, 0x71, 0x2c, 0xc7, 0x44, 0x04, 0x9c, 0x26, 0x92, 0xf1, 0x31, 0x96,
	0x18, 0xb9, 0xd0, 0x09, 0xb1, 0xc4, 0xf2, 0x26, 0x21, 0x8e, 0xd9, 0x33, 0xfa, 0xb6, 0xbf, 0x5c,
	0x23, 0x04, 0xad, 0x18, 0x47, 0xc4, 0xb1, 0x54, 0x5c, 0x7d, 0x23, 0x0f, 0xf6, 0x53, 0x3e, 0x7f,
	0x99, 0x5e, 0x86, 0x2c, 0xc2, 0x34, 0x76, 0x5a, 0x6a, 0xaf, 0x12, 0x43, 0x9f, 0x42, 0x5b, 0x48,
	0x2c, 0x89, 0xd3, 0xee, 0x19, 0xfd, 0x83, 0xe1, 0xc9, 0xa0, 0xe8, 0x6d, 0x70, 0x21, 0x08, 0x7f,
	0x99, 0x6d, 0xfa, 0xfa, 0x0c, 0x7a, 0x08, 0x87, 0x01, 0x27, 0x58, 0x92, 0xf0, 0x9c, 0x46, 0x44,
	0x48, 0x1c, 0x25, 0xce, 0x5e, 0xcf, 0xe8, 0x5b, 0xfe, 0x4a, 0x1c, 0x9d, 0xc1, 0xc9, 0x1c, 0x0b,
	0x39, 0x65, 0x21, 0x7d, 0x43, 0xcb, 0x09, 0x77, 0x54, 0x42, 0xfd, 0xa6, 0x37, 0x87, 0xc3, 0xdb,
	0xa3, 0xa3, 0xbb, 0x60, 0xbd, 0xa6, 0xa1, 0x63, 0xa8, 0xee, 0xcd, 0x49, 0x88, 0xee, 0x41, 0xeb,
	0x35, 0x27, 0xd7, 0x39, 0x07, 0x96, 0x4f, 0xae, 0xd1, 0x19, 0xb4, 0x32, 0x2a, 0xd4, 0xf8, 0xdd,
	0x61, 0xaf, 0x3c, 0x45, 0x1d, 0x95, 0xbe, 0x3a, 0xed, 0x7d, 0xb7, 0x4a, 0xf4, 0xf7, 0x54, 0x48,
	0x74, 0x9a, 0xa3, 0x19, 0x3d, 0xab, 0xdf, 0x1d, 0x3e, 0xd8, 0x84, 0x96, 0x23, 0xfd, 0x63, 0xc2,
	0x7b, 0xdf, 0x64, 0xa2, 0x67, 0x9c, 0x6d, 0x15, 0xcb, 0x85, 0x4e, 0x2a, 0x08, 0x2f, 0x09, 0xb6,
	0x5c, 0x67, 0x7b, 0x09, 0x16, 0xe2, 0x1d, 0xe3, 0x61, 0x2e, 0xd8, 0x72, 0x8d, 0x4e, 0xe1, 0x48,
	0x90, 0x38, 0x7c, 0x11, 0x5f, 0x32, 0xcc, 0x43, 0x1a, 0xcf, 0x9e, 0x46, 0x98, 0xce, 0x95, 0x74,
	0x1d, 0xbf, 0x6e, 0x0b, 0xf5, 0xe1, 0x2e, 0x5b, 0x86, 0xce, 0xd9, 0x15, 0x89, 0x95, 0x60, 0xb6,
	0x7f, 0x3b, 0xac, 0xcc, 0x22, 0x08, 0x7f, 0x45, 0xb8, 0x92, 0x44, 0xc9, 0xd4, 0xf1, 0x2b, 0xb1,
	0xc2, 0x2c, 0x9d, 0xff, 0x69, 0x16, 0x7b, 0x57, 0xb3, 0xc0, 0x26, 0xb3, 0xfc, 0x08, 0xf6, 0x92,
	0xf3, 0x46, 0x2e, 0x79, 0x54, 0x71, 0xc9, 0xfd, 0x72, 0xfb, 0x15, 0xf1, 0x72, 0x51, 0x47, 0x25,
	0x4d, 0x95, 0x2f, 0x3e, 0xa9, 0xf8, 0xe2, 0xa4, 0x36, 0x3f, 0xcf, 0xfd, 0xa3, 0x03, 0xef, 0x4f,
	0xe2, 0x19, 0x11, 0x92, 0xb2, 0x78, 0x4c, 0x83, 0xec, 0x07, 0xf3, 0x9b, 0xad, 0xd6, 0x78, 0x0e,
	0x77, 0x22, 0x22, 0x39, 0x0d, 0x84, 0x63, 0xa9, 0x2a, 0xa7, 0xe5, 0x2a, 0x6b, 0x10, 0x07, 0x53,
	0x9d, 0xf2, 0x34, 0x96, 0xfc, 0xc6, 0x5f, 0x00, 0xd4, 0x2a, 0xd0, 0xda, 0x55, 0x81, 0xf6, 0x06,
	0x05, 0xdc, 0x11, 0xec, 0x5d, 0x4c, 0xd4, 0x4c, 0xc7, 0xd0, 0x9e, 0x71, 0x96, 0x26, 0xb9, 0x00,
	0x7a, 0xa1, 0xcc, 0xcc, 0x04, 0xcd, 0x5a, 0x5d, 0x4c, 0xba, 0x58, 0xbb, 0xbf, 0xc1, 0xd1, 0x94,
	0xc5, 0x54, 0x32, 0x4e, 0xc2, 0x17, 0x97, 0x3f, 0x93, 0x40, 0x9e, 0x67, 0x04, 0x1c, 0x82, 0x75,
	0x45, 0x6e, 0x72, 0x98, 0xec, 0x13, 0xf5, 0xa0, 0xcb, 0xf1, 0x3b, 0x3d, 0xe2, 0x24, 0xcc, 0x71,
	0xca, 0xa1, 0xac, 0x78, 0x1a, 0x53, 0xa9, 0x29, 0xb3, 0x7d, 0xbd, 0x40, 0x1f, 0x02, 0x84, 0x94,
	0x13, 0x45, 0x94, 0x70, 0x5a, 0x6a, 0xab, 0x14, 0x71, 0xff, 0x32, 0xe0, 0x50, 0x43, 0x8c, 0xc9,
	0x1b, 0x1a, 0xab, 0xae, 0xd0, 0x15, 0x1c, 0x47, 0xab, 0x5d, 0x89, 0x5c, 0xf2, 0x27, 0x8d, 0xc4,
	0x58, 0xcd, 0xf7, 0x6b, 0x41, 0xd1, 0x08, 0xcc, 0x94, 0xaa, 0x81, 0xba, 0xc3, 0x87, 0x4d, 0xa0,
	0x35, 0xd9, 0xbe, 0x99, 0x52, 0xf7, 0x33, 0xe8, 0x5e, 0x4c, 0x9e, 0x65, 0x2c, 0x2b, 0xfe, 0x3d,
	0xd8, 0xd7, 0xb2, 0xab, 0x90, 0xee, 0xd7, 0xf6, 0x2b, 0x31, 0xf7, 0x4f, 0x13, 0x6c, 0x3d, 0xf0,
	0x14, 0x27, 0xe8, 0x07, 0xb0, 0xa3, 0xc5, 0x22, 0x1f, 0xef, 0xcb, 0xe6, 0x5e, 0x9b, 0xe2, 0xa4,
	0xf8, 0xd2, 0xbe, 0x2b, 0xe0, 0xd0, 0xd7, 0xa5, 0xc1, 0x1e, 0x37, 0x1b, 0x6c, 0x39, 0x8a, 0x9a,
	0x8e, 0xc3, 0x41, 0x15, 0xbd, 0xc6, 0x17, 0xcf, 0xa1, 0x7d, 0x8d, 0xe7, 0x29, 0xc9, 0xeb, 0x9c,
	0x35, 0x6f, 0xbe, 0xd0, 0xdb, 0xd7, 0x10, 0x23, 0xf3, 0x0b, 0xc3, 0xa5, 0xb0, 0x5f, 0xbe, 0x47,
	0x35, 0x15, 0xbf, 0xad, 0x56, 0x7c, 0xb4, 0x13, 0x5d, 0xa5, 0x52, 0x1e, 0x87, 0xa3, 0x9a, 0xf3,
	0x8d, 0xde, 0xb0, 0x27, 0x95, 0x37, 0xec, 0xe3, 0x06, 0x2d, 0xe4, 0x2f, 0xd2, 0xef, 0x06, 0xdc,
	0x7b, 0x85, 0xe7, 0x34, 0x54, 0xde, 0xf3, 0xc9, 0x2f, 0x29, 0x11, 0x12, 0x0d, 0xd7, 0xfa, 0x3d,
	0x7b, 0xfe, 0xeb, 0x6d, 0xfb, 0x15, 0xb8, 0xb7, 0xe2, 0x63, 0x72, 0x4d, 0x03, 0xa2, 0x33, 0x4d,
	0x95, 0xb9, 0xe1, 0x84, 0xf7, 0xb7, 0x05, 0x07, 0x45, 0x27, 0xca, 0xbe, 0x6f, 0x37, 0x5e, 0xbb,
	0x8a, 0xb4, 0xd5, 0xcc, 0xba, 0xdb, 0x96, 0xbf, 0x83, 0xf5, 0xcd, 0xff, 0xba, 0xa5, 0xf9, 0xac,
	0xde, 0xa8, 0x79, 0xbd, 0x52, 0xb2, 0xae, 0xba, 0x01, 0xbd, 0xf6, 0x41, 0xb6, 0x76, 0x7d, 0x90,
	0x5b, 0x9b, 0x1e, 0xe4, 0x67, 0x70, 0x7f, 0x2d, 0x21, 0x35, 0x86, 0x3e, 0x2e, 0x1b, 0xda, 0x2e,
	0x5f, 0x86, 0x29, 0x7c, 0xb4, 0x65, 0xd2, 0x5d, 0xe0, 0xbc, 0x9f, 0x00, 0x0a, 0x1e, 0x1b, 0xf9,
	0x7c, 0x50, 0xf1, 0xb9, 0xbb, 0x5e, 0x11, 0x6d, 0xef, 0xcb, 0x3d, 0xf5, 0xe7, 0xf9, 0xf3, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x05, 0x37, 0xd8, 0x87, 0x0b, 0x00, 0x00,
}
