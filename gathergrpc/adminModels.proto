syntax = "proto3";

package gathergrpc;

import "gathergrpc/commonModels.proto";


// Provides the metadata of a Tenant. This information is used to 
// idetify/describe a full Tenant entity.
message TenantDescriptor {
    string datatype = 1;

    string name = 2;
    string urlSubdomain = 3;
    UserState state = 4;

    int64 createdTimestamp = 5;
    int64 lastModifiedTimestamp = 6; 
}

// TenantDescriptorRequest - wrapper for passing TenantDescriptor
// data as a request to the service.
message TenantDescriptorRequest {
    string _id = 1;
    string _rev = 2;
    TenantDescriptor data = 3;
}

// TenantDescriptorResponse - wrapper for passing TenantDescriptor
// data as a response from the service.
message TenantDescriptorResponse {
    string _id = 1;
    string _rev = 2;
    TenantDescriptor data = 3;
}

// Wrapper message to provide a response in the form of
// a container of multiple TenantDescriptor objects.
message TenantDescriptorListResponse {
    repeated TenantDescriptorResponse data = 1;
}

// User data for an Adminstrative User.
message AdminUser {
    string datatype = 3;

    string username = 4;
    string password = 5;
    bool sendOnboardingEmail = 6;
    string onboardingToken = 7;
    bool userVerified = 8;
    UserState state = 9;

    int64 createdTimestamp = 10;
    int64 lastModifiedTimestamp = 11;
}

// AdminUserRequest - wrapper for passing AdminUser
// data as a request to the service.
message AdminUserRequest {
    string _id = 1;
    string _rev = 2;
    AdminUser data = 3;
}

// AdminUserResponse - wrapper for passing AdminUser
// data as a response from the service.
message AdminUserResponse {
    string _id = 1;
    string _rev = 2;
    AdminUser data = 3;
}

// Wrapper message to provide a response in the form of
// a container of multiple AdminUser objects.
message AdminUserListResponse {
    repeated AdminUserResponse data = 1;
}

// Stores the available values of the metrics that may be ingested by ADH.
message IngestionDictionaryData {

    message UIData {
        string group = 1;
        string position = 2;
    }
    message MonitoredObjectType {
        string key = 1;
        string rawMetricId = 2;
        string unit = 3;
        repeated string directions = 4;
    }
    message MetricDefinition {
        repeated MonitoredObjectType monitoredObjectTypes = 1;
        UIData ui = 2;
    }
    message MetricMap {
        map<string, MetricDefinition> metricMap = 1;
    }

    string datatype = 1;

    map<string, MetricMap> metrics = 2;

    int64 createdTimestamp = 10;
    int64 lastModifiedTimestamp = 11;
}

// Wrapper fos the object that stores the available values of the metrics that may be ingested by ADH.
message IngestionDictionary {
    string _id = 1;
    string _rev = 2;
    IngestionDictionaryData data = 3;
}