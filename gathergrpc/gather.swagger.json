{
  "swagger": "2.0",
  "info": {
    "title": "gathergrpc/gather.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/admin": {
      "post": {
        "summary": "Create a User with Administrative access.",
        "operationId": "CreateAdminUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcAdminUser"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcAdminUser"
            }
          }
        ],
        "tags": [
          "AdminProvisioningService"
        ]
      },
      "put": {
        "summary": "Update a User with Administrative access.",
        "operationId": "UpdateAdminUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcAdminUser"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcAdminUser"
            }
          }
        ],
        "tags": [
          "AdminProvisioningService"
        ]
      }
    },
    "/api/v1/admin-user-list": {
      "get": {
        "summary": "Retrieve all Administrative Users.",
        "operationId": "GetAllAdminUsers",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcAdminUserList"
            }
          }
        },
        "tags": [
          "AdminProvisioningService"
        ]
      }
    },
    "/api/v1/admin/{value}": {
      "get": {
        "summary": "Retrieve and Administrative User by id.",
        "operationId": "GetAdminUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcAdminUser"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminProvisioningService"
        ]
      },
      "delete": {
        "summary": "Delete a User with Administrative access.",
        "operationId": "DeleteAdminUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcAdminUser"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminProvisioningService"
        ]
      }
    },
    "/api/v1/histogram": {
      "get": {
        "summary": "Retrieve a histogram of measurements for given time range and metric",
        "operationId": "GetHistogram",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcJSONAPIObject"
            }
          }
        },
        "parameters": [
          {
            "name": "interval",
            "description": "ISO-8601 Intervals.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "granularity",
            "description": "ISO-8601 period combination.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "granularityBuckets",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resolution",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "MetricsService"
        ]
      }
    },
    "/api/v1/ingestion-dictionaries": {
      "get": {
        "summary": "Retrieve an IngestionDictionary used for the entire deployment.",
        "operationId": "GetIngestionDictionary",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcIngestionDictionary"
            }
          }
        },
        "tags": [
          "AdminProvisioningService"
        ]
      },
      "delete": {
        "summary": "Delete an IngestionDictionary used for the entire deployment.",
        "operationId": "DeleteIngestionDictionary",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcIngestionDictionary"
            }
          }
        },
        "tags": [
          "AdminProvisioningService"
        ]
      },
      "post": {
        "summary": "Create an IngestionDictionary used for the entire deployment.",
        "operationId": "CreateIngestionDictionary",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcIngestionDictionary"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcIngestionDictionary"
            }
          }
        ],
        "tags": [
          "AdminProvisioningService"
        ]
      },
      "put": {
        "summary": "Update an IngestionDictionary used for the entire deployment.",
        "operationId": "UpdateIngestionDictionary",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcIngestionDictionary"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcIngestionDictionary"
            }
          }
        ],
        "tags": [
          "AdminProvisioningService"
        ]
      }
    },
    "/api/v1/tenant-by-alias/{value}": {
      "get": {
        "summary": "Retrieve a TenantID based on the comman name of the tenant.",
        "operationId": "GetTenantIDByAlias",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufStringValue"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminProvisioningService"
        ]
      }
    },
    "/api/v1/tenant-list": {
      "get": {
        "summary": "Retrieve all Users scoped to a single Tenant.",
        "operationId": "GetAllTenantDescriptors",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDescriptorList"
            }
          }
        },
        "tags": [
          "AdminProvisioningService"
        ]
      }
    },
    "/api/v1/tenants": {
      "post": {
        "summary": "Creates a Tenant and returns a TenantDescriptor which provides \nmetadata for the newly created Tenant.",
        "operationId": "CreateTenant",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDescriptor"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDescriptor"
            }
          }
        ],
        "tags": [
          "AdminProvisioningService"
        ]
      },
      "put": {
        "summary": "Updates a TenantDescriptor, which provides metadata \nfor the specified Tenant.",
        "operationId": "UpdateTenantDescriptor",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDescriptor"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDescriptor"
            }
          }
        ],
        "tags": [
          "AdminProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{data.tenantId}/domains": {
      "post": {
        "summary": "Create a Domain scoped to a Single Tenant.",
        "operationId": "CreateTenantDomain",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDomain"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDomain"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "put": {
        "summary": "Update a Domain scoped to a single Tenant.",
        "operationId": "UpdateTenantDomain",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDomain"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDomain"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{data.tenantId}/ingestion-profiles": {
      "post": {
        "summary": "Create a Ingestion Profile scoped to a Single Tenant.",
        "operationId": "CreateTenantIngestionProfile",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantIngestionProfile"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantIngestionProfile"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "put": {
        "summary": "Updates an Ingestion Profile, which provides details on the data \ncollected for the Tenant.",
        "operationId": "UpdateTenantIngestionProfile",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantIngestionProfile"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantIngestionProfile"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{data.tenantId}/meta": {
      "post": {
        "summary": "Create TenantMeta scoped to a Single Tenant.",
        "operationId": "CreateTenantMeta",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantMetadata"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantMetadata"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "put": {
        "summary": "Update TenantMeta scoped to a single Tenant.",
        "operationId": "UpdateTenantMeta",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantMetadata"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantMetadata"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{data.tenantId}/monitored-objects": {
      "post": {
        "summary": "Create a MonitoredObject scoped to a Single Tenant.",
        "operationId": "CreateMonitoredObject",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcMonitoredObject"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcMonitoredObject"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "put": {
        "summary": "Update a MonitoredObject scoped to a single Tenant.",
        "operationId": "UpdateMonitoredObject",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcMonitoredObject"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcMonitoredObject"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{data.tenantId}/threshold-profiles": {
      "post": {
        "summary": "Create a Threshold Profile scoped to a Single Tenant.",
        "operationId": "CreateTenantThresholdProfile",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantThresholdProfile"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantThresholdProfile"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "put": {
        "summary": "Updates an Threshold Profile, which provides details on the data \ncollected for the Tenant.",
        "operationId": "UpdateTenantThresholdProfile",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantThresholdProfile"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantThresholdProfile"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{data.tenantId}/users": {
      "post": {
        "summary": "Create a User scoped to a Single Tenant.",
        "operationId": "CreateTenantUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantUser"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantUser"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "put": {
        "summary": "Update a User scoped to a single Tenant.",
        "operationId": "UpdateTenantUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantUser"
            }
          }
        },
        "parameters": [
          {
            "name": "data.tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantUser"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{tenantId}/domains/{domainId}": {
      "get": {
        "summary": "Retrieve a Domain scoped to a single Tenant.",
        "operationId": "GetTenantDomain",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDomain"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "delete": {
        "summary": "Delete a Domain scoped to a single Tenant.",
        "operationId": "DeleteTenantDomain",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDomain"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{tenantId}/ingestion-profiles/{ingestionProfileId}": {
      "get": {
        "summary": "Retrieves an Ingestion Profile, which provides details on the data \ncollected for the Tenant.",
        "operationId": "GetTenantIngestionProfile",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantIngestionProfile"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ingestionProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "delete": {
        "summary": "Delete an Ingestion Profile scoped to a single Tenant.",
        "operationId": "DeleteTenantIngestionProfile",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantIngestionProfile"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ingestionProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{tenantId}/monitored-object-domain-map": {
      "post": {
        "summary": "Retrieve a mapping of Domain to Montiored Objects as either a count or a set of the \nids of the monitored objects.",
        "operationId": "GetMonitoredObjectToDomainMap",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcMonitoredObjectCountByDomainResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gathergrpcMonitoredObjectCountByDomainRequest"
            }
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{tenantId}/monitored-objects/{monitoredObjectId}": {
      "get": {
        "summary": "Retrieve a MonitoredObject scoped to a single Tenant.",
        "operationId": "GetMonitoredObject",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcMonitoredObject"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "monitoredObjectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "delete": {
        "summary": "Delete a MonitoredObject scoped to a single Tenant.",
        "operationId": "DeleteMonitoredObject",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcMonitoredObject"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "monitoredObjectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{tenantId}/threshold-profiles/{thresholdProfileId}": {
      "get": {
        "summary": "Retrieves an Threshold Profile, which provides details on the data \ncollected for the Tenant.",
        "operationId": "GetTenantThresholdProfile",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantThresholdProfile"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "thresholdProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "delete": {
        "summary": "Delete an Threshold Profile scoped to a single Tenant.",
        "operationId": "DeleteTenantThresholdProfile",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantThresholdProfile"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "thresholdProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{tenantId}/users/{userId}": {
      "get": {
        "summary": "Retrieve a User scoped to a single Tenant.",
        "operationId": "GetTenantUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantUser"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "delete": {
        "summary": "Delete a User scoped to a single Tenant.",
        "operationId": "DeleteTenantUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantUser"
            }
          }
        },
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{value}": {
      "get": {
        "summary": "Retrieves the metadata of a single Tenant by id.",
        "operationId": "GetTenantDescriptor",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDescriptor"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminProvisioningService"
        ]
      },
      "delete": {
        "summary": "Deletes a Tenant and returns a TenantDescriptor which provides\nmetadata for the now deleted Tenant.",
        "operationId": "DeleteTenant",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDescriptor"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{value}/active-ingestion-profile": {
      "get": {
        "operationId": "GetActiveTenantIngestionProfile",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantIngestionProfile"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{value}/domain-list": {
      "get": {
        "summary": "Retrieve all Domains scoped to a single Tenant.",
        "operationId": "GetAllTenantDomains",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantDomainList"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{value}/meta": {
      "get": {
        "summary": "Retrieve a User scoped to a single Tenant",
        "operationId": "GetTenantMeta",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantMetadata"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      },
      "delete": {
        "summary": "Delete TenantMeta scoped to a single Tenant.",
        "operationId": "DeleteTenantMeta",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantMetadata"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{value}/monitored-object-list": {
      "get": {
        "summary": "Retrieve all MonitoredObject scoped to a single Tenant.",
        "operationId": "GetAllMonitoredObjects",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcMonitoredObjectList"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{value}/threshold-profile-list": {
      "get": {
        "summary": "Retrieve all Thresholds scoped to a single Tenant.",
        "operationId": "GetAllTenantThresholdProfiles",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantThresholdProfileList"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/tenants/{value}/user-list": {
      "get": {
        "summary": "Retrieve all Users scoped to a single Tenant.",
        "operationId": "GetAllTenantUsers",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcTenantUserList"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantProvisioningService"
        ]
      }
    },
    "/api/v1/threshold-crossing": {
      "get": {
        "summary": "Retrieve threshold crossing for given metric.",
        "operationId": "GetThresholdCrossing",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcJSONAPIObject"
            }
          }
        },
        "parameters": [
          {
            "name": "interval",
            "description": "ISO-8601 Intervals.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "granularity",
            "description": "ISO-8601 period combination.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "objectType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "thresholdProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MetricsService"
        ]
      }
    },
    "/api/v1/threshold-crossing-by-monitored-object": {
      "get": {
        "operationId": "GetThresholdCrossingByMonitoredObject",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gathergrpcJSONAPIObject"
            }
          }
        },
        "parameters": [
          {
            "name": "interval",
            "description": "ISO-8601 Intervals.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "granularity",
            "description": "ISO-8601 period combination.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "objectType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "thresholdProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MetricsService"
        ]
      }
    }
  },
  "definitions": {
    "IngestionDictionaryDataMetricDefinition": {
      "type": "object",
      "properties": {
        "monitoredObjectTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gathergrpcIngestionDictionaryDataMonitoredObjectType"
          }
        },
        "ui": {
          "$ref": "#/definitions/IngestionDictionaryDataUIData"
        }
      }
    },
    "IngestionDictionaryDataUIData": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "position": {
          "type": "string"
        }
      }
    },
    "LinksRelated": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "MonitoredObjectDataDeviceType": {
      "type": "string",
      "enum": [
        "DT_UNKNOWN",
        "ACCEDIAN_NID",
        "ACCEDIAN_VNID"
      ],
      "default": "DT_UNKNOWN"
    },
    "TenantIngestionProfileDataMonitoredObjectMap": {
      "type": "object",
      "properties": {
        "monitoredObjectTypeMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gathergrpcTenantIngestionProfileDataMetricMap"
          }
        }
      }
    },
    "TenantThresholdProfileDataDirectionMap": {
      "type": "object",
      "properties": {
        "directionMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TenantThresholdProfileDataEventMap"
          }
        }
      }
    },
    "TenantThresholdProfileDataEventAttrMap": {
      "type": "object",
      "properties": {
        "eventAttrMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TenantThresholdProfileDataEventMap": {
      "type": "object",
      "properties": {
        "eventMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TenantThresholdProfileDataEventAttrMap"
          }
        }
      }
    },
    "TenantThresholdProfileDataMonitoredObjectTypeMap": {
      "type": "object",
      "properties": {
        "monitoredObjectTypeMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gathergrpcTenantThresholdProfileDataMetricMap"
          }
        }
      }
    },
    "gathergrpcAdminUser": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/gathergrpcAdminUserData"
        }
      },
      "description": "AdminUser - wrapper for passing AdminUser\ndata as a request to the service."
    },
    "gathergrpcAdminUserData": {
      "type": "object",
      "properties": {
        "datatype": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "sendOnboardingEmail": {
          "type": "boolean",
          "format": "boolean"
        },
        "onboardingToken": {
          "type": "string"
        },
        "userVerified": {
          "type": "boolean",
          "format": "boolean"
        },
        "state": {
          "$ref": "#/definitions/gathergrpcUserState"
        },
        "createdTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "lastModifiedTimestamp": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "User data for an Adminstrative User."
    },
    "gathergrpcAdminUserList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gathergrpcAdminUser"
          }
        }
      },
      "description": "Wrapper message to provide a response in the form of\na container of multiple AdminUser objects."
    },
    "gathergrpcData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "attributes": {
          "$ref": "#/definitions/protobufAny"
        }
      }
    },
    "gathergrpcError": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/gathergrpcLinks"
        },
        "status": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "source": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "gathergrpcIngestionDictionary": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/gathergrpcIngestionDictionaryData"
        }
      },
      "description": "Wrapper fos the object that stores the available values of the metrics that may be ingested by ADH."
    },
    "gathergrpcIngestionDictionaryData": {
      "type": "object",
      "properties": {
        "datatype": {
          "type": "string"
        },
        "metrics": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gathergrpcIngestionDictionaryDataMetricMap"
          }
        },
        "createdTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "lastModifiedTimestamp": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Stores the available values of the metrics that may be ingested by ADH."
    },
    "gathergrpcIngestionDictionaryDataMetricMap": {
      "type": "object",
      "properties": {
        "metricMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/IngestionDictionaryDataMetricDefinition"
          }
        }
      }
    },
    "gathergrpcIngestionDictionaryDataMonitoredObjectType": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "rawMetricId": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "directions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "gathergrpcJSONAPIObject": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gathergrpcData"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gathergrpcError"
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "jsonapi": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "links": {
          "$ref": "#/definitions/gathergrpcLinks"
        },
        "included": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gathergrpcResource"
          }
        }
      }
    },
    "gathergrpcLinks": {
      "type": "object",
      "properties": {
        "related": {
          "$ref": "#/definitions/LinksRelated"
        },
        "self": {
          "type": "string"
        },
        "first": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "prev": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "about": {
          "type": "string"
        },
        "article": {
          "type": "string"
        }
      },
      "description": "Links technically allow any valid json string as a key,\nwe obviously can't do this, so we have to stick to the following."
    },
    "gathergrpcMonitoredObject": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/gathergrpcMonitoredObjectData"
        }
      },
      "description": "MonitoredObject - Wrapper for requests involving a MonitoredObject that are \nscoped to a single Tenant."
    },
    "gathergrpcMonitoredObjectCountByDomainRequest": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "byCount": {
          "type": "boolean",
          "format": "boolean"
        },
        "domainSet": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Provides options to configure how the GetMonitoredObjectToDomainMap API will return its results.\nbyCount: true will return a count of Monitored Objects, false will return a set of MonitoredObject IDs.\ndomainSet: set of Domain IDs to filter the request by."
    },
    "gathergrpcMonitoredObjectCountByDomainResponse": {
      "type": "object",
      "properties": {
        "domainToMonitoredObjectCountMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "domainToMonitoredObjectSetMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gathergrpcMonitoredObjectSet"
          }
        }
      }
    },
    "gathergrpcMonitoredObjectData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "datatype": {
          "type": "string"
        },
        "actuatorType": {
          "$ref": "#/definitions/MonitoredObjectDataDeviceType"
        },
        "actuatorName": {
          "type": "string"
        },
        "reflectorType": {
          "$ref": "#/definitions/MonitoredObjectDataDeviceType"
        },
        "reflectorName": {
          "type": "string"
        },
        "objectName": {
          "type": "string"
        },
        "objectType": {
          "$ref": "#/definitions/gathergrpcMonitoredObjectDataMonitoredObjectType"
        },
        "createdTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "lastModifiedTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "domainSet": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "MonitoredObjectData - describes a unique device/object which is reporting \ndata from the network."
    },
    "gathergrpcMonitoredObjectDataMonitoredObjectType": {
      "type": "string",
      "enum": [
        "MO_UNKNOWN",
        "TWAMP"
      ],
      "default": "MO_UNKNOWN"
    },
    "gathergrpcMonitoredObjectList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gathergrpcMonitoredObject"
          }
        }
      },
      "description": "MonitoredObjectList - Wrapper for requests which return a list of MonitoredObjects \nscoped to a single Tenant."
    },
    "gathergrpcMonitoredObjectSet": {
      "type": "object",
      "properties": {
        "monitoredObjectSet": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "gathergrpcRelationships": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/gathergrpcLinks"
        },
        "data": {
          "$ref": "#/definitions/protobufAny"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "gathergrpcResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "links": {
          "$ref": "#/definitions/gathergrpcLinks"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "relationships": {
          "$ref": "#/definitions/gathergrpcRelationships"
        }
      }
    },
    "gathergrpcTenantDescriptor": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/gathergrpcTenantDescriptorData"
        }
      },
      "description": "TenantDescriptor - wrapper for passing TenantDescriptor\ndata as a request to the service."
    },
    "gathergrpcTenantDescriptorData": {
      "type": "object",
      "properties": {
        "datatype": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "urlSubdomain": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/gathergrpcUserState"
        },
        "createdTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "lastModifiedTimestamp": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Provides the metadata of a Tenant. This information is used to \nidetify/describe a full Tenant entity."
    },
    "gathergrpcTenantDescriptorList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gathergrpcTenantDescriptor"
          }
        }
      },
      "description": "Wrapper message to provide a response in the form of\na container of multiple TenantDescriptor objects."
    },
    "gathergrpcTenantDomain": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/gathergrpcTenantDomainData"
        }
      },
      "title": "TenantDomain - wrapper for requests that involve a Tenant Domain"
    },
    "gathergrpcTenantDomainData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "datatype": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "thresholdProfileSet": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "lastModifiedTimestamp": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "TenantDomainData - model for a Domain for a single Tenant."
    },
    "gathergrpcTenantDomainList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gathergrpcTenantDomain"
          }
        }
      },
      "description": "TenantDomainListResponse - a wrapper for a list of TenantDomain objects that \nare returned as a response to a request.."
    },
    "gathergrpcTenantIngestionProfile": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/gathergrpcTenantIngestionProfileData"
        }
      },
      "title": "TenantIngestionProfile - wrapper for requests that involve the\nTenant Ingestion Profile"
    },
    "gathergrpcTenantIngestionProfileData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "datatype": {
          "type": "string"
        },
        "metrics": {
          "$ref": "#/definitions/gathergrpcTenantIngestionProfileDataVendorMap"
        },
        "createdTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "lastModifiedTimestamp": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "TenantIngestionProfileData - model for the singleton object that \ngoverns what data is displayed for a Tenant."
    },
    "gathergrpcTenantIngestionProfileDataMetricMap": {
      "type": "object",
      "properties": {
        "metricMap": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean",
            "format": "boolean"
          }
        }
      }
    },
    "gathergrpcTenantIngestionProfileDataVendorMap": {
      "type": "object",
      "properties": {
        "vendorMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TenantIngestionProfileDataMonitoredObjectMap"
          }
        }
      }
    },
    "gathergrpcTenantMeta": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "datatype": {
          "type": "string"
        },
        "tenantName": {
          "type": "string"
        },
        "defaultThresholdProfile": {
          "type": "string"
        },
        "createdTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "lastModifiedTimestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "gathergrpcTenantMetadata": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/gathergrpcTenantMeta"
        }
      }
    },
    "gathergrpcTenantThresholdProfile": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/gathergrpcTenantThresholdProfileData"
        }
      },
      "title": "TenantThresholdProfile - wrapper for requests that involve the\nTenant Threshold Profile"
    },
    "gathergrpcTenantThresholdProfileData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "datatype": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "thresholds": {
          "$ref": "#/definitions/gathergrpcTenantThresholdProfileDataVendorMap"
        },
        "createdTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "lastModifiedTimestamp": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Threshold Profile Data"
    },
    "gathergrpcTenantThresholdProfileDataMetricMap": {
      "type": "object",
      "properties": {
        "metricMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TenantThresholdProfileDataDirectionMap"
          }
        }
      }
    },
    "gathergrpcTenantThresholdProfileDataVendorMap": {
      "type": "object",
      "properties": {
        "vendorMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TenantThresholdProfileDataMonitoredObjectTypeMap"
          }
        }
      }
    },
    "gathergrpcTenantThresholdProfileList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gathergrpcTenantThresholdProfile"
          }
        }
      }
    },
    "gathergrpcTenantUser": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/gathergrpcTenantUserData"
        }
      },
      "description": "TenantUser - wrapper for requests that involve a User that\nis scoped to a single Tenant."
    },
    "gathergrpcTenantUserData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "datatype": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "sendOnboardingEmail": {
          "type": "boolean",
          "format": "boolean"
        },
        "onboardingToken": {
          "type": "string"
        },
        "userVerified": {
          "type": "boolean",
          "format": "boolean"
        },
        "state": {
          "$ref": "#/definitions/gathergrpcUserState"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "lastModifiedTimestamp": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nTenantUserData - model for a User that is scoped to a single Tenant."
    },
    "gathergrpcTenantUserList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gathergrpcTenantUser"
          }
        }
      },
      "description": "TenantUserListResponse - a wrapper to handle requests that return a\nlist of TenantUser objects."
    },
    "gathergrpcUserState": {
      "type": "string",
      "enum": [
        "USER_UNKNOWN",
        "INVITED",
        "ACTIVE",
        "SUSPENDED",
        "PENDING_DELETE"
      ],
      "default": "USER_UNKNOWN",
      "description": "Enumeration of User state."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufStringValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The string value."
        }
      },
      "description": "Wrapper message for `string`.\n\nThe JSON representation for `StringValue` is JSON string."
    }
  }
}
