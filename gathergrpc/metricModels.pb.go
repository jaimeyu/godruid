// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gathergrpc/metricModels.proto

package gathergrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ThresholdCrossingResult struct {
	Total             float32 `protobuf:"fixed32,1,opt,name=total" json:"total,omitempty"`
	MinorPercent      float32 `protobuf:"fixed32,2,opt,name=minorPercent" json:"minorPercent,omitempty"`
	MinorRatio        float32 `protobuf:"fixed32,3,opt,name=minorRatio" json:"minorRatio,omitempty"`
	MinorThreshold    float32 `protobuf:"fixed32,4,opt,name=minorThreshold" json:"minorThreshold,omitempty"`
	MajorThreshold    float32 `protobuf:"fixed32,5,opt,name=majorThreshold" json:"majorThreshold,omitempty"`
	CriticalRatio     float32 `protobuf:"fixed32,6,opt,name=criticalRatio" json:"criticalRatio,omitempty"`
	CriticalThreshold float32 `protobuf:"fixed32,7,opt,name=criticalThreshold" json:"criticalThreshold,omitempty"`
	CriticalPercent   float32 `protobuf:"fixed32,8,opt,name=criticalPercent" json:"criticalPercent,omitempty"`
	MajorPercent      float32 `protobuf:"fixed32,9,opt,name=majorPercent" json:"majorPercent,omitempty"`
	MajorRatio        float32 `protobuf:"fixed32,10,opt,name=majorRatio" json:"majorRatio,omitempty"`
}

func (m *ThresholdCrossingResult) Reset()                    { *m = ThresholdCrossingResult{} }
func (m *ThresholdCrossingResult) String() string            { return proto.CompactTextString(m) }
func (*ThresholdCrossingResult) ProtoMessage()               {}
func (*ThresholdCrossingResult) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *ThresholdCrossingResult) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ThresholdCrossingResult) GetMinorPercent() float32 {
	if m != nil {
		return m.MinorPercent
	}
	return 0
}

func (m *ThresholdCrossingResult) GetMinorRatio() float32 {
	if m != nil {
		return m.MinorRatio
	}
	return 0
}

func (m *ThresholdCrossingResult) GetMinorThreshold() float32 {
	if m != nil {
		return m.MinorThreshold
	}
	return 0
}

func (m *ThresholdCrossingResult) GetMajorThreshold() float32 {
	if m != nil {
		return m.MajorThreshold
	}
	return 0
}

func (m *ThresholdCrossingResult) GetCriticalRatio() float32 {
	if m != nil {
		return m.CriticalRatio
	}
	return 0
}

func (m *ThresholdCrossingResult) GetCriticalThreshold() float32 {
	if m != nil {
		return m.CriticalThreshold
	}
	return 0
}

func (m *ThresholdCrossingResult) GetCriticalPercent() float32 {
	if m != nil {
		return m.CriticalPercent
	}
	return 0
}

func (m *ThresholdCrossingResult) GetMajorPercent() float32 {
	if m != nil {
		return m.MajorPercent
	}
	return 0
}

func (m *ThresholdCrossingResult) GetMajorRatio() float32 {
	if m != nil {
		return m.MajorRatio
	}
	return 0
}

type ThresholdCrossing struct {
	Timestamp string                   `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Result    *ThresholdCrossingResult `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *ThresholdCrossing) Reset()                    { *m = ThresholdCrossing{} }
func (m *ThresholdCrossing) String() string            { return proto.CompactTextString(m) }
func (*ThresholdCrossing) ProtoMessage()               {}
func (*ThresholdCrossing) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *ThresholdCrossing) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *ThresholdCrossing) GetResult() *ThresholdCrossingResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type ThresholdCrossingResponse struct {
	Data []*ThresholdCrossing `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *ThresholdCrossingResponse) Reset()                    { *m = ThresholdCrossingResponse{} }
func (m *ThresholdCrossingResponse) String() string            { return proto.CompactTextString(m) }
func (*ThresholdCrossingResponse) ProtoMessage()               {}
func (*ThresholdCrossingResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *ThresholdCrossingResponse) GetData() []*ThresholdCrossing {
	if m != nil {
		return m.Data
	}
	return nil
}

type ThresholdCrossingRequest struct {
	ThresholdProfileName string `protobuf:"bytes,1,opt,name=thresholdProfileName" json:"thresholdProfileName,omitempty"`
	Interval             string `protobuf:"bytes,2,opt,name=interval" json:"interval,omitempty"`
	Tenant               string `protobuf:"bytes,3,opt,name=tenant" json:"tenant,omitempty"`
	Domain               string `protobuf:"bytes,4,opt,name=domain" json:"domain,omitempty"`
	Granularity          string `protobuf:"bytes,5,opt,name=granularity" json:"granularity,omitempty"`
	ObjectType           string `protobuf:"bytes,6,opt,name=objectType" json:"objectType,omitempty"`
	Direction            string `protobuf:"bytes,7,opt,name=direction" json:"direction,omitempty"`
	Metric               string `protobuf:"bytes,8,opt,name=metric" json:"metric,omitempty"`
}

func (m *ThresholdCrossingRequest) Reset()                    { *m = ThresholdCrossingRequest{} }
func (m *ThresholdCrossingRequest) String() string            { return proto.CompactTextString(m) }
func (*ThresholdCrossingRequest) ProtoMessage()               {}
func (*ThresholdCrossingRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *ThresholdCrossingRequest) GetThresholdProfileName() string {
	if m != nil {
		return m.ThresholdProfileName
	}
	return ""
}

func (m *ThresholdCrossingRequest) GetInterval() string {
	if m != nil {
		return m.Interval
	}
	return ""
}

func (m *ThresholdCrossingRequest) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ThresholdCrossingRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *ThresholdCrossingRequest) GetGranularity() string {
	if m != nil {
		return m.Granularity
	}
	return ""
}

func (m *ThresholdCrossingRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *ThresholdCrossingRequest) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

func (m *ThresholdCrossingRequest) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func init() {
	proto.RegisterType((*ThresholdCrossingResult)(nil), "gathergrpc.ThresholdCrossingResult")
	proto.RegisterType((*ThresholdCrossing)(nil), "gathergrpc.ThresholdCrossing")
	proto.RegisterType((*ThresholdCrossingResponse)(nil), "gathergrpc.ThresholdCrossingResponse")
	proto.RegisterType((*ThresholdCrossingRequest)(nil), "gathergrpc.ThresholdCrossingRequest")
}

func init() { proto.RegisterFile("gathergrpc/metricModels.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0xd5, 0x76, 0x2b, 0xf3, 0x29, 0x7f, 0x34, 0x6b, 0x82, 0x80, 0x18, 0xaa, 0x02, 0x42,
	0xbd, 0x40, 0x45, 0x94, 0x4b, 0x2e, 0xb9, 0x66, 0x9a, 0xac, 0xbd, 0x80, 0x97, 0x1c, 0x5a, 0x4f,
	0x8e, 0x1d, 0xec, 0x53, 0xa4, 0x3d, 0x00, 0x2f, 0xc0, 0x13, 0xa3, 0x9c, 0x38, 0x4d, 0xba, 0x96,
	0x5d, 0x7e, 0xbf, 0xf3, 0xc5, 0xce, 0x39, 0xdf, 0x31, 0x5c, 0xae, 0x35, 0x6d, 0x30, 0xac, 0x43,
	0x5d, 0x7c, 0xae, 0x90, 0x82, 0x29, 0x7e, 0xf8, 0x12, 0x6d, 0x5c, 0xd6, 0xc1, 0x93, 0x97, 0xd0,
	0x97, 0xf3, 0x3f, 0x13, 0x78, 0x75, 0xb3, 0x09, 0x18, 0x37, 0xde, 0x96, 0xdf, 0x83, 0x8f, 0xd1,
	0xb8, 0xb5, 0xc2, 0xb8, 0xb5, 0x24, 0x2f, 0xe0, 0x94, 0x3c, 0x69, 0x9b, 0x8d, 0xe6, 0xa3, 0xc5,
	0x58, 0xb5, 0x42, 0xe6, 0xf0, 0xb4, 0x32, 0xce, 0x87, 0x6b, 0x0c, 0x05, 0x3a, 0xca, 0xc6, 0x5c,
	0xdc, 0x63, 0xf2, 0x1d, 0x00, 0x6b, 0xa5, 0xc9, 0xf8, 0x6c, 0xc2, 0x8e, 0x01, 0x91, 0x1f, 0xe1,
	0x39, 0xab, 0xdd, 0xcd, 0xd9, 0x09, 0x7b, 0x1e, 0x50, 0xf6, 0xe9, 0xbb, 0xa1, 0xef, 0x34, 0xf9,
	0xf6, 0xa8, 0xfc, 0x00, 0xcf, 0x8a, 0x60, 0xc8, 0x14, 0xda, 0xb6, 0x57, 0x4e, 0xd9, 0xb6, 0x0f,
	0xe5, 0x27, 0x38, 0xef, 0x40, 0x7f, 0xe0, 0x13, 0x76, 0x1e, 0x16, 0xe4, 0x02, 0x5e, 0x74, 0xb0,
	0x6b, 0xf5, 0x8c, 0xbd, 0x0f, 0x31, 0x4f, 0xa4, 0xf9, 0x9f, 0xce, 0x26, 0xd2, 0x44, 0x06, 0x8c,
	0x27, 0xd2, 0xe8, 0xf6, 0xf7, 0x20, 0x4d, 0x64, 0x47, 0x72, 0x07, 0xe7, 0x07, 0x31, 0xc8, 0xb7,
	0x20, 0xc8, 0x54, 0x18, 0x49, 0x57, 0x35, 0x87, 0x20, 0x54, 0x0f, 0xe4, 0x37, 0x98, 0x06, 0x0e,
	0x8a, 0x23, 0x98, 0xad, 0xde, 0x2f, 0xfb, 0x5c, 0x97, 0xff, 0xc9, 0x54, 0xa5, 0x4f, 0xf2, 0x2b,
	0x78, 0x7d, 0xcc, 0x52, 0x7b, 0x17, 0x51, 0x7e, 0x81, 0x93, 0x52, 0x93, 0xce, 0x46, 0xf3, 0xc9,
	0x62, 0xb6, 0xba, 0x7c, 0xfc, 0x5c, 0xb6, 0xe6, 0x7f, 0xc7, 0x90, 0x1d, 0x39, 0xf0, 0xd7, 0x16,
	0x23, 0xc9, 0x15, 0x5c, 0x50, 0x57, 0xbb, 0x0e, 0xfe, 0xa7, 0xb1, 0x78, 0xa5, 0x2b, 0x4c, 0x2d,
	0x1d, 0xad, 0xc9, 0x37, 0x70, 0x66, 0x1c, 0x61, 0xf8, 0xad, 0x2d, 0xf7, 0x27, 0xd4, 0x4e, 0xcb,
	0x97, 0x30, 0x25, 0x74, 0xda, 0x11, 0xaf, 0x96, 0x50, 0x49, 0x35, 0xbc, 0xf4, 0x95, 0x36, 0x8e,
	0xd7, 0x49, 0xa8, 0xa4, 0xe4, 0x1c, 0x66, 0xeb, 0xa0, 0xdd, 0xd6, 0xea, 0x60, 0xe8, 0x9e, 0x77,
	0x48, 0xa8, 0x21, 0x6a, 0xe2, 0xf1, 0xb7, 0x77, 0x58, 0xd0, 0xcd, 0x7d, 0x8d, 0xbc, 0x3d, 0x42,
	0x0d, 0x48, 0x93, 0x44, 0x69, 0x02, 0x16, 0x64, 0xbc, 0xe3, 0x95, 0x11, 0xaa, 0x07, 0xcd, 0xbd,
	0xed, 0x33, 0xe3, 0x0d, 0x11, 0x2a, 0xa9, 0xdb, 0x29, 0xbf, 0xb7, 0xaf, 0xff, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xad, 0x06, 0xca, 0xd2, 0x90, 0x03, 0x00, 0x00,
}
