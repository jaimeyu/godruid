// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gathergrpc/tenantModels.proto

package gathergrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MonitoredObjectData_MonitoredObjectType int32

const (
	MonitoredObjectData_MO_UNKNOWN MonitoredObjectData_MonitoredObjectType = 0
	MonitoredObjectData_TWAMP      MonitoredObjectData_MonitoredObjectType = 1
)

var MonitoredObjectData_MonitoredObjectType_name = map[int32]string{
	0: "MO_UNKNOWN",
	1: "TWAMP",
}
var MonitoredObjectData_MonitoredObjectType_value = map[string]int32{
	"MO_UNKNOWN": 0,
	"TWAMP":      1,
}

func (x MonitoredObjectData_MonitoredObjectType) String() string {
	return proto.EnumName(MonitoredObjectData_MonitoredObjectType_name, int32(x))
}
func (MonitoredObjectData_MonitoredObjectType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{15, 0}
}

type MonitoredObjectData_DeviceType int32

const (
	MonitoredObjectData_DT_UNKNOWN    MonitoredObjectData_DeviceType = 0
	MonitoredObjectData_ACCEDIAN_NID  MonitoredObjectData_DeviceType = 1
	MonitoredObjectData_ACCEDIAN_VNID MonitoredObjectData_DeviceType = 2
)

var MonitoredObjectData_DeviceType_name = map[int32]string{
	0: "DT_UNKNOWN",
	1: "ACCEDIAN_NID",
	2: "ACCEDIAN_VNID",
}
var MonitoredObjectData_DeviceType_value = map[string]int32{
	"DT_UNKNOWN":    0,
	"ACCEDIAN_NID":  1,
	"ACCEDIAN_VNID": 2,
}

func (x MonitoredObjectData_DeviceType) String() string {
	return proto.EnumName(MonitoredObjectData_DeviceType_name, int32(x))
}
func (MonitoredObjectData_DeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{15, 1}
}

// TenantDomainData - model for a Domain for a single Tenant.
type TenantDomainData struct {
	TenantId              string   `protobuf:"bytes,2,opt,name=tenantId" json:"tenantId,omitempty"`
	Datatype              string   `protobuf:"bytes,3,opt,name=datatype" json:"datatype,omitempty"`
	Name                  string   `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Color                 string   `protobuf:"bytes,5,opt,name=color" json:"color,omitempty"`
	ThresholdProfileSet   []string `protobuf:"bytes,6,rep,name=thresholdProfileSet" json:"thresholdProfileSet,omitempty"`
	CreatedTimestamp      int64    `protobuf:"varint,7,opt,name=createdTimestamp" json:"createdTimestamp,omitempty"`
	LastModifiedTimestamp int64    `protobuf:"varint,8,opt,name=lastModifiedTimestamp" json:"lastModifiedTimestamp,omitempty"`
}

func (m *TenantDomainData) Reset()                    { *m = TenantDomainData{} }
func (m *TenantDomainData) String() string            { return proto.CompactTextString(m) }
func (*TenantDomainData) ProtoMessage()               {}
func (*TenantDomainData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *TenantDomainData) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *TenantDomainData) GetDatatype() string {
	if m != nil {
		return m.Datatype
	}
	return ""
}

func (m *TenantDomainData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TenantDomainData) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *TenantDomainData) GetThresholdProfileSet() []string {
	if m != nil {
		return m.ThresholdProfileSet
	}
	return nil
}

func (m *TenantDomainData) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *TenantDomainData) GetLastModifiedTimestamp() int64 {
	if m != nil {
		return m.LastModifiedTimestamp
	}
	return 0
}

// TenantDomain - wrapper for requests that involve a Tenant Domain
type TenantDomain struct {
	XId  string            `protobuf:"bytes,1,opt,name=_id,json=Id" json:"_id,omitempty"`
	XRev string            `protobuf:"bytes,2,opt,name=_rev,json=Rev" json:"_rev,omitempty"`
	Data *TenantDomainData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TenantDomain) Reset()                    { *m = TenantDomain{} }
func (m *TenantDomain) String() string            { return proto.CompactTextString(m) }
func (*TenantDomain) ProtoMessage()               {}
func (*TenantDomain) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *TenantDomain) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *TenantDomain) GetXRev() string {
	if m != nil {
		return m.XRev
	}
	return ""
}

func (m *TenantDomain) GetData() *TenantDomainData {
	if m != nil {
		return m.Data
	}
	return nil
}

// TenantDomainListResponse - a wrapper for a list of TenantDomain objects that
// are returned as a response to a request..
type TenantDomainList struct {
	Data []*TenantDomain `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *TenantDomainList) Reset()                    { *m = TenantDomainList{} }
func (m *TenantDomainList) String() string            { return proto.CompactTextString(m) }
func (*TenantDomainList) ProtoMessage()               {}
func (*TenantDomainList) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *TenantDomainList) GetData() []*TenantDomain {
	if m != nil {
		return m.Data
	}
	return nil
}

// TenantDomainIdRequest - wrapper for requests that involve a Tenant Domain,
// but only require the domainID to complete the request.
type TenantDomainIdRequest struct {
	TenantId string `protobuf:"bytes,1,opt,name=tenantId" json:"tenantId,omitempty"`
	DomainId string `protobuf:"bytes,2,opt,name=domainId" json:"domainId,omitempty"`
}

func (m *TenantDomainIdRequest) Reset()                    { *m = TenantDomainIdRequest{} }
func (m *TenantDomainIdRequest) String() string            { return proto.CompactTextString(m) }
func (*TenantDomainIdRequest) ProtoMessage()               {}
func (*TenantDomainIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *TenantDomainIdRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *TenantDomainIdRequest) GetDomainId() string {
	if m != nil {
		return m.DomainId
	}
	return ""
}

// TenantIngestionProfileData - model for the singleton object that
// governs what data is displayed for a Tenant.
type TenantIngestionProfileData struct {
	TenantId              string                                `protobuf:"bytes,2,opt,name=tenantId" json:"tenantId,omitempty"`
	Datatype              string                                `protobuf:"bytes,3,opt,name=datatype" json:"datatype,omitempty"`
	Metrics               *TenantIngestionProfileData_VendorMap `protobuf:"bytes,4,opt,name=metrics" json:"metrics,omitempty"`
	CreatedTimestamp      int64                                 `protobuf:"varint,5,opt,name=createdTimestamp" json:"createdTimestamp,omitempty"`
	LastModifiedTimestamp int64                                 `protobuf:"varint,6,opt,name=lastModifiedTimestamp" json:"lastModifiedTimestamp,omitempty"`
}

func (m *TenantIngestionProfileData) Reset()                    { *m = TenantIngestionProfileData{} }
func (m *TenantIngestionProfileData) String() string            { return proto.CompactTextString(m) }
func (*TenantIngestionProfileData) ProtoMessage()               {}
func (*TenantIngestionProfileData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *TenantIngestionProfileData) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *TenantIngestionProfileData) GetDatatype() string {
	if m != nil {
		return m.Datatype
	}
	return ""
}

func (m *TenantIngestionProfileData) GetMetrics() *TenantIngestionProfileData_VendorMap {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *TenantIngestionProfileData) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *TenantIngestionProfileData) GetLastModifiedTimestamp() int64 {
	if m != nil {
		return m.LastModifiedTimestamp
	}
	return 0
}

type TenantIngestionProfileData_MetricMap struct {
	MetricMap map[string]bool `protobuf:"bytes,1,rep,name=metricMap" json:"metricMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *TenantIngestionProfileData_MetricMap) Reset()         { *m = TenantIngestionProfileData_MetricMap{} }
func (m *TenantIngestionProfileData_MetricMap) String() string { return proto.CompactTextString(m) }
func (*TenantIngestionProfileData_MetricMap) ProtoMessage()    {}
func (*TenantIngestionProfileData_MetricMap) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{4, 0}
}

func (m *TenantIngestionProfileData_MetricMap) GetMetricMap() map[string]bool {
	if m != nil {
		return m.MetricMap
	}
	return nil
}

type TenantIngestionProfileData_MonitoredObjectMap struct {
	MonitoredObjectTypeMap map[string]*TenantIngestionProfileData_MetricMap `protobuf:"bytes,1,rep,name=monitoredObjectTypeMap" json:"monitoredObjectTypeMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TenantIngestionProfileData_MonitoredObjectMap) Reset() {
	*m = TenantIngestionProfileData_MonitoredObjectMap{}
}
func (m *TenantIngestionProfileData_MonitoredObjectMap) String() string {
	return proto.CompactTextString(m)
}
func (*TenantIngestionProfileData_MonitoredObjectMap) ProtoMessage() {}
func (*TenantIngestionProfileData_MonitoredObjectMap) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{4, 1}
}

func (m *TenantIngestionProfileData_MonitoredObjectMap) GetMonitoredObjectTypeMap() map[string]*TenantIngestionProfileData_MetricMap {
	if m != nil {
		return m.MonitoredObjectTypeMap
	}
	return nil
}

type TenantIngestionProfileData_VendorMap struct {
	VendorMap map[string]*TenantIngestionProfileData_MonitoredObjectMap `protobuf:"bytes,1,rep,name=vendorMap" json:"vendorMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TenantIngestionProfileData_VendorMap) Reset()         { *m = TenantIngestionProfileData_VendorMap{} }
func (m *TenantIngestionProfileData_VendorMap) String() string { return proto.CompactTextString(m) }
func (*TenantIngestionProfileData_VendorMap) ProtoMessage()    {}
func (*TenantIngestionProfileData_VendorMap) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{4, 2}
}

func (m *TenantIngestionProfileData_VendorMap) GetVendorMap() map[string]*TenantIngestionProfileData_MonitoredObjectMap {
	if m != nil {
		return m.VendorMap
	}
	return nil
}

// TenantIngestionProfile - wrapper for requests that involve the
// Tenant Ingestion Profile
type TenantIngestionProfile struct {
	XId  string                      `protobuf:"bytes,1,opt,name=_id,json=Id" json:"_id,omitempty"`
	XRev string                      `protobuf:"bytes,2,opt,name=_rev,json=Rev" json:"_rev,omitempty"`
	Data *TenantIngestionProfileData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TenantIngestionProfile) Reset()                    { *m = TenantIngestionProfile{} }
func (m *TenantIngestionProfile) String() string            { return proto.CompactTextString(m) }
func (*TenantIngestionProfile) ProtoMessage()               {}
func (*TenantIngestionProfile) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *TenantIngestionProfile) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *TenantIngestionProfile) GetXRev() string {
	if m != nil {
		return m.XRev
	}
	return ""
}

func (m *TenantIngestionProfile) GetData() *TenantIngestionProfileData {
	if m != nil {
		return m.Data
	}
	return nil
}

type TenantIngestionProfileIdRequest struct {
	TenantId           string `protobuf:"bytes,1,opt,name=tenantId" json:"tenantId,omitempty"`
	IngestionProfileId string `protobuf:"bytes,2,opt,name=ingestionProfileId" json:"ingestionProfileId,omitempty"`
}

func (m *TenantIngestionProfileIdRequest) Reset()                    { *m = TenantIngestionProfileIdRequest{} }
func (m *TenantIngestionProfileIdRequest) String() string            { return proto.CompactTextString(m) }
func (*TenantIngestionProfileIdRequest) ProtoMessage()               {}
func (*TenantIngestionProfileIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *TenantIngestionProfileIdRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *TenantIngestionProfileIdRequest) GetIngestionProfileId() string {
	if m != nil {
		return m.IngestionProfileId
	}
	return ""
}

// Threshold Profile Data
type TenantThresholdProfileData struct {
	TenantId              string                                `protobuf:"bytes,2,opt,name=tenantId" json:"tenantId,omitempty"`
	Datatype              string                                `protobuf:"bytes,3,opt,name=datatype" json:"datatype,omitempty"`
	Name                  string                                `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Thresholds            *TenantThresholdProfileData_VendorMap `protobuf:"bytes,5,opt,name=thresholds" json:"thresholds,omitempty"`
	CreatedTimestamp      int64                                 `protobuf:"varint,6,opt,name=createdTimestamp" json:"createdTimestamp,omitempty"`
	LastModifiedTimestamp int64                                 `protobuf:"varint,7,opt,name=lastModifiedTimestamp" json:"lastModifiedTimestamp,omitempty"`
}

func (m *TenantThresholdProfileData) Reset()                    { *m = TenantThresholdProfileData{} }
func (m *TenantThresholdProfileData) String() string            { return proto.CompactTextString(m) }
func (*TenantThresholdProfileData) ProtoMessage()               {}
func (*TenantThresholdProfileData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *TenantThresholdProfileData) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *TenantThresholdProfileData) GetDatatype() string {
	if m != nil {
		return m.Datatype
	}
	return ""
}

func (m *TenantThresholdProfileData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TenantThresholdProfileData) GetThresholds() *TenantThresholdProfileData_VendorMap {
	if m != nil {
		return m.Thresholds
	}
	return nil
}

func (m *TenantThresholdProfileData) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *TenantThresholdProfileData) GetLastModifiedTimestamp() int64 {
	if m != nil {
		return m.LastModifiedTimestamp
	}
	return 0
}

type TenantThresholdProfileData_EventAttrMap struct {
	EventAttrMap map[string]string `protobuf:"bytes,1,rep,name=eventAttrMap" json:"eventAttrMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TenantThresholdProfileData_EventAttrMap) Reset() {
	*m = TenantThresholdProfileData_EventAttrMap{}
}
func (m *TenantThresholdProfileData_EventAttrMap) String() string { return proto.CompactTextString(m) }
func (*TenantThresholdProfileData_EventAttrMap) ProtoMessage()    {}
func (*TenantThresholdProfileData_EventAttrMap) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{7, 0}
}

func (m *TenantThresholdProfileData_EventAttrMap) GetEventAttrMap() map[string]string {
	if m != nil {
		return m.EventAttrMap
	}
	return nil
}

type TenantThresholdProfileData_EventMap struct {
	EventMap map[string]*TenantThresholdProfileData_EventAttrMap `protobuf:"bytes,1,rep,name=eventMap" json:"eventMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TenantThresholdProfileData_EventMap) Reset()         { *m = TenantThresholdProfileData_EventMap{} }
func (m *TenantThresholdProfileData_EventMap) String() string { return proto.CompactTextString(m) }
func (*TenantThresholdProfileData_EventMap) ProtoMessage()    {}
func (*TenantThresholdProfileData_EventMap) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{7, 1}
}

func (m *TenantThresholdProfileData_EventMap) GetEventMap() map[string]*TenantThresholdProfileData_EventAttrMap {
	if m != nil {
		return m.EventMap
	}
	return nil
}

type TenantThresholdProfileData_DirectionMap struct {
	DirectionMap map[string]*TenantThresholdProfileData_EventMap `protobuf:"bytes,1,rep,name=directionMap" json:"directionMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TenantThresholdProfileData_DirectionMap) Reset() {
	*m = TenantThresholdProfileData_DirectionMap{}
}
func (m *TenantThresholdProfileData_DirectionMap) String() string { return proto.CompactTextString(m) }
func (*TenantThresholdProfileData_DirectionMap) ProtoMessage()    {}
func (*TenantThresholdProfileData_DirectionMap) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{7, 2}
}

func (m *TenantThresholdProfileData_DirectionMap) GetDirectionMap() map[string]*TenantThresholdProfileData_EventMap {
	if m != nil {
		return m.DirectionMap
	}
	return nil
}

type TenantThresholdProfileData_MetricMap struct {
	MetricMap map[string]*TenantThresholdProfileData_DirectionMap `protobuf:"bytes,1,rep,name=metricMap" json:"metricMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TenantThresholdProfileData_MetricMap) Reset()         { *m = TenantThresholdProfileData_MetricMap{} }
func (m *TenantThresholdProfileData_MetricMap) String() string { return proto.CompactTextString(m) }
func (*TenantThresholdProfileData_MetricMap) ProtoMessage()    {}
func (*TenantThresholdProfileData_MetricMap) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{7, 3}
}

func (m *TenantThresholdProfileData_MetricMap) GetMetricMap() map[string]*TenantThresholdProfileData_DirectionMap {
	if m != nil {
		return m.MetricMap
	}
	return nil
}

type TenantThresholdProfileData_MonitoredObjectTypeMap struct {
	MonitoredObjectTypeMap map[string]*TenantThresholdProfileData_MetricMap `protobuf:"bytes,1,rep,name=monitoredObjectTypeMap" json:"monitoredObjectTypeMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TenantThresholdProfileData_MonitoredObjectTypeMap) Reset() {
	*m = TenantThresholdProfileData_MonitoredObjectTypeMap{}
}
func (m *TenantThresholdProfileData_MonitoredObjectTypeMap) String() string {
	return proto.CompactTextString(m)
}
func (*TenantThresholdProfileData_MonitoredObjectTypeMap) ProtoMessage() {}
func (*TenantThresholdProfileData_MonitoredObjectTypeMap) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{7, 4}
}

func (m *TenantThresholdProfileData_MonitoredObjectTypeMap) GetMonitoredObjectTypeMap() map[string]*TenantThresholdProfileData_MetricMap {
	if m != nil {
		return m.MonitoredObjectTypeMap
	}
	return nil
}

type TenantThresholdProfileData_VendorMap struct {
	VendorMap map[string]*TenantThresholdProfileData_MonitoredObjectTypeMap `protobuf:"bytes,1,rep,name=vendorMap" json:"vendorMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *TenantThresholdProfileData_VendorMap) Reset()         { *m = TenantThresholdProfileData_VendorMap{} }
func (m *TenantThresholdProfileData_VendorMap) String() string { return proto.CompactTextString(m) }
func (*TenantThresholdProfileData_VendorMap) ProtoMessage()    {}
func (*TenantThresholdProfileData_VendorMap) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{7, 5}
}

func (m *TenantThresholdProfileData_VendorMap) GetVendorMap() map[string]*TenantThresholdProfileData_MonitoredObjectTypeMap {
	if m != nil {
		return m.VendorMap
	}
	return nil
}

// TenantThresholdProfile - wrapper for requests that involve the
// Tenant Threshold Profile
type TenantThresholdProfile struct {
	XId  string                      `protobuf:"bytes,1,opt,name=_id,json=Id" json:"_id,omitempty"`
	XRev string                      `protobuf:"bytes,2,opt,name=_rev,json=Rev" json:"_rev,omitempty"`
	Data *TenantThresholdProfileData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TenantThresholdProfile) Reset()                    { *m = TenantThresholdProfile{} }
func (m *TenantThresholdProfile) String() string            { return proto.CompactTextString(m) }
func (*TenantThresholdProfile) ProtoMessage()               {}
func (*TenantThresholdProfile) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *TenantThresholdProfile) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *TenantThresholdProfile) GetXRev() string {
	if m != nil {
		return m.XRev
	}
	return ""
}

func (m *TenantThresholdProfile) GetData() *TenantThresholdProfileData {
	if m != nil {
		return m.Data
	}
	return nil
}

type TenantThresholdProfileIdRequest struct {
	TenantId           string `protobuf:"bytes,1,opt,name=tenantId" json:"tenantId,omitempty"`
	ThresholdProfileId string `protobuf:"bytes,2,opt,name=thresholdProfileId" json:"thresholdProfileId,omitempty"`
}

func (m *TenantThresholdProfileIdRequest) Reset()                    { *m = TenantThresholdProfileIdRequest{} }
func (m *TenantThresholdProfileIdRequest) String() string            { return proto.CompactTextString(m) }
func (*TenantThresholdProfileIdRequest) ProtoMessage()               {}
func (*TenantThresholdProfileIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *TenantThresholdProfileIdRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *TenantThresholdProfileIdRequest) GetThresholdProfileId() string {
	if m != nil {
		return m.ThresholdProfileId
	}
	return ""
}

type TenantThresholdProfileList struct {
	Data []*TenantThresholdProfile `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *TenantThresholdProfileList) Reset()                    { *m = TenantThresholdProfileList{} }
func (m *TenantThresholdProfileList) String() string            { return proto.CompactTextString(m) }
func (*TenantThresholdProfileList) ProtoMessage()               {}
func (*TenantThresholdProfileList) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *TenantThresholdProfileList) GetData() []*TenantThresholdProfile {
	if m != nil {
		return m.Data
	}
	return nil
}

// ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TenantUserData - model for a User that is scoped to a single Tenant.
type TenantUserData struct {
	TenantId              string    `protobuf:"bytes,2,opt,name=tenantId" json:"tenantId,omitempty"`
	Datatype              string    `protobuf:"bytes,3,opt,name=datatype" json:"datatype,omitempty"`
	Username              string    `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Password              string    `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	SendOnboardingEmail   bool      `protobuf:"varint,6,opt,name=sendOnboardingEmail" json:"sendOnboardingEmail,omitempty"`
	OnboardingToken       string    `protobuf:"bytes,7,opt,name=onboardingToken" json:"onboardingToken,omitempty"`
	UserVerified          bool      `protobuf:"varint,8,opt,name=userVerified" json:"userVerified,omitempty"`
	State                 UserState `protobuf:"varint,9,opt,name=state,enum=gathergrpc.UserState" json:"state,omitempty"`
	Domains               []string  `protobuf:"bytes,10,rep,name=domains" json:"domains,omitempty"`
	CreatedTimestamp      int64     `protobuf:"varint,11,opt,name=createdTimestamp" json:"createdTimestamp,omitempty"`
	LastModifiedTimestamp int64     `protobuf:"varint,12,opt,name=lastModifiedTimestamp" json:"lastModifiedTimestamp,omitempty"`
}

func (m *TenantUserData) Reset()                    { *m = TenantUserData{} }
func (m *TenantUserData) String() string            { return proto.CompactTextString(m) }
func (*TenantUserData) ProtoMessage()               {}
func (*TenantUserData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *TenantUserData) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *TenantUserData) GetDatatype() string {
	if m != nil {
		return m.Datatype
	}
	return ""
}

func (m *TenantUserData) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *TenantUserData) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *TenantUserData) GetSendOnboardingEmail() bool {
	if m != nil {
		return m.SendOnboardingEmail
	}
	return false
}

func (m *TenantUserData) GetOnboardingToken() string {
	if m != nil {
		return m.OnboardingToken
	}
	return ""
}

func (m *TenantUserData) GetUserVerified() bool {
	if m != nil {
		return m.UserVerified
	}
	return false
}

func (m *TenantUserData) GetState() UserState {
	if m != nil {
		return m.State
	}
	return UserState_USER_UNKNOWN
}

func (m *TenantUserData) GetDomains() []string {
	if m != nil {
		return m.Domains
	}
	return nil
}

func (m *TenantUserData) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *TenantUserData) GetLastModifiedTimestamp() int64 {
	if m != nil {
		return m.LastModifiedTimestamp
	}
	return 0
}

// TenantUser - wrapper for requests that involve a User that
// is scoped to a single Tenant.
type TenantUser struct {
	XId  string          `protobuf:"bytes,1,opt,name=_id,json=Id" json:"_id,omitempty"`
	XRev string          `protobuf:"bytes,2,opt,name=_rev,json=Rev" json:"_rev,omitempty"`
	Data *TenantUserData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TenantUser) Reset()                    { *m = TenantUser{} }
func (m *TenantUser) String() string            { return proto.CompactTextString(m) }
func (*TenantUser) ProtoMessage()               {}
func (*TenantUser) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *TenantUser) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *TenantUser) GetXRev() string {
	if m != nil {
		return m.XRev
	}
	return ""
}

func (m *TenantUser) GetData() *TenantUserData {
	if m != nil {
		return m.Data
	}
	return nil
}

// TenantUserListResponse - a wrapper to handle requests that return a
// list of TenantUser objects.
type TenantUserList struct {
	Data []*TenantUser `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *TenantUserList) Reset()                    { *m = TenantUserList{} }
func (m *TenantUserList) String() string            { return proto.CompactTextString(m) }
func (*TenantUserList) ProtoMessage()               {}
func (*TenantUserList) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *TenantUserList) GetData() []*TenantUser {
	if m != nil {
		return m.Data
	}
	return nil
}

// TenantUserIdRequest - wrapper for requests that involve a Tenant User,
// but only require the userID to complete the request.
type TenantUserIdRequest struct {
	TenantId string `protobuf:"bytes,1,opt,name=tenantId" json:"tenantId,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
}

func (m *TenantUserIdRequest) Reset()                    { *m = TenantUserIdRequest{} }
func (m *TenantUserIdRequest) String() string            { return proto.CompactTextString(m) }
func (*TenantUserIdRequest) ProtoMessage()               {}
func (*TenantUserIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *TenantUserIdRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *TenantUserIdRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// MonitoredObjectData - describes a unique device/object which is reporting
// data from the network.
type MonitoredObjectData struct {
	Id                    string                                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TenantId              string                                  `protobuf:"bytes,2,opt,name=tenantId" json:"tenantId,omitempty"`
	Datatype              string                                  `protobuf:"bytes,3,opt,name=datatype" json:"datatype,omitempty"`
	ActuatorType          MonitoredObjectData_DeviceType          `protobuf:"varint,4,opt,name=actuatorType,enum=gathergrpc.MonitoredObjectData_DeviceType" json:"actuatorType,omitempty"`
	ActuatorName          string                                  `protobuf:"bytes,5,opt,name=actuatorName" json:"actuatorName,omitempty"`
	ReflectorType         MonitoredObjectData_DeviceType          `protobuf:"varint,6,opt,name=reflectorType,enum=gathergrpc.MonitoredObjectData_DeviceType" json:"reflectorType,omitempty"`
	ReflectorName         string                                  `protobuf:"bytes,7,opt,name=reflectorName" json:"reflectorName,omitempty"`
	ObjectName            string                                  `protobuf:"bytes,8,opt,name=objectName" json:"objectName,omitempty"`
	ObjectType            MonitoredObjectData_MonitoredObjectType `protobuf:"varint,9,opt,name=objectType,enum=gathergrpc.MonitoredObjectData_MonitoredObjectType" json:"objectType,omitempty"`
	CreatedTimestamp      int64                                   `protobuf:"varint,10,opt,name=createdTimestamp" json:"createdTimestamp,omitempty"`
	LastModifiedTimestamp int64                                   `protobuf:"varint,11,opt,name=lastModifiedTimestamp" json:"lastModifiedTimestamp,omitempty"`
	DomainSet             []string                                `protobuf:"bytes,12,rep,name=domainSet" json:"domainSet,omitempty"`
}

func (m *MonitoredObjectData) Reset()                    { *m = MonitoredObjectData{} }
func (m *MonitoredObjectData) String() string            { return proto.CompactTextString(m) }
func (*MonitoredObjectData) ProtoMessage()               {}
func (*MonitoredObjectData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *MonitoredObjectData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MonitoredObjectData) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *MonitoredObjectData) GetDatatype() string {
	if m != nil {
		return m.Datatype
	}
	return ""
}

func (m *MonitoredObjectData) GetActuatorType() MonitoredObjectData_DeviceType {
	if m != nil {
		return m.ActuatorType
	}
	return MonitoredObjectData_DT_UNKNOWN
}

func (m *MonitoredObjectData) GetActuatorName() string {
	if m != nil {
		return m.ActuatorName
	}
	return ""
}

func (m *MonitoredObjectData) GetReflectorType() MonitoredObjectData_DeviceType {
	if m != nil {
		return m.ReflectorType
	}
	return MonitoredObjectData_DT_UNKNOWN
}

func (m *MonitoredObjectData) GetReflectorName() string {
	if m != nil {
		return m.ReflectorName
	}
	return ""
}

func (m *MonitoredObjectData) GetObjectName() string {
	if m != nil {
		return m.ObjectName
	}
	return ""
}

func (m *MonitoredObjectData) GetObjectType() MonitoredObjectData_MonitoredObjectType {
	if m != nil {
		return m.ObjectType
	}
	return MonitoredObjectData_MO_UNKNOWN
}

func (m *MonitoredObjectData) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *MonitoredObjectData) GetLastModifiedTimestamp() int64 {
	if m != nil {
		return m.LastModifiedTimestamp
	}
	return 0
}

func (m *MonitoredObjectData) GetDomainSet() []string {
	if m != nil {
		return m.DomainSet
	}
	return nil
}

// MonitoredObject - Wrapper for requests involving a MonitoredObject that are
// scoped to a single Tenant.
type MonitoredObject struct {
	XId  string               `protobuf:"bytes,1,opt,name=_id,json=Id" json:"_id,omitempty"`
	XRev string               `protobuf:"bytes,2,opt,name=_rev,json=Rev" json:"_rev,omitempty"`
	Data *MonitoredObjectData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *MonitoredObject) Reset()                    { *m = MonitoredObject{} }
func (m *MonitoredObject) String() string            { return proto.CompactTextString(m) }
func (*MonitoredObject) ProtoMessage()               {}
func (*MonitoredObject) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *MonitoredObject) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *MonitoredObject) GetXRev() string {
	if m != nil {
		return m.XRev
	}
	return ""
}

func (m *MonitoredObject) GetData() *MonitoredObjectData {
	if m != nil {
		return m.Data
	}
	return nil
}

// MonitoredObjectList - Wrapper for requests which return a list of MonitoredObjects
// scoped to a single Tenant.
type MonitoredObjectList struct {
	Data []*MonitoredObject `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

func (m *MonitoredObjectList) Reset()                    { *m = MonitoredObjectList{} }
func (m *MonitoredObjectList) String() string            { return proto.CompactTextString(m) }
func (*MonitoredObjectList) ProtoMessage()               {}
func (*MonitoredObjectList) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *MonitoredObjectList) GetData() []*MonitoredObject {
	if m != nil {
		return m.Data
	}
	return nil
}

type MonitoredObjectIdRequest struct {
	TenantId          string `protobuf:"bytes,1,opt,name=tenantId" json:"tenantId,omitempty"`
	MonitoredObjectId string `protobuf:"bytes,2,opt,name=monitoredObjectId" json:"monitoredObjectId,omitempty"`
}

func (m *MonitoredObjectIdRequest) Reset()                    { *m = MonitoredObjectIdRequest{} }
func (m *MonitoredObjectIdRequest) String() string            { return proto.CompactTextString(m) }
func (*MonitoredObjectIdRequest) ProtoMessage()               {}
func (*MonitoredObjectIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *MonitoredObjectIdRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *MonitoredObjectIdRequest) GetMonitoredObjectId() string {
	if m != nil {
		return m.MonitoredObjectId
	}
	return ""
}

// Provides options to configure how the GetMonitoredObjectToDomainMap API will return its results.
// byCount: true will return a count of Monitored Objects, false will return a set of MonitoredObject IDs.
// domainSet: set of Domain IDs to filter the request by.
type MonitoredObjectCountByDomainRequest struct {
	TenantId  string   `protobuf:"bytes,1,opt,name=tenantId" json:"tenantId,omitempty"`
	ByCount   bool     `protobuf:"varint,2,opt,name=byCount" json:"byCount,omitempty"`
	DomainSet []string `protobuf:"bytes,3,rep,name=domainSet" json:"domainSet,omitempty"`
}

func (m *MonitoredObjectCountByDomainRequest) Reset()         { *m = MonitoredObjectCountByDomainRequest{} }
func (m *MonitoredObjectCountByDomainRequest) String() string { return proto.CompactTextString(m) }
func (*MonitoredObjectCountByDomainRequest) ProtoMessage()    {}
func (*MonitoredObjectCountByDomainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{19}
}

func (m *MonitoredObjectCountByDomainRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *MonitoredObjectCountByDomainRequest) GetByCount() bool {
	if m != nil {
		return m.ByCount
	}
	return false
}

func (m *MonitoredObjectCountByDomainRequest) GetDomainSet() []string {
	if m != nil {
		return m.DomainSet
	}
	return nil
}

type MonitoredObjectCountByDomainResponse struct {
	DomainToMonitoredObjectCountMap map[string]int64               `protobuf:"bytes,1,rep,name=domainToMonitoredObjectCountMap" json:"domainToMonitoredObjectCountMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	DomainToMonitoredObjectSetMap   map[string]*MonitoredObjectSet `protobuf:"bytes,2,rep,name=domainToMonitoredObjectSetMap" json:"domainToMonitoredObjectSetMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *MonitoredObjectCountByDomainResponse) Reset()         { *m = MonitoredObjectCountByDomainResponse{} }
func (m *MonitoredObjectCountByDomainResponse) String() string { return proto.CompactTextString(m) }
func (*MonitoredObjectCountByDomainResponse) ProtoMessage()    {}
func (*MonitoredObjectCountByDomainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{20}
}

func (m *MonitoredObjectCountByDomainResponse) GetDomainToMonitoredObjectCountMap() map[string]int64 {
	if m != nil {
		return m.DomainToMonitoredObjectCountMap
	}
	return nil
}

func (m *MonitoredObjectCountByDomainResponse) GetDomainToMonitoredObjectSetMap() map[string]*MonitoredObjectSet {
	if m != nil {
		return m.DomainToMonitoredObjectSetMap
	}
	return nil
}

type MonitoredObjectSet struct {
	MonitoredObjectSet []string `protobuf:"bytes,1,rep,name=monitoredObjectSet" json:"monitoredObjectSet,omitempty"`
}

func (m *MonitoredObjectSet) Reset()                    { *m = MonitoredObjectSet{} }
func (m *MonitoredObjectSet) String() string            { return proto.CompactTextString(m) }
func (*MonitoredObjectSet) ProtoMessage()               {}
func (*MonitoredObjectSet) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{21} }

func (m *MonitoredObjectSet) GetMonitoredObjectSet() []string {
	if m != nil {
		return m.MonitoredObjectSet
	}
	return nil
}

type TenantMeta struct {
	TenantId                string `protobuf:"bytes,2,opt,name=tenantId" json:"tenantId,omitempty"`
	Datatype                string `protobuf:"bytes,3,opt,name=datatype" json:"datatype,omitempty"`
	TenantName              string `protobuf:"bytes,4,opt,name=tenantName" json:"tenantName,omitempty"`
	DefaultThresholdProfile string `protobuf:"bytes,5,opt,name=defaultThresholdProfile" json:"defaultThresholdProfile,omitempty"`
	CreatedTimestamp        int64  `protobuf:"varint,6,opt,name=createdTimestamp" json:"createdTimestamp,omitempty"`
	LastModifiedTimestamp   int64  `protobuf:"varint,7,opt,name=lastModifiedTimestamp" json:"lastModifiedTimestamp,omitempty"`
}

func (m *TenantMeta) Reset()                    { *m = TenantMeta{} }
func (m *TenantMeta) String() string            { return proto.CompactTextString(m) }
func (*TenantMeta) ProtoMessage()               {}
func (*TenantMeta) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{22} }

func (m *TenantMeta) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *TenantMeta) GetDatatype() string {
	if m != nil {
		return m.Datatype
	}
	return ""
}

func (m *TenantMeta) GetTenantName() string {
	if m != nil {
		return m.TenantName
	}
	return ""
}

func (m *TenantMeta) GetDefaultThresholdProfile() string {
	if m != nil {
		return m.DefaultThresholdProfile
	}
	return ""
}

func (m *TenantMeta) GetCreatedTimestamp() int64 {
	if m != nil {
		return m.CreatedTimestamp
	}
	return 0
}

func (m *TenantMeta) GetLastModifiedTimestamp() int64 {
	if m != nil {
		return m.LastModifiedTimestamp
	}
	return 0
}

type TenantMetadata struct {
	XId  string      `protobuf:"bytes,1,opt,name=_id,json=Id" json:"_id,omitempty"`
	XRev string      `protobuf:"bytes,2,opt,name=_rev,json=Rev" json:"_rev,omitempty"`
	Data *TenantMeta `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TenantMetadata) Reset()                    { *m = TenantMetadata{} }
func (m *TenantMetadata) String() string            { return proto.CompactTextString(m) }
func (*TenantMetadata) ProtoMessage()               {}
func (*TenantMetadata) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{23} }

func (m *TenantMetadata) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *TenantMetadata) GetXRev() string {
	if m != nil {
		return m.XRev
	}
	return ""
}

func (m *TenantMetadata) GetData() *TenantMeta {
	if m != nil {
		return m.Data
	}
	return nil
}

type TenantMetaIdRequest struct {
	TenantId string `protobuf:"bytes,1,opt,name=tenantId" json:"tenantId,omitempty"`
	MetaId   string `protobuf:"bytes,2,opt,name=metaId" json:"metaId,omitempty"`
}

func (m *TenantMetaIdRequest) Reset()                    { *m = TenantMetaIdRequest{} }
func (m *TenantMetaIdRequest) String() string            { return proto.CompactTextString(m) }
func (*TenantMetaIdRequest) ProtoMessage()               {}
func (*TenantMetaIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{24} }

func (m *TenantMetaIdRequest) GetTenantId() string {
	if m != nil {
		return m.TenantId
	}
	return ""
}

func (m *TenantMetaIdRequest) GetMetaId() string {
	if m != nil {
		return m.MetaId
	}
	return ""
}

func init() {
	proto.RegisterType((*TenantDomainData)(nil), "gathergrpc.TenantDomainData")
	proto.RegisterType((*TenantDomain)(nil), "gathergrpc.TenantDomain")
	proto.RegisterType((*TenantDomainList)(nil), "gathergrpc.TenantDomainList")
	proto.RegisterType((*TenantDomainIdRequest)(nil), "gathergrpc.TenantDomainIdRequest")
	proto.RegisterType((*TenantIngestionProfileData)(nil), "gathergrpc.TenantIngestionProfileData")
	proto.RegisterType((*TenantIngestionProfileData_MetricMap)(nil), "gathergrpc.TenantIngestionProfileData.MetricMap")
	proto.RegisterType((*TenantIngestionProfileData_MonitoredObjectMap)(nil), "gathergrpc.TenantIngestionProfileData.MonitoredObjectMap")
	proto.RegisterType((*TenantIngestionProfileData_VendorMap)(nil), "gathergrpc.TenantIngestionProfileData.VendorMap")
	proto.RegisterType((*TenantIngestionProfile)(nil), "gathergrpc.TenantIngestionProfile")
	proto.RegisterType((*TenantIngestionProfileIdRequest)(nil), "gathergrpc.TenantIngestionProfileIdRequest")
	proto.RegisterType((*TenantThresholdProfileData)(nil), "gathergrpc.TenantThresholdProfileData")
	proto.RegisterType((*TenantThresholdProfileData_EventAttrMap)(nil), "gathergrpc.TenantThresholdProfileData.EventAttrMap")
	proto.RegisterType((*TenantThresholdProfileData_EventMap)(nil), "gathergrpc.TenantThresholdProfileData.EventMap")
	proto.RegisterType((*TenantThresholdProfileData_DirectionMap)(nil), "gathergrpc.TenantThresholdProfileData.DirectionMap")
	proto.RegisterType((*TenantThresholdProfileData_MetricMap)(nil), "gathergrpc.TenantThresholdProfileData.MetricMap")
	proto.RegisterType((*TenantThresholdProfileData_MonitoredObjectTypeMap)(nil), "gathergrpc.TenantThresholdProfileData.MonitoredObjectTypeMap")
	proto.RegisterType((*TenantThresholdProfileData_VendorMap)(nil), "gathergrpc.TenantThresholdProfileData.VendorMap")
	proto.RegisterType((*TenantThresholdProfile)(nil), "gathergrpc.TenantThresholdProfile")
	proto.RegisterType((*TenantThresholdProfileIdRequest)(nil), "gathergrpc.TenantThresholdProfileIdRequest")
	proto.RegisterType((*TenantThresholdProfileList)(nil), "gathergrpc.TenantThresholdProfileList")
	proto.RegisterType((*TenantUserData)(nil), "gathergrpc.TenantUserData")
	proto.RegisterType((*TenantUser)(nil), "gathergrpc.TenantUser")
	proto.RegisterType((*TenantUserList)(nil), "gathergrpc.TenantUserList")
	proto.RegisterType((*TenantUserIdRequest)(nil), "gathergrpc.TenantUserIdRequest")
	proto.RegisterType((*MonitoredObjectData)(nil), "gathergrpc.MonitoredObjectData")
	proto.RegisterType((*MonitoredObject)(nil), "gathergrpc.MonitoredObject")
	proto.RegisterType((*MonitoredObjectList)(nil), "gathergrpc.MonitoredObjectList")
	proto.RegisterType((*MonitoredObjectIdRequest)(nil), "gathergrpc.MonitoredObjectIdRequest")
	proto.RegisterType((*MonitoredObjectCountByDomainRequest)(nil), "gathergrpc.MonitoredObjectCountByDomainRequest")
	proto.RegisterType((*MonitoredObjectCountByDomainResponse)(nil), "gathergrpc.MonitoredObjectCountByDomainResponse")
	proto.RegisterType((*MonitoredObjectSet)(nil), "gathergrpc.MonitoredObjectSet")
	proto.RegisterType((*TenantMeta)(nil), "gathergrpc.TenantMeta")
	proto.RegisterType((*TenantMetadata)(nil), "gathergrpc.TenantMetadata")
	proto.RegisterType((*TenantMetaIdRequest)(nil), "gathergrpc.TenantMetaIdRequest")
	proto.RegisterEnum("gathergrpc.MonitoredObjectData_MonitoredObjectType", MonitoredObjectData_MonitoredObjectType_name, MonitoredObjectData_MonitoredObjectType_value)
	proto.RegisterEnum("gathergrpc.MonitoredObjectData_DeviceType", MonitoredObjectData_DeviceType_name, MonitoredObjectData_DeviceType_value)
}

func init() { proto.RegisterFile("gathergrpc/tenantModels.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1517 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0xcb, 0x6f, 0x1b, 0x45,
	0x18, 0x67, 0xed, 0x3c, 0xec, 0x2f, 0x4e, 0xea, 0x4c, 0x69, 0x58, 0x6d, 0x5f, 0xd1, 0x52, 0xa1,
	0x28, 0x54, 0x6e, 0x94, 0x54, 0xa8, 0x54, 0xad, 0x4a, 0xa8, 0x53, 0xc9, 0x80, 0x9d, 0x68, 0xed,
	0xb6, 0xea, 0x01, 0xa5, 0x1b, 0xef, 0x24, 0xdd, 0xd6, 0xbb, 0xeb, 0xee, 0x8e, 0x53, 0xac, 0x5e,
	0x38, 0x72, 0xe1, 0xc0, 0x09, 0x71, 0x42, 0xdc, 0x28, 0x57, 0x0e, 0x48, 0xfc, 0x23, 0x9c, 0x38,
	0x71, 0xe0, 0xc0, 0x3f, 0x81, 0x76, 0x76, 0x76, 0x3d, 0xb3, 0x3b, 0xb1, 0xd7, 0x49, 0x91, 0xb8,
	0xf9, 0x7b, 0xcc, 0x6f, 0xbe, 0xe7, 0x7c, 0x33, 0x6b, 0xb8, 0x7c, 0x64, 0x92, 0x67, 0xd8, 0x3f,
	0xf2, 0xfb, 0xdd, 0x1b, 0x04, 0xbb, 0xa6, 0x4b, 0x9a, 0x9e, 0x85, 0x7b, 0x41, 0xad, 0xef, 0x7b,
	0xc4, 0x43, 0x30, 0x12, 0x6b, 0xbc, 0x6a, 0xd7, 0x73, 0x1c, 0xcf, 0xe5, 0x55, 0xf5, 0x6f, 0x0a,
	0x50, 0xed, 0x50, 0x84, 0xba, 0xe7, 0x98, 0xb6, 0x5b, 0x37, 0x89, 0x89, 0x34, 0x28, 0x45, 0xa8,
	0x0d, 0x4b, 0x2d, 0xac, 0x2a, 0x6b, 0x65, 0x23, 0xa1, 0x43, 0x99, 0x65, 0x12, 0x93, 0x0c, 0xfb,
	0x58, 0x2d, 0x46, 0xb2, 0x98, 0x46, 0x08, 0x66, 0x5c, 0xd3, 0xc1, 0xea, 0x0c, 0xe5, 0xd3, 0xdf,
	0xe8, 0x5d, 0x98, 0xed, 0x7a, 0x3d, 0xcf, 0x57, 0x67, 0x29, 0x33, 0x22, 0xd0, 0x06, 0x9c, 0x27,
	0xcf, 0x7c, 0x1c, 0x3c, 0xf3, 0x7a, 0xd6, 0x9e, 0xef, 0x1d, 0xda, 0x3d, 0xdc, 0xc6, 0x44, 0x9d,
	0x5b, 0x2d, 0xae, 0x95, 0x0d, 0x99, 0x08, 0xad, 0x43, 0xb5, 0xeb, 0x63, 0x93, 0x60, 0xab, 0x63,
	0x3b, 0x38, 0x20, 0xa6, 0xd3, 0x57, 0xe7, 0x57, 0x95, 0xb5, 0xa2, 0x91, 0xe1, 0xa3, 0x9b, 0x70,
	0xa1, 0x67, 0x06, 0x61, 0x4c, 0xec, 0x43, 0x9b, 0x5f, 0x50, 0xa2, 0x0b, 0xe4, 0x42, 0xdd, 0x82,
	0x0a, 0x1f, 0x09, 0x74, 0x0e, 0x8a, 0xfb, 0xb6, 0xa5, 0x2a, 0xd4, 0xee, 0x42, 0xc3, 0x42, 0xcb,
	0x30, 0xb3, 0xef, 0xe3, 0x63, 0x16, 0x92, 0xa2, 0x81, 0x8f, 0xd1, 0x06, 0xcc, 0x84, 0xde, 0xd3,
	0x48, 0x2c, 0x6c, 0x5e, 0xaa, 0x8d, 0x82, 0x5d, 0x4b, 0x47, 0xd5, 0xa0, 0x9a, 0xfa, 0x27, 0x62,
	0xbc, 0xbf, 0xb0, 0x03, 0x82, 0xae, 0x33, 0x14, 0x65, 0xb5, 0xb8, 0xb6, 0xb0, 0xa9, 0x9e, 0x84,
	0xc2, 0x10, 0x76, 0xe1, 0x02, 0xcf, 0x6d, 0x58, 0x06, 0x7e, 0x39, 0xc0, 0x01, 0x11, 0xd2, 0xa6,
	0x48, 0xd2, 0xc6, 0xd4, 0xe3, 0x94, 0xc6, 0xb4, 0xfe, 0xdb, 0x3c, 0x68, 0x11, 0x62, 0xc3, 0x3d,
	0xc2, 0x01, 0xb1, 0x3d, 0x97, 0x05, 0xfe, 0x4c, 0xd5, 0xf0, 0x19, 0xcc, 0x3b, 0x98, 0xf8, 0x76,
	0x37, 0xa0, 0x05, 0xb1, 0xb0, 0xb9, 0x91, 0x75, 0x4c, 0xb6, 0x61, 0xed, 0x11, 0x76, 0x2d, 0xcf,
	0x6f, 0x9a, 0x7d, 0x23, 0x06, 0x90, 0x66, 0x7f, 0x76, 0xda, 0xec, 0xcf, 0x8d, 0xc9, 0xbe, 0xf6,
	0xb3, 0x02, 0xe5, 0x26, 0xdd, 0xad, 0x69, 0xf6, 0xd1, 0x97, 0x50, 0x76, 0x62, 0x82, 0xa5, 0xe5,
	0x5e, 0x4e, 0xeb, 0x13, 0x90, 0xd1, 0xaf, 0x1d, 0x97, 0xf8, 0x43, 0x63, 0x84, 0xa8, 0xdd, 0x81,
	0x25, 0x51, 0x88, 0xaa, 0x50, 0x7c, 0x81, 0x87, 0x2c, 0x6d, 0xe1, 0xcf, 0xb0, 0x71, 0x8e, 0xcd,
	0xde, 0x00, 0xd3, 0x98, 0x97, 0x8c, 0x88, 0xb8, 0x5d, 0xb8, 0xa5, 0x68, 0x3f, 0x15, 0x00, 0x35,
	0x3d, 0xd7, 0x26, 0x9e, 0x8f, 0xad, 0xdd, 0x83, 0xe7, 0xb8, 0x4b, 0x42, 0x9b, 0xbf, 0x55, 0x60,
	0xc5, 0x11, 0xd9, 0x9d, 0x61, 0x1f, 0x8f, 0x3c, 0x78, 0x98, 0xd7, 0x83, 0x0c, 0x76, 0x9a, 0xc5,
	0x70, 0x23, 0xbf, 0x4e, 0xd8, 0x54, 0x7b, 0x0d, 0x17, 0xc7, 0x2c, 0x93, 0x78, 0xfc, 0x80, 0xf7,
	0x38, 0x7f, 0xb9, 0x24, 0x91, 0xe4, 0x63, 0xf4, 0x97, 0x02, 0xe5, 0xa4, 0x8e, 0xc2, 0x74, 0x1e,
	0xc7, 0xc4, 0x94, 0xe9, 0x4c, 0x40, 0x46, 0xbf, 0x58, 0x3a, 0x13, 0x44, 0xed, 0x15, 0x2c, 0x89,
	0x42, 0x89, 0x73, 0xbb, 0xa2, 0x73, 0x1f, 0x9f, 0x3a, 0x17, 0x9c, 0x97, 0xfa, 0x57, 0xb0, 0x22,
	0x5f, 0x9b, 0xeb, 0xf0, 0xba, 0x2d, 0x1c, 0x5e, 0x1f, 0xe4, 0xb3, 0x88, 0x1d, 0x42, 0x0e, 0x5c,
	0x95, 0xeb, 0xe4, 0x3b, 0x8e, 0x6a, 0x80, 0xec, 0xcc, 0x42, 0x66, 0x9b, 0x44, 0xa2, 0x7f, 0xbf,
	0x18, 0x1f, 0x51, 0x9d, 0xd4, 0x6c, 0x78, 0xeb, 0x03, 0x6b, 0x0f, 0x20, 0x99, 0x3f, 0x01, 0x3d,
	0x64, 0xa4, 0xa5, 0x28, 0xb3, 0x83, 0x3b, 0xb9, 0x38, 0x0c, 0xe9, 0xe1, 0x35, 0x37, 0xed, 0xe1,
	0x35, 0x3f, 0xee, 0xf0, 0xfa, 0x5d, 0x81, 0xca, 0xce, 0x31, 0x76, 0xc9, 0x36, 0x21, 0xb4, 0xe0,
	0x6d, 0xa8, 0x60, 0x8e, 0x66, 0x35, 0xbf, 0x93, 0xd3, 0x0d, 0x1e, 0x4a, 0x20, 0xa2, 0xca, 0x17,
	0xa0, 0xb5, 0x7b, 0xb0, 0x9c, 0x51, 0x99, 0x74, 0x9c, 0x95, 0xf9, 0x56, 0xfd, 0x43, 0x81, 0x12,
	0x45, 0x08, 0x0d, 0x7f, 0x02, 0x25, 0xcc, 0x7e, 0x33, 0xa3, 0xef, 0x4e, 0x63, 0x74, 0x62, 0x70,
	0x62, 0x6c, 0x02, 0xa7, 0xf5, 0x61, 0x51, 0x10, 0x49, 0x8c, 0x6c, 0x88, 0x4d, 0xba, 0x75, 0x8a,
	0x78, 0xf1, 0x9e, 0xfd, 0xa3, 0x40, 0xa5, 0x6e, 0xfb, 0xb8, 0x1b, 0x16, 0x33, 0x4b, 0x8b, 0xc5,
	0xd1, 0x53, 0xa6, 0x85, 0x87, 0x12, 0x08, 0x96, 0x16, 0x1e, 0x5a, 0xeb, 0xc3, 0x72, 0x46, 0x45,
	0xe2, 0xf1, 0x8e, 0xe8, 0xf1, 0x8d, 0x29, 0x83, 0xcd, 0x7b, 0xfb, 0xe7, 0x29, 0x26, 0xa8, 0x14,
	0x3c, 0xcf, 0x04, 0x7d, 0x99, 0x63, 0x82, 0x9e, 0x32, 0x9b, 0x7c, 0xd8, 0x78, 0xff, 0xde, 0x14,
	0x60, 0x45, 0x3e, 0xd0, 0xd0, 0x77, 0x93, 0x46, 0xef, 0x93, 0xbc, 0xae, 0x4b, 0x41, 0xfe, 0x2f,
	0xe3, 0x77, 0x7c, 0xb6, 0xf8, 0x58, 0xfd, 0x7d, 0x8a, 0xf1, 0x3b, 0xfe, 0x44, 0x1d, 0x33, 0x7e,
	0x5f, 0xe7, 0x18, 0xbf, 0x6d, 0xd1, 0xb9, 0xbb, 0x67, 0xca, 0x87, 0x74, 0x04, 0xa7, 0xd7, 0xbf,
	0x9d, 0x11, 0x2c, 0xb3, 0x2a, 0x3d, 0x82, 0xd3, 0x3a, 0xb9, 0x47, 0x30, 0xc9, 0x2c, 0x8c, 0x47,
	0x70, 0x56, 0xa2, 0x77, 0x4e, 0x9a, 0xc0, 0xf4, 0x09, 0xf3, 0x91, 0xf0, 0x84, 0xd1, 0x27, 0x3b,
	0xc2, 0x9c, 0x78, 0x53, 0x84, 0xa5, 0x48, 0xe1, 0x61, 0x80, 0xfd, 0x33, 0x0d, 0x73, 0x0d, 0x4a,
	0x83, 0x00, 0xfb, 0xdc, 0x40, 0x4f, 0xe8, 0x50, 0xd6, 0x37, 0x83, 0xe0, 0x95, 0xe7, 0x5b, 0xec,
	0x21, 0x9a, 0xd0, 0xe1, 0x5b, 0x34, 0xc0, 0xae, 0xb5, 0xeb, 0x1e, 0x78, 0xa6, 0x6f, 0xd9, 0xee,
	0xd1, 0x8e, 0x63, 0xda, 0x3d, 0x3a, 0xa1, 0x4b, 0x86, 0x4c, 0x84, 0xd6, 0xe0, 0x9c, 0x97, 0xb0,
	0x3a, 0xde, 0x0b, 0xec, 0xd2, 0xf1, 0x5c, 0x36, 0xd2, 0x6c, 0xa4, 0x43, 0x25, 0xb4, 0xe1, 0x11,
	0xf6, 0xe9, 0xc4, 0xa6, 0x0f, 0xd0, 0x92, 0x21, 0xf0, 0xd0, 0x87, 0x30, 0x1b, 0x10, 0x93, 0x60,
	0xb5, 0xbc, 0xaa, 0xac, 0x2d, 0x6d, 0x5e, 0xe0, 0x63, 0x17, 0x06, 0xa5, 0x1d, 0x0a, 0x8d, 0x48,
	0x07, 0xa9, 0x30, 0x1f, 0xbd, 0xdb, 0x02, 0x15, 0xe8, 0x63, 0x39, 0x26, 0xa5, 0xb7, 0x8c, 0x85,
	0x69, 0x6f, 0x19, 0x95, 0x71, 0x0f, 0xe4, 0xa7, 0x00, 0xa3, 0x54, 0xe5, 0x2a, 0xef, 0x9a, 0x50,
	0xde, 0x5a, 0xb6, 0x2a, 0xe2, 0xa4, 0xb3, 0x6a, 0xb8, 0xc3, 0x17, 0x03, 0xad, 0xab, 0x75, 0xa1,
	0xae, 0x56, 0xe4, 0x08, 0x6c, 0x75, 0x03, 0xce, 0x8f, 0x78, 0xf9, 0x9a, 0x60, 0x05, 0xe6, 0x06,
	0x54, 0x99, 0x59, 0xcd, 0x28, 0xfd, 0xd7, 0x59, 0x38, 0x9f, 0xea, 0x7d, 0x5a, 0x9b, 0x4b, 0x50,
	0x18, 0xf9, 0x6c, 0x5b, 0xa7, 0xae, 0xd5, 0x16, 0x54, 0xcc, 0x2e, 0x19, 0x98, 0xc4, 0xf3, 0xc3,
	0x33, 0x85, 0xd6, 0xeb, 0xd2, 0xe6, 0x3a, 0xef, 0x9e, 0x64, 0xfb, 0x5a, 0x1d, 0x1f, 0xdb, 0x5d,
	0x1c, 0xae, 0x30, 0x84, 0xf5, 0x61, 0x9d, 0xc5, 0x74, 0x2b, 0xac, 0xff, 0xa8, 0xc6, 0x05, 0x1e,
	0xda, 0x83, 0x45, 0x1f, 0x1f, 0xf6, 0x70, 0x37, 0xde, 0x74, 0x6e, 0xea, 0x4d, 0x45, 0x00, 0x74,
	0x8d, 0x43, 0xa4, 0xdb, 0x46, 0x5d, 0x20, 0x32, 0xd1, 0x15, 0x00, 0x8f, 0xa2, 0x51, 0x95, 0x12,
	0x55, 0xe1, 0x38, 0xa8, 0x1d, 0xcb, 0xa9, 0x51, 0x51, 0x13, 0x6c, 0x4d, 0x32, 0x4a, 0x72, 0x30,
	0x1b, 0x1c, 0x8c, 0xb4, 0x1b, 0x60, 0xda, 0x6e, 0x58, 0x18, 0xd3, 0x0d, 0xe8, 0x12, 0x94, 0xa3,
	0xd6, 0x6b, 0x63, 0xa2, 0x56, 0x68, 0x2f, 0x8e, 0x18, 0xfa, 0x46, 0xa6, 0x7e, 0xa8, 0x59, 0x4b,
	0x00, 0xcd, 0xdd, 0xfd, 0x87, 0xad, 0xcf, 0x5b, 0xbb, 0x8f, 0x5b, 0xd5, 0x77, 0x50, 0x19, 0x66,
	0x3b, 0x8f, 0xb7, 0x9b, 0x7b, 0x55, 0x45, 0xdf, 0x06, 0x18, 0x45, 0x3a, 0x54, 0xac, 0x77, 0x38,
	0xc5, 0x2a, 0x54, 0xb6, 0xef, 0xdf, 0xdf, 0xa9, 0x37, 0xb6, 0x5b, 0xfb, 0xad, 0x46, 0xbd, 0xaa,
	0xa0, 0x65, 0x58, 0x4c, 0x38, 0x8f, 0x42, 0x56, 0x41, 0x7f, 0x0e, 0xe7, 0x52, 0x9b, 0xe6, 0xea,
	0xd2, 0x2d, 0xa1, 0x4b, 0xaf, 0x4e, 0x08, 0x3d, 0x6b, 0xb6, 0x07, 0x19, 0x07, 0x69, 0xbf, 0xde,
	0x48, 0xb0, 0xc2, 0x7e, 0xbd, 0x38, 0x06, 0x8b, 0xe1, 0x58, 0xa0, 0xa6, 0x04, 0xf9, 0x3a, 0xf7,
	0x3a, 0x2c, 0x3b, 0xe9, 0x75, 0xcc, 0xa9, 0xac, 0x40, 0x1f, 0xc2, 0xfb, 0xa9, 0x5d, 0xee, 0x7b,
	0x03, 0x97, 0x7c, 0x3a, 0x64, 0x5f, 0xd6, 0x72, 0x6c, 0xa8, 0xc2, 0xfc, 0xc1, 0x90, 0xae, 0x62,
	0x5f, 0x64, 0x62, 0x52, 0xac, 0x84, 0x62, 0xba, 0x12, 0x7e, 0x99, 0x81, 0x6b, 0xe3, 0xf7, 0x0e,
	0xfa, 0x9e, 0x1b, 0x60, 0xf4, 0xa3, 0x02, 0x57, 0xa3, 0x65, 0x1d, 0x4f, 0xb6, 0xe0, 0x84, 0x0f,
	0x39, 0x79, 0xb0, 0x6b, 0xf5, 0xf1, 0xb8, 0xd1, 0x95, 0x6a, 0xd2, 0xee, 0xe8, 0x07, 0x05, 0x2e,
	0x9f, 0xa0, 0xd3, 0xc6, 0xd4, 0xbe, 0x02, 0xb5, 0xaf, 0xfd, 0xb6, 0xec, 0x8b, 0x50, 0x23, 0xeb,
	0xc6, 0xef, 0xac, 0x19, 0x70, 0x2d, 0x8f, 0x93, 0x93, 0x5e, 0xa6, 0x45, 0xfe, 0x16, 0xdb, 0x07,
	0x7d, 0xb2, 0x61, 0x12, 0xc4, 0x9b, 0xe2, 0x65, 0xf3, 0xca, 0x98, 0x70, 0xb4, 0x31, 0xe1, 0x6f,
	0x93, 0xf5, 0xcc, 0x97, 0xbd, 0x36, 0x26, 0xe1, 0x55, 0xcd, 0xc9, 0x70, 0x69, 0x2d, 0x94, 0x0d,
	0x89, 0x44, 0xff, 0xba, 0x10, 0x4f, 0xea, 0x26, 0x3e, 0xc3, 0x85, 0xea, 0x0a, 0x40, 0xa4, 0xd7,
	0x1a, 0x5d, 0xa9, 0x38, 0x0e, 0xba, 0x05, 0xef, 0x59, 0xf8, 0xd0, 0x1c, 0xf4, 0x32, 0x97, 0x3b,
	0x36, 0x7f, 0x4e, 0x12, 0xff, 0xf7, 0x5f, 0x44, 0xf4, 0xa7, 0xf1, 0x4d, 0x22, 0x8c, 0x40, 0xe8,
	0x51, 0xae, 0x93, 0x70, 0x5d, 0x38, 0x09, 0x25, 0xb7, 0x8d, 0x10, 0x2d, 0x7d, 0xdb, 0x08, 0x79,
	0xb9, 0x6f, 0x1b, 0x0e, 0x55, 0x8e, 0x6f, 0x1b, 0x11, 0x75, 0x30, 0x47, 0xff, 0x8b, 0xd9, 0xfa,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x5b, 0xe3, 0xc9, 0xb6, 0xd7, 0x19, 0x00, 0x00,
}
