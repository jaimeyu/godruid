syntax = "proto3";

package gathergrpc;

import "gathergrpc/commonModels.proto";

// TenantDomain - model for a Domain for a single Tenant.
message TenantDomain {
    string tenantId = 1;
    string datatype = 2;

    string name = 3;
    string color = 4;

    int64 createdTimestamp = 5;
    int64 lastModifiedTimestamp = 6;

    repeated string thresholdProfileSet = 7;
}

// TenantDomainRequest - wrapper for requests that involve a Tenant Domain
message TenantDomainRequest {
    string _id = 1;
    string _rev = 2;
    TenantDomain data = 3;
}

// TenantDomainResponse - wrapper for responses that involve a Tenant Domain
message TenantDomainResponse {
    string _id = 1;
    string _rev = 2;
    TenantDomain data = 3;
}

// TenantDomainListResponse - a wrapper for a list of TenantDomain objects that 
// are returned as a response to a request..
message TenantDomainListResponse {
    repeated TenantDomainResponse data = 1;
}

// TenantDomainIdRequest - wrapper for requests that involve a Tenant Domain, 
// but only require the domainID to complete the request.
message TenantDomainIdRequest {
    string tenantId = 1;
    string domainId = 2;
}


// Not dealing with the site tour right now as the concept is not fully 
// thought out. Leaving this snippet in though as we will need to address
// the workflow eventually.
// message TenantSiteTour {
//     string id = 1;
//     string rev = 2;
//     string datatype = 3;

//     bool onboarding = 4;

//     int64 createdTimestamp = 5;
//     int64 lastModifiedTimestamp = 6;
// }

// TenantIngestionProfile - model for the singleton object that 
// governs what data is displayed for a Tenant.
message TenantIngestionProfile {
    
    message MetricMap {
        map<string, bool> metricMap = 1;
    }
    message MonitoredObjectMap {
        map<string, MetricMap> monitoredObjectTypeMap = 1;
    }
    message VendorMap {
        map<string, MonitoredObjectMap> vendorMap = 1;
    }

    string tenantId = 1;
    string datatype = 2;

    VendorMap metrics = 3;

    int64 createdTimestamp = 4;
    int64 lastModifiedTimestamp = 5;
}

// TenantIngestionProfileRequest - wrapper for requests that involve the
// Tenant Ingestion Profile
message TenantIngestionProfileRequest {
    string _id = 1;
    string _rev = 2;
    TenantIngestionProfile data = 3;
}

// TenantIngestionProfileResponse - wrapper to provide a Tenant Ingestion Profile
// in a response.
message TenantIngestionProfileResponse {
    string _id = 1;
    string _rev = 2;
    TenantIngestionProfile data = 3;
}

message TenantIngestionProfileIdRequest {
    string tenantId = 1;
    string ingestionProfileId = 2;
}

//Threshold Profile

message TenantThresholdProfile {

  message EventAttrMap {
    map<string, string> eventAttrMap = 1;
  }

  message EventMap {
    map<string, EventAttrMap> eventMap = 1;
  }

  message DirectionMap {
    map<string, EventMap> directionMap = 1;
  }

  message MetricMap {
    map<string, DirectionMap> metricMap = 1;
  }

  message MonitoredObjectTypeMap {
    map<string, MetricMap> monitoredObjectTypeMap = 1; 
  }

  message VendorMap {
    map<string, MonitoredObjectTypeMap> vendorMap = 1; 
  }

  string tenantId = 1;
  string datatype = 2;
  string name = 3;
  VendorMap thresholds = 4;
  int64 createdTimestamp = 5;
  int64 lastModifiedTimestamp = 6;

}

// TenantThresholdProfileRequest - wrapper for requests that involve the
// Tenant Threshold Profile
message TenantThresholdProfileRequest {
    string _id = 1;
    string _rev = 2;
    TenantThresholdProfile data = 3;
}

// TenantIngestionProfileResponse - wrapper to provide a Tenant Ingestion Profile
// in a response.
message TenantThresholdProfileResponse {
    string _id = 1;
    string _rev = 2;
    TenantThresholdProfile data = 3;
}

message TenantThresholdProfileIdRequest {
    string tenantId = 1;
    string thresholdProfileId = 2;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TenantUser - model for a User that is scoped to a single Tenant.
message TenantUser {
    string tenantId = 1;
    string datatype = 2;

    string username = 3;
    string password = 4;
    bool sendOnboardingEmail = 5;
    string onboardingToken = 6;
    bool userVerified = 7;
    UserState state = 8;
    repeated string domains = 9;
    // TenantSiteTour siteTour = 11;  --- Come back to this concept when it is fleshed out. ---

    int64 createdTimestamp = 10;
    int64 lastModifiedTimestamp = 11;
}

// TenantUserRequest - wrapper for requests that involve a User that
// is scoped to a single Tenant.
message TenantUserRequest {
    string _id = 1;
    string _rev = 2;
    TenantUser data = 3;
}

// TenantUserResponse - wrapper for responses to requests that involve a User that
// is scoped to a single Tenant.
message TenantUserResponse {
    string _id = 1;
    string _rev = 2;
    TenantUser data = 3;
}

// TenantUserListResponse - a wrapper to handle requests that return a
// list of TenantUser objects.
message TenantUserListResponse {
    repeated TenantUserResponse data = 1;
}

// TenantUserIdRequest - wrapper for requests that involve a Tenant User, 
// but only require the userID to complete the request.
message TenantUserIdRequest {
    string tenantId = 1;
    string userId = 2;
}

// MonitoredObject - describes a unique device/object which is reporting 
// data from the network.
message MonitoredObject {
    enum MonitoredObjectType {
        MO_UNKNOWN = 0;
        TWAMP = 1;
    }
    enum DeviceType {
        DT_UNKNOWN = 0;
        ACCEDIAN_NID = 1;
        ACCEDIAN_VNID = 2;
    }

    string id = 1;
    string tenantId = 2;
    string datatype = 3;

    DeviceType actuatorType = 4;
    string actuatorName = 5;

    DeviceType reflectorType = 6;
    string reflectorName = 7;
    
    string objectName = 8;
    MonitoredObjectType objectType = 9;  

    int64 createdTimestamp = 10;
    int64 lastModifiedTimestamp = 11;

    repeated string domainSet = 12;
}


// MonitoredObjectRequest - Wrapper for requests involving a MonitoredObject that are 
// scoped to a single Tenant.
message MonitoredObjectRequest {
    string _id = 1;
    string _rev = 2;
    MonitoredObject data = 3;
}

// MonitoredObjectRequest - Wrapper for responses involving a MonitoredObject that are 
// scoped to a single Tenant.
message MonitoredObjectResponse {
    string _id = 1;
    string _rev = 2;
    MonitoredObject data = 3;
}

// MonitoredObjectListResponse - Wrapper for requests which return a list of MonitoredObjects 
// scoped to a single Tenant.
message MonitoredObjectListResponse {
    repeated MonitoredObjectResponse data = 3;
}

message MonitoredObjectIdRequest {
    string tenantId = 1;
    string monitoredObjectId = 2;
}

// Provides options to configure how the GetMonitoredObjectToDomainMap API will return its results.
// byCount: true will return a count of Monitored Objects, false will return a set of MonitoredObject IDs.
// domainSet: set of Domain IDs to filter the request by.
message MonitoredObjectCountByDomainRequest {
    string tenantId = 1;
    bool byCount = 2;
    repeated string domainSet = 3;
}

message MonitoredObjectCountByDomainResponse {
    map<string, int64> domainToMonitoredObjectCountMap = 1;
    map<string, MonitoredObjectList> domainToMonitoredObjectSetMap = 2;
}

message MonitoredObjectList {
    repeated string  monitoredObjectSet = 1;
}

message TenantMeta {
    string tenantId = 1;
    string datatype = 2;

    string tenantName = 3;
    string defaultThresholdProfile = 4;

    int64 createdTimestamp = 5;
    int64 lastModifiedTimestamp = 6;
}

message TenantMetadata {
    string _id = 1;
    string _rev = 2;
    TenantMeta data = 3;
}

message TenantMetaIdRequest {
    string tenantId = 1;
    string metaId = 2;
}