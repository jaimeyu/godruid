syntax = "proto3";

package gathergrpc;

import "gathergrpc/commonModels.proto";

// TenantDomainData - model for a Domain for a single Tenant.
message TenantDomainData {
    string tenantId = 2;
    string datatype = 3;

    string name = 4;
    string color = 5;
    repeated string thresholdProfileSet = 6;

    int64 createdTimestamp = 7;
    int64 lastModifiedTimestamp = 8; 
}

// TenantDomain - wrapper for requests that involve a Tenant Domain
message TenantDomain {
    string _id = 1;
    string _rev = 2;
    TenantDomainData data = 3;
}

// TenantDomainListResponse - a wrapper for a list of TenantDomain objects that 
// are returned as a response to a request..
message TenantDomainList {
    repeated TenantDomain data = 1;
}

// TenantDomainIdRequest - wrapper for requests that involve a Tenant Domain, 
// but only require the domainID to complete the request.
message TenantDomainIdRequest {
    string tenantId = 1;
    string domainId = 2;
}

// TenantIngestionProfileData - model for the singleton object that 
// governs what data is displayed for a Tenant.
message TenantIngestionProfileData {
    
    message MetricMap {
        map<string, bool> metricMap = 1;
    }
    message MonitoredObjectMap {
        map<string, MetricMap> monitoredObjectTypeMap = 1;
    }
    message VendorMap {
        map<string, MonitoredObjectMap> vendorMap = 1;
    }

    string tenantId = 2;
    string datatype = 3;

    VendorMap metrics = 4;

    int64 createdTimestamp = 5;
    int64 lastModifiedTimestamp = 6;
}

// TenantIngestionProfile - wrapper for requests that involve the
// Tenant Ingestion Profile
message TenantIngestionProfile {
    string _id = 1;
    string _rev = 2;
    TenantIngestionProfileData data = 3;
}

message TenantIngestionProfileIdRequest {
    string tenantId = 1;
    string ingestionProfileId = 2;
}

//Threshold Profile Data
message TenantThresholdProfileData {

  message EventAttrMap {
    map<string, string> eventAttrMap = 1;
  }

  message EventMap {
    map<string, EventAttrMap> eventMap = 1;
  }

  message DirectionMap {
    map<string, EventMap> directionMap = 1;
  }

  message MetricMap {
    map<string, DirectionMap> metricMap = 1;
  }

  message MonitoredObjectTypeMap {
    map<string, MetricMap> monitoredObjectTypeMap = 1; 
  }

  message VendorMap {
    map<string, MonitoredObjectTypeMap> vendorMap = 1; 
  }

  string tenantId = 2;
  string datatype = 3;

  string name = 4;
  VendorMap thresholds = 5;

  int64 createdTimestamp = 6;
  int64 lastModifiedTimestamp = 7;

}

// TenantThresholdProfile - wrapper for requests that involve the
// Tenant Threshold Profile
message TenantThresholdProfile {
    string _id = 1;
    string _rev = 2;
    TenantThresholdProfileData data = 3;
}

message TenantThresholdProfileIdRequest {
    string tenantId = 1;
    string thresholdProfileId = 2;
}

message TenantThresholdProfileList {
    repeated TenantThresholdProfile data = 1;
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TenantUserData - model for a User that is scoped to a single Tenant.
message TenantUserData {
    string tenantId = 2;
    string datatype = 3;

    string username = 4;
    string password = 5;
    bool sendOnboardingEmail = 6;
    string onboardingToken = 7;
    bool userVerified = 8;
    UserState state = 9;
    repeated string domains = 10;

    int64 createdTimestamp = 11;
    int64 lastModifiedTimestamp = 12;
}

// TenantUser - wrapper for requests that involve a User that
// is scoped to a single Tenant.
message TenantUser {
    string _id = 1;
    string _rev = 2;
    TenantUserData data = 3;
}

// TenantUserListResponse - a wrapper to handle requests that return a
// list of TenantUser objects.
message TenantUserList {
    repeated TenantUser data = 1;
}

// TenantUserIdRequest - wrapper for requests that involve a Tenant User, 
// but only require the userID to complete the request.
message TenantUserIdRequest {
    string tenantId = 1;
    string userId = 2;
}

// MonitoredObjectData - describes a unique device/object which is reporting 
// data from the network.
message MonitoredObjectData {
    // enum MonitoredObjectType {
    //     MO_UNKNOWN = 0;
    //     TWAMP = 1;
    // }
    // enum DeviceType {
    //     DT_UNKNOWN = 0;
    //     ACCEDIAN_NID = 1;
    //     ACCEDIAN_VNID = 2;
    // }

    string id = 1;
    string tenantId = 2;
    string datatype = 3;

    string actuatorType = 4;
    string actuatorName = 5;

    string reflectorType = 6;
    string reflectorName = 7;
    
    string objectName = 8;
    string objectType = 9;  

    int64 createdTimestamp = 10;
    int64 lastModifiedTimestamp = 11;

    repeated string domainSet = 12;
}


// MonitoredObject - Wrapper for requests involving a MonitoredObject that are 
// scoped to a single Tenant.
message MonitoredObject {
    string _id = 1;
    string _rev = 2;
    MonitoredObjectData data = 3;
}

// MonitoredObjectList - Wrapper for requests which return a list of MonitoredObjects 
// scoped to a single Tenant.
message MonitoredObjectList {
    repeated MonitoredObject data = 1;
}

message MonitoredObjectIdRequest {
    string tenantId = 1;
    string monitoredObjectId = 2;
}

// Provides options to configure how the GetMonitoredObjectToDomainMap API will return its results.
// byCount: true will return a count of Monitored Objects, false will return a set of MonitoredObject IDs.
// domainSet: set of Domain IDs to filter the request by.
message MonitoredObjectCountByDomainRequest {
    string tenantId = 1;
    bool byCount = 2;
    repeated string domainSet = 3;
}

message MonitoredObjectCountByDomainResponse {
    map<string, int64> domainToMonitoredObjectCountMap = 1;
    map<string, MonitoredObjectSet> domainToMonitoredObjectSetMap = 2;
}

message MonitoredObjectSet {
    repeated string  monitoredObjectSet = 1;
}

message TenantMonitoredObjectSet {
    string tenantId = 1;
    repeated MonitoredObject monitoredObjectSet = 2;
}

message TenantMeta {
    string tenantId = 2;
    string datatype = 3;

    string tenantName = 4;
    string defaultThresholdProfile = 5;

    int64 createdTimestamp = 6;
    int64 lastModifiedTimestamp = 7;
}

message TenantMetadata {
    string _id = 1;
    string _rev = 2;
    TenantMeta data = 3;
}

message TenantMetaIdRequest {
    string tenantId = 1;
    string metaId = 2;
}