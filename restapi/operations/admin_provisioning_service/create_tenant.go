// Code generated by go-swagger; DO NOT EDIT.

package admin_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateTenantHandlerFunc turns a function with the right signature into a create tenant handler
type CreateTenantHandlerFunc func(CreateTenantParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateTenantHandlerFunc) Handle(params CreateTenantParams) middleware.Responder {
	return fn(params)
}

// CreateTenantHandler interface for that can handle valid create tenant params
type CreateTenantHandler interface {
	Handle(CreateTenantParams) middleware.Responder
}

// NewCreateTenant creates a new http.Handler for the create tenant operation
func NewCreateTenant(ctx *middleware.Context, handler CreateTenantHandler) *CreateTenant {
	return &CreateTenant{Context: ctx, Handler: handler}
}

/*CreateTenant swagger:route POST /v1/tenants AdminProvisioningService createTenant

Create a Tenant.

*/
type CreateTenant struct {
	Context *middleware.Context
	Handler CreateTenantHandler
}

func (o *CreateTenant) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateTenantParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
