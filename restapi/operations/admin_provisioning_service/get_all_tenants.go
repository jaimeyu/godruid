// Code generated by go-swagger; DO NOT EDIT.

package admin_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetAllTenantsHandlerFunc turns a function with the right signature into a get all tenants handler
type GetAllTenantsHandlerFunc func(GetAllTenantsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAllTenantsHandlerFunc) Handle(params GetAllTenantsParams) middleware.Responder {
	return fn(params)
}

// GetAllTenantsHandler interface for that can handle valid get all tenants params
type GetAllTenantsHandler interface {
	Handle(GetAllTenantsParams) middleware.Responder
}

// NewGetAllTenants creates a new http.Handler for the get all tenants operation
func NewGetAllTenants(ctx *middleware.Context, handler GetAllTenantsHandler) *GetAllTenants {
	return &GetAllTenants{Context: ctx, Handler: handler}
}

/*GetAllTenants swagger:route GET /v1/tenant-list AdminProvisioningService getAllTenants

Retrieve all Tenants.

*/
type GetAllTenants struct {
	Context *middleware.Context
	Handler GetAllTenantsHandler
}

func (o *GetAllTenants) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAllTenantsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
