// Code generated by go-swagger; DO NOT EDIT.

package admin_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetIngestionDictionaryV2OKCode is the HTTP code returned for type GetIngestionDictionaryV2OK
const GetIngestionDictionaryV2OKCode int = 200

/*GetIngestionDictionaryV2OK get ingestion dictionary v2 o k

swagger:response getIngestionDictionaryV2OK
*/
type GetIngestionDictionaryV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.IngestionDictionary `json:"body,omitempty"`
}

// NewGetIngestionDictionaryV2OK creates GetIngestionDictionaryV2OK with default headers values
func NewGetIngestionDictionaryV2OK() *GetIngestionDictionaryV2OK {

	return &GetIngestionDictionaryV2OK{}
}

// WithPayload adds the payload to the get ingestion dictionary v2 o k response
func (o *GetIngestionDictionaryV2OK) WithPayload(payload *swagmodels.IngestionDictionary) *GetIngestionDictionaryV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ingestion dictionary v2 o k response
func (o *GetIngestionDictionaryV2OK) SetPayload(payload *swagmodels.IngestionDictionary) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIngestionDictionaryV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetIngestionDictionaryV2ForbiddenCode is the HTTP code returned for type GetIngestionDictionaryV2Forbidden
const GetIngestionDictionaryV2ForbiddenCode int = 403

/*GetIngestionDictionaryV2Forbidden Requestor does not have authorization to perform this action

swagger:response getIngestionDictionaryV2Forbidden
*/
type GetIngestionDictionaryV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetIngestionDictionaryV2Forbidden creates GetIngestionDictionaryV2Forbidden with default headers values
func NewGetIngestionDictionaryV2Forbidden() *GetIngestionDictionaryV2Forbidden {

	return &GetIngestionDictionaryV2Forbidden{}
}

// WithPayload adds the payload to the get ingestion dictionary v2 forbidden response
func (o *GetIngestionDictionaryV2Forbidden) WithPayload(payload string) *GetIngestionDictionaryV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ingestion dictionary v2 forbidden response
func (o *GetIngestionDictionaryV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIngestionDictionaryV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetIngestionDictionaryV2InternalServerErrorCode is the HTTP code returned for type GetIngestionDictionaryV2InternalServerError
const GetIngestionDictionaryV2InternalServerErrorCode int = 500

/*GetIngestionDictionaryV2InternalServerError Unexpected error processing request

swagger:response getIngestionDictionaryV2InternalServerError
*/
type GetIngestionDictionaryV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetIngestionDictionaryV2InternalServerError creates GetIngestionDictionaryV2InternalServerError with default headers values
func NewGetIngestionDictionaryV2InternalServerError() *GetIngestionDictionaryV2InternalServerError {

	return &GetIngestionDictionaryV2InternalServerError{}
}

// WithPayload adds the payload to the get ingestion dictionary v2 internal server error response
func (o *GetIngestionDictionaryV2InternalServerError) WithPayload(payload string) *GetIngestionDictionaryV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ingestion dictionary v2 internal server error response
func (o *GetIngestionDictionaryV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIngestionDictionaryV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
