// Code generated by go-swagger; DO NOT EDIT.

package admin_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// PatchTenantV2OKCode is the HTTP code returned for type PatchTenantV2OK
const PatchTenantV2OKCode int = 200

/*PatchTenantV2OK patch tenant v2 o k

swagger:response patchTenantV2OK
*/
type PatchTenantV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.TenantResponse `json:"body,omitempty"`
}

// NewPatchTenantV2OK creates PatchTenantV2OK with default headers values
func NewPatchTenantV2OK() *PatchTenantV2OK {

	return &PatchTenantV2OK{}
}

// WithPayload adds the payload to the patch tenant v2 o k response
func (o *PatchTenantV2OK) WithPayload(payload *swagmodels.TenantResponse) *PatchTenantV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant v2 o k response
func (o *PatchTenantV2OK) SetPayload(payload *swagmodels.TenantResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchTenantV2BadRequestCode is the HTTP code returned for type PatchTenantV2BadRequest
const PatchTenantV2BadRequestCode int = 400

/*PatchTenantV2BadRequest Request data does not pass validation

swagger:response patchTenantV2BadRequest
*/
type PatchTenantV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPatchTenantV2BadRequest creates PatchTenantV2BadRequest with default headers values
func NewPatchTenantV2BadRequest() *PatchTenantV2BadRequest {

	return &PatchTenantV2BadRequest{}
}

// WithPayload adds the payload to the patch tenant v2 bad request response
func (o *PatchTenantV2BadRequest) WithPayload(payload string) *PatchTenantV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant v2 bad request response
func (o *PatchTenantV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PatchTenantV2ForbiddenCode is the HTTP code returned for type PatchTenantV2Forbidden
const PatchTenantV2ForbiddenCode int = 403

/*PatchTenantV2Forbidden Requestor does not have authorization to perform this action

swagger:response patchTenantV2Forbidden
*/
type PatchTenantV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPatchTenantV2Forbidden creates PatchTenantV2Forbidden with default headers values
func NewPatchTenantV2Forbidden() *PatchTenantV2Forbidden {

	return &PatchTenantV2Forbidden{}
}

// WithPayload adds the payload to the patch tenant v2 forbidden response
func (o *PatchTenantV2Forbidden) WithPayload(payload string) *PatchTenantV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant v2 forbidden response
func (o *PatchTenantV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PatchTenantV2NotFoundCode is the HTTP code returned for type PatchTenantV2NotFound
const PatchTenantV2NotFoundCode int = 404

/*PatchTenantV2NotFound There requested Tenant is not provisioned

swagger:response patchTenantV2NotFound
*/
type PatchTenantV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPatchTenantV2NotFound creates PatchTenantV2NotFound with default headers values
func NewPatchTenantV2NotFound() *PatchTenantV2NotFound {

	return &PatchTenantV2NotFound{}
}

// WithPayload adds the payload to the patch tenant v2 not found response
func (o *PatchTenantV2NotFound) WithPayload(payload string) *PatchTenantV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant v2 not found response
func (o *PatchTenantV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PatchTenantV2ConflictCode is the HTTP code returned for type PatchTenantV2Conflict
const PatchTenantV2ConflictCode int = 409

/*PatchTenantV2Conflict Incorrect revision provided for the update request

swagger:response patchTenantV2Conflict
*/
type PatchTenantV2Conflict struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPatchTenantV2Conflict creates PatchTenantV2Conflict with default headers values
func NewPatchTenantV2Conflict() *PatchTenantV2Conflict {

	return &PatchTenantV2Conflict{}
}

// WithPayload adds the payload to the patch tenant v2 conflict response
func (o *PatchTenantV2Conflict) WithPayload(payload string) *PatchTenantV2Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant v2 conflict response
func (o *PatchTenantV2Conflict) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantV2Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PatchTenantV2InternalServerErrorCode is the HTTP code returned for type PatchTenantV2InternalServerError
const PatchTenantV2InternalServerErrorCode int = 500

/*PatchTenantV2InternalServerError Unexpected error processing request

swagger:response patchTenantV2InternalServerError
*/
type PatchTenantV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPatchTenantV2InternalServerError creates PatchTenantV2InternalServerError with default headers values
func NewPatchTenantV2InternalServerError() *PatchTenantV2InternalServerError {

	return &PatchTenantV2InternalServerError{}
}

// WithPayload adds the payload to the patch tenant v2 internal server error response
func (o *PatchTenantV2InternalServerError) WithPayload(payload string) *PatchTenantV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant v2 internal server error response
func (o *PatchTenantV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
