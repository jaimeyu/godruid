// Code generated by go-swagger; DO NOT EDIT.

package metrics_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetFilteredRawMetricsOKCode is the HTTP code returned for type GetFilteredRawMetricsOK
const GetFilteredRawMetricsOKCode int = 200

/*GetFilteredRawMetricsOK get filtered raw metrics o k

swagger:response getFilteredRawMetricsOK
*/
type GetFilteredRawMetricsOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.GathergrpcJSONAPIObject `json:"body,omitempty"`
}

// NewGetFilteredRawMetricsOK creates GetFilteredRawMetricsOK with default headers values
func NewGetFilteredRawMetricsOK() *GetFilteredRawMetricsOK {

	return &GetFilteredRawMetricsOK{}
}

// WithPayload adds the payload to the get filtered raw metrics o k response
func (o *GetFilteredRawMetricsOK) WithPayload(payload *swagmodels.GathergrpcJSONAPIObject) *GetFilteredRawMetricsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get filtered raw metrics o k response
func (o *GetFilteredRawMetricsOK) SetPayload(payload *swagmodels.GathergrpcJSONAPIObject) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilteredRawMetricsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFilteredRawMetricsForbiddenCode is the HTTP code returned for type GetFilteredRawMetricsForbidden
const GetFilteredRawMetricsForbiddenCode int = 403

/*GetFilteredRawMetricsForbidden Requestor does not have authorization to perform this action

swagger:response getFilteredRawMetricsForbidden
*/
type GetFilteredRawMetricsForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetFilteredRawMetricsForbidden creates GetFilteredRawMetricsForbidden with default headers values
func NewGetFilteredRawMetricsForbidden() *GetFilteredRawMetricsForbidden {

	return &GetFilteredRawMetricsForbidden{}
}

// WithPayload adds the payload to the get filtered raw metrics forbidden response
func (o *GetFilteredRawMetricsForbidden) WithPayload(payload string) *GetFilteredRawMetricsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get filtered raw metrics forbidden response
func (o *GetFilteredRawMetricsForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilteredRawMetricsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetFilteredRawMetricsInternalServerErrorCode is the HTTP code returned for type GetFilteredRawMetricsInternalServerError
const GetFilteredRawMetricsInternalServerErrorCode int = 500

/*GetFilteredRawMetricsInternalServerError Unexpected error processing request

swagger:response getFilteredRawMetricsInternalServerError
*/
type GetFilteredRawMetricsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetFilteredRawMetricsInternalServerError creates GetFilteredRawMetricsInternalServerError with default headers values
func NewGetFilteredRawMetricsInternalServerError() *GetFilteredRawMetricsInternalServerError {

	return &GetFilteredRawMetricsInternalServerError{}
}

// WithPayload adds the payload to the get filtered raw metrics internal server error response
func (o *GetFilteredRawMetricsInternalServerError) WithPayload(payload string) *GetFilteredRawMetricsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get filtered raw metrics internal server error response
func (o *GetFilteredRawMetricsInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilteredRawMetricsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
