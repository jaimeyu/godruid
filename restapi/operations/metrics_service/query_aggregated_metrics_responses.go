// Code generated by go-swagger; DO NOT EDIT.

package metrics_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// QueryAggregatedMetricsOKCode is the HTTP code returned for type QueryAggregatedMetricsOK
const QueryAggregatedMetricsOKCode int = 200

/*QueryAggregatedMetricsOK query aggregated metrics o k

swagger:response queryAggregatedMetricsOK
*/
type QueryAggregatedMetricsOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.MetricResultsResponseObject `json:"body,omitempty"`
}

// NewQueryAggregatedMetricsOK creates QueryAggregatedMetricsOK with default headers values
func NewQueryAggregatedMetricsOK() *QueryAggregatedMetricsOK {

	return &QueryAggregatedMetricsOK{}
}

// WithPayload adds the payload to the query aggregated metrics o k response
func (o *QueryAggregatedMetricsOK) WithPayload(payload *swagmodels.MetricResultsResponseObject) *QueryAggregatedMetricsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query aggregated metrics o k response
func (o *QueryAggregatedMetricsOK) SetPayload(payload *swagmodels.MetricResultsResponseObject) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryAggregatedMetricsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QueryAggregatedMetricsBadRequestCode is the HTTP code returned for type QueryAggregatedMetricsBadRequest
const QueryAggregatedMetricsBadRequestCode int = 400

/*QueryAggregatedMetricsBadRequest Request data does not pass validation

swagger:response queryAggregatedMetricsBadRequest
*/
type QueryAggregatedMetricsBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewQueryAggregatedMetricsBadRequest creates QueryAggregatedMetricsBadRequest with default headers values
func NewQueryAggregatedMetricsBadRequest() *QueryAggregatedMetricsBadRequest {

	return &QueryAggregatedMetricsBadRequest{}
}

// WithPayload adds the payload to the query aggregated metrics bad request response
func (o *QueryAggregatedMetricsBadRequest) WithPayload(payload string) *QueryAggregatedMetricsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query aggregated metrics bad request response
func (o *QueryAggregatedMetricsBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryAggregatedMetricsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// QueryAggregatedMetricsForbiddenCode is the HTTP code returned for type QueryAggregatedMetricsForbidden
const QueryAggregatedMetricsForbiddenCode int = 403

/*QueryAggregatedMetricsForbidden Requestor does not have authorization to perform this action

swagger:response queryAggregatedMetricsForbidden
*/
type QueryAggregatedMetricsForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewQueryAggregatedMetricsForbidden creates QueryAggregatedMetricsForbidden with default headers values
func NewQueryAggregatedMetricsForbidden() *QueryAggregatedMetricsForbidden {

	return &QueryAggregatedMetricsForbidden{}
}

// WithPayload adds the payload to the query aggregated metrics forbidden response
func (o *QueryAggregatedMetricsForbidden) WithPayload(payload string) *QueryAggregatedMetricsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query aggregated metrics forbidden response
func (o *QueryAggregatedMetricsForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryAggregatedMetricsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// QueryAggregatedMetricsNotFoundCode is the HTTP code returned for type QueryAggregatedMetricsNotFound
const QueryAggregatedMetricsNotFoundCode int = 404

/*QueryAggregatedMetricsNotFound Missing provisioned data from request parameters

swagger:response queryAggregatedMetricsNotFound
*/
type QueryAggregatedMetricsNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewQueryAggregatedMetricsNotFound creates QueryAggregatedMetricsNotFound with default headers values
func NewQueryAggregatedMetricsNotFound() *QueryAggregatedMetricsNotFound {

	return &QueryAggregatedMetricsNotFound{}
}

// WithPayload adds the payload to the query aggregated metrics not found response
func (o *QueryAggregatedMetricsNotFound) WithPayload(payload string) *QueryAggregatedMetricsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query aggregated metrics not found response
func (o *QueryAggregatedMetricsNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryAggregatedMetricsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// QueryAggregatedMetricsInternalServerErrorCode is the HTTP code returned for type QueryAggregatedMetricsInternalServerError
const QueryAggregatedMetricsInternalServerErrorCode int = 500

/*QueryAggregatedMetricsInternalServerError Unexpected error processing request

swagger:response queryAggregatedMetricsInternalServerError
*/
type QueryAggregatedMetricsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewQueryAggregatedMetricsInternalServerError creates QueryAggregatedMetricsInternalServerError with default headers values
func NewQueryAggregatedMetricsInternalServerError() *QueryAggregatedMetricsInternalServerError {

	return &QueryAggregatedMetricsInternalServerError{}
}

// WithPayload adds the payload to the query aggregated metrics internal server error response
func (o *QueryAggregatedMetricsInternalServerError) WithPayload(payload string) *QueryAggregatedMetricsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query aggregated metrics internal server error response
func (o *QueryAggregatedMetricsInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryAggregatedMetricsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
