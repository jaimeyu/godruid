// Code generated by go-swagger; DO NOT EDIT.

package metrics_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// QueryThresholdCrossingOKCode is the HTTP code returned for type QueryThresholdCrossingOK
const QueryThresholdCrossingOKCode int = 200

/*QueryThresholdCrossingOK query threshold crossing o k

swagger:response queryThresholdCrossingOK
*/
type QueryThresholdCrossingOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.MetricResultsResponseObject `json:"body,omitempty"`
}

// NewQueryThresholdCrossingOK creates QueryThresholdCrossingOK with default headers values
func NewQueryThresholdCrossingOK() *QueryThresholdCrossingOK {

	return &QueryThresholdCrossingOK{}
}

// WithPayload adds the payload to the query threshold crossing o k response
func (o *QueryThresholdCrossingOK) WithPayload(payload *swagmodels.MetricResultsResponseObject) *QueryThresholdCrossingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query threshold crossing o k response
func (o *QueryThresholdCrossingOK) SetPayload(payload *swagmodels.MetricResultsResponseObject) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryThresholdCrossingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QueryThresholdCrossingBadRequestCode is the HTTP code returned for type QueryThresholdCrossingBadRequest
const QueryThresholdCrossingBadRequestCode int = 400

/*QueryThresholdCrossingBadRequest Request data does not pass validation

swagger:response queryThresholdCrossingBadRequest
*/
type QueryThresholdCrossingBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewQueryThresholdCrossingBadRequest creates QueryThresholdCrossingBadRequest with default headers values
func NewQueryThresholdCrossingBadRequest() *QueryThresholdCrossingBadRequest {

	return &QueryThresholdCrossingBadRequest{}
}

// WithPayload adds the payload to the query threshold crossing bad request response
func (o *QueryThresholdCrossingBadRequest) WithPayload(payload string) *QueryThresholdCrossingBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query threshold crossing bad request response
func (o *QueryThresholdCrossingBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryThresholdCrossingBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// QueryThresholdCrossingForbiddenCode is the HTTP code returned for type QueryThresholdCrossingForbidden
const QueryThresholdCrossingForbiddenCode int = 403

/*QueryThresholdCrossingForbidden Requestor does not have authorization to perform this action

swagger:response queryThresholdCrossingForbidden
*/
type QueryThresholdCrossingForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewQueryThresholdCrossingForbidden creates QueryThresholdCrossingForbidden with default headers values
func NewQueryThresholdCrossingForbidden() *QueryThresholdCrossingForbidden {

	return &QueryThresholdCrossingForbidden{}
}

// WithPayload adds the payload to the query threshold crossing forbidden response
func (o *QueryThresholdCrossingForbidden) WithPayload(payload string) *QueryThresholdCrossingForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query threshold crossing forbidden response
func (o *QueryThresholdCrossingForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryThresholdCrossingForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// QueryThresholdCrossingNotFoundCode is the HTTP code returned for type QueryThresholdCrossingNotFound
const QueryThresholdCrossingNotFoundCode int = 404

/*QueryThresholdCrossingNotFound Threshold profile not found

swagger:response queryThresholdCrossingNotFound
*/
type QueryThresholdCrossingNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewQueryThresholdCrossingNotFound creates QueryThresholdCrossingNotFound with default headers values
func NewQueryThresholdCrossingNotFound() *QueryThresholdCrossingNotFound {

	return &QueryThresholdCrossingNotFound{}
}

// WithPayload adds the payload to the query threshold crossing not found response
func (o *QueryThresholdCrossingNotFound) WithPayload(payload string) *QueryThresholdCrossingNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query threshold crossing not found response
func (o *QueryThresholdCrossingNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryThresholdCrossingNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// QueryThresholdCrossingInternalServerErrorCode is the HTTP code returned for type QueryThresholdCrossingInternalServerError
const QueryThresholdCrossingInternalServerErrorCode int = 500

/*QueryThresholdCrossingInternalServerError Unexpected error processing request

swagger:response queryThresholdCrossingInternalServerError
*/
type QueryThresholdCrossingInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewQueryThresholdCrossingInternalServerError creates QueryThresholdCrossingInternalServerError with default headers values
func NewQueryThresholdCrossingInternalServerError() *QueryThresholdCrossingInternalServerError {

	return &QueryThresholdCrossingInternalServerError{}
}

// WithPayload adds the payload to the query threshold crossing internal server error response
func (o *QueryThresholdCrossingInternalServerError) WithPayload(payload string) *QueryThresholdCrossingInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query threshold crossing internal server error response
func (o *QueryThresholdCrossingInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryThresholdCrossingInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
