// Code generated by go-swagger; DO NOT EDIT.

package metrics_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GenerateSLAReportV2OKCode is the HTTP code returned for type GenerateSLAReportV2OK
const GenerateSLAReportV2OKCode int = 200

/*GenerateSLAReportV2OK SLA report successfully processed

swagger:response generateSlaReportV2OK
*/
type GenerateSLAReportV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPISLAReportResponse `json:"body,omitempty"`
}

// NewGenerateSLAReportV2OK creates GenerateSLAReportV2OK with default headers values
func NewGenerateSLAReportV2OK() *GenerateSLAReportV2OK {

	return &GenerateSLAReportV2OK{}
}

// WithPayload adds the payload to the generate Sla report v2 o k response
func (o *GenerateSLAReportV2OK) WithPayload(payload *swagmodels.JSONAPISLAReportResponse) *GenerateSLAReportV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the generate Sla report v2 o k response
func (o *GenerateSLAReportV2OK) SetPayload(payload *swagmodels.JSONAPISLAReportResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GenerateSLAReportV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GenerateSLAReportV2BadRequestCode is the HTTP code returned for type GenerateSLAReportV2BadRequest
const GenerateSLAReportV2BadRequestCode int = 400

/*GenerateSLAReportV2BadRequest Request data does not pass validation

swagger:response generateSlaReportV2BadRequest
*/
type GenerateSLAReportV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGenerateSLAReportV2BadRequest creates GenerateSLAReportV2BadRequest with default headers values
func NewGenerateSLAReportV2BadRequest() *GenerateSLAReportV2BadRequest {

	return &GenerateSLAReportV2BadRequest{}
}

// WithPayload adds the payload to the generate Sla report v2 bad request response
func (o *GenerateSLAReportV2BadRequest) WithPayload(payload string) *GenerateSLAReportV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the generate Sla report v2 bad request response
func (o *GenerateSLAReportV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GenerateSLAReportV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GenerateSLAReportV2ForbiddenCode is the HTTP code returned for type GenerateSLAReportV2Forbidden
const GenerateSLAReportV2ForbiddenCode int = 403

/*GenerateSLAReportV2Forbidden Requestor does not have authorization to perform this action

swagger:response generateSlaReportV2Forbidden
*/
type GenerateSLAReportV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGenerateSLAReportV2Forbidden creates GenerateSLAReportV2Forbidden with default headers values
func NewGenerateSLAReportV2Forbidden() *GenerateSLAReportV2Forbidden {

	return &GenerateSLAReportV2Forbidden{}
}

// WithPayload adds the payload to the generate Sla report v2 forbidden response
func (o *GenerateSLAReportV2Forbidden) WithPayload(payload string) *GenerateSLAReportV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the generate Sla report v2 forbidden response
func (o *GenerateSLAReportV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GenerateSLAReportV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GenerateSLAReportV2NotFoundCode is the HTTP code returned for type GenerateSLAReportV2NotFound
const GenerateSLAReportV2NotFoundCode int = 404

/*GenerateSLAReportV2NotFound Missing provisioned data

swagger:response generateSlaReportV2NotFound
*/
type GenerateSLAReportV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGenerateSLAReportV2NotFound creates GenerateSLAReportV2NotFound with default headers values
func NewGenerateSLAReportV2NotFound() *GenerateSLAReportV2NotFound {

	return &GenerateSLAReportV2NotFound{}
}

// WithPayload adds the payload to the generate Sla report v2 not found response
func (o *GenerateSLAReportV2NotFound) WithPayload(payload string) *GenerateSLAReportV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the generate Sla report v2 not found response
func (o *GenerateSLAReportV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GenerateSLAReportV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GenerateSLAReportV2InternalServerErrorCode is the HTTP code returned for type GenerateSLAReportV2InternalServerError
const GenerateSLAReportV2InternalServerErrorCode int = 500

/*GenerateSLAReportV2InternalServerError Unexpected error processing request

swagger:response generateSlaReportV2InternalServerError
*/
type GenerateSLAReportV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGenerateSLAReportV2InternalServerError creates GenerateSLAReportV2InternalServerError with default headers values
func NewGenerateSLAReportV2InternalServerError() *GenerateSLAReportV2InternalServerError {

	return &GenerateSLAReportV2InternalServerError{}
}

// WithPayload adds the payload to the generate Sla report v2 internal server error response
func (o *GenerateSLAReportV2InternalServerError) WithPayload(payload string) *GenerateSLAReportV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the generate Sla report v2 internal server error response
func (o *GenerateSLAReportV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GenerateSLAReportV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
