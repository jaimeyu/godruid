// Code generated by go-swagger; DO NOT EDIT.

package metrics_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetFilteredRawMetricsV2OKCode is the HTTP code returned for type GetFilteredRawMetricsV2OK
const GetFilteredRawMetricsV2OKCode int = 200

/*GetFilteredRawMetricsV2OK Raw metric request successfully processed

swagger:response getFilteredRawMetricsV2OK
*/
type GetFilteredRawMetricsV2OK struct {

	/*
	  In: Body
	*/
	Payload map[string]interface{} `json:"body,omitempty"`
}

// NewGetFilteredRawMetricsV2OK creates GetFilteredRawMetricsV2OK with default headers values
func NewGetFilteredRawMetricsV2OK() *GetFilteredRawMetricsV2OK {

	return &GetFilteredRawMetricsV2OK{}
}

// WithPayload adds the payload to the get filtered raw metrics v2 o k response
func (o *GetFilteredRawMetricsV2OK) WithPayload(payload map[string]interface{}) *GetFilteredRawMetricsV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get filtered raw metrics v2 o k response
func (o *GetFilteredRawMetricsV2OK) SetPayload(payload map[string]interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilteredRawMetricsV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetFilteredRawMetricsV2ForbiddenCode is the HTTP code returned for type GetFilteredRawMetricsV2Forbidden
const GetFilteredRawMetricsV2ForbiddenCode int = 403

/*GetFilteredRawMetricsV2Forbidden Requestor does not have authorization to perform this action

swagger:response getFilteredRawMetricsV2Forbidden
*/
type GetFilteredRawMetricsV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetFilteredRawMetricsV2Forbidden creates GetFilteredRawMetricsV2Forbidden with default headers values
func NewGetFilteredRawMetricsV2Forbidden() *GetFilteredRawMetricsV2Forbidden {

	return &GetFilteredRawMetricsV2Forbidden{}
}

// WithPayload adds the payload to the get filtered raw metrics v2 forbidden response
func (o *GetFilteredRawMetricsV2Forbidden) WithPayload(payload string) *GetFilteredRawMetricsV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get filtered raw metrics v2 forbidden response
func (o *GetFilteredRawMetricsV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilteredRawMetricsV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetFilteredRawMetricsV2InternalServerErrorCode is the HTTP code returned for type GetFilteredRawMetricsV2InternalServerError
const GetFilteredRawMetricsV2InternalServerErrorCode int = 500

/*GetFilteredRawMetricsV2InternalServerError Unexpected error processing request

swagger:response getFilteredRawMetricsV2InternalServerError
*/
type GetFilteredRawMetricsV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetFilteredRawMetricsV2InternalServerError creates GetFilteredRawMetricsV2InternalServerError with default headers values
func NewGetFilteredRawMetricsV2InternalServerError() *GetFilteredRawMetricsV2InternalServerError {

	return &GetFilteredRawMetricsV2InternalServerError{}
}

// WithPayload adds the payload to the get filtered raw metrics v2 internal server error response
func (o *GetFilteredRawMetricsV2InternalServerError) WithPayload(payload string) *GetFilteredRawMetricsV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get filtered raw metrics v2 internal server error response
func (o *GetFilteredRawMetricsV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilteredRawMetricsV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
