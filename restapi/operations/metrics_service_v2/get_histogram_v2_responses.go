// Code generated by go-swagger; DO NOT EDIT.

package metrics_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetHistogramV2OKCode is the HTTP code returned for type GetHistogramV2OK
const GetHistogramV2OKCode int = 200

/*GetHistogramV2OK Histogram request successfully processed

swagger:response getHistogramV2OK
*/
type GetHistogramV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPIHistogramResponse `json:"body,omitempty"`
}

// NewGetHistogramV2OK creates GetHistogramV2OK with default headers values
func NewGetHistogramV2OK() *GetHistogramV2OK {

	return &GetHistogramV2OK{}
}

// WithPayload adds the payload to the get histogram v2 o k response
func (o *GetHistogramV2OK) WithPayload(payload *swagmodels.JSONAPIHistogramResponse) *GetHistogramV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get histogram v2 o k response
func (o *GetHistogramV2OK) SetPayload(payload *swagmodels.JSONAPIHistogramResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHistogramV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetHistogramV2BadRequestCode is the HTTP code returned for type GetHistogramV2BadRequest
const GetHistogramV2BadRequestCode int = 400

/*GetHistogramV2BadRequest Request data does not pass validation

swagger:response getHistogramV2BadRequest
*/
type GetHistogramV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetHistogramV2BadRequest creates GetHistogramV2BadRequest with default headers values
func NewGetHistogramV2BadRequest() *GetHistogramV2BadRequest {

	return &GetHistogramV2BadRequest{}
}

// WithPayload adds the payload to the get histogram v2 bad request response
func (o *GetHistogramV2BadRequest) WithPayload(payload string) *GetHistogramV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get histogram v2 bad request response
func (o *GetHistogramV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHistogramV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetHistogramV2ForbiddenCode is the HTTP code returned for type GetHistogramV2Forbidden
const GetHistogramV2ForbiddenCode int = 403

/*GetHistogramV2Forbidden Requestor does not have authorization to perform this action

swagger:response getHistogramV2Forbidden
*/
type GetHistogramV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetHistogramV2Forbidden creates GetHistogramV2Forbidden with default headers values
func NewGetHistogramV2Forbidden() *GetHistogramV2Forbidden {

	return &GetHistogramV2Forbidden{}
}

// WithPayload adds the payload to the get histogram v2 forbidden response
func (o *GetHistogramV2Forbidden) WithPayload(payload string) *GetHistogramV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get histogram v2 forbidden response
func (o *GetHistogramV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHistogramV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetHistogramV2NotFoundCode is the HTTP code returned for type GetHistogramV2NotFound
const GetHistogramV2NotFoundCode int = 404

/*GetHistogramV2NotFound Missing provisioned data

swagger:response getHistogramV2NotFound
*/
type GetHistogramV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetHistogramV2NotFound creates GetHistogramV2NotFound with default headers values
func NewGetHistogramV2NotFound() *GetHistogramV2NotFound {

	return &GetHistogramV2NotFound{}
}

// WithPayload adds the payload to the get histogram v2 not found response
func (o *GetHistogramV2NotFound) WithPayload(payload string) *GetHistogramV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get histogram v2 not found response
func (o *GetHistogramV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHistogramV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetHistogramV2InternalServerErrorCode is the HTTP code returned for type GetHistogramV2InternalServerError
const GetHistogramV2InternalServerErrorCode int = 500

/*GetHistogramV2InternalServerError Unexpected error processing request

swagger:response getHistogramV2InternalServerError
*/
type GetHistogramV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetHistogramV2InternalServerError creates GetHistogramV2InternalServerError with default headers values
func NewGetHistogramV2InternalServerError() *GetHistogramV2InternalServerError {

	return &GetHistogramV2InternalServerError{}
}

// WithPayload adds the payload to the get histogram v2 internal server error response
func (o *GetHistogramV2InternalServerError) WithPayload(payload string) *GetHistogramV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get histogram v2 internal server error response
func (o *GetHistogramV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHistogramV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
