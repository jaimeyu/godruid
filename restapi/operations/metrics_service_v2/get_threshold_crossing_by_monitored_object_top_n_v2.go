// Code generated by go-swagger; DO NOT EDIT.

package metrics_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetThresholdCrossingByMonitoredObjectTopNV2HandlerFunc turns a function with the right signature into a get threshold crossing by monitored object top n v2 handler
type GetThresholdCrossingByMonitoredObjectTopNV2HandlerFunc func(GetThresholdCrossingByMonitoredObjectTopNV2Params) middleware.Responder

// Handle executing the request and returning a response
func (fn GetThresholdCrossingByMonitoredObjectTopNV2HandlerFunc) Handle(params GetThresholdCrossingByMonitoredObjectTopNV2Params) middleware.Responder {
	return fn(params)
}

// GetThresholdCrossingByMonitoredObjectTopNV2Handler interface for that can handle valid get threshold crossing by monitored object top n v2 params
type GetThresholdCrossingByMonitoredObjectTopNV2Handler interface {
	Handle(GetThresholdCrossingByMonitoredObjectTopNV2Params) middleware.Responder
}

// NewGetThresholdCrossingByMonitoredObjectTopNV2 creates a new http.Handler for the get threshold crossing by monitored object top n v2 operation
func NewGetThresholdCrossingByMonitoredObjectTopNV2(ctx *middleware.Context, handler GetThresholdCrossingByMonitoredObjectTopNV2Handler) *GetThresholdCrossingByMonitoredObjectTopNV2 {
	return &GetThresholdCrossingByMonitoredObjectTopNV2{Context: ctx, Handler: handler}
}

/*GetThresholdCrossingByMonitoredObjectTopNV2 swagger:route POST /v2/metrics/threshold-crossing-by-monitored-object-top-n MetricsServiceV2 getThresholdCrossingByMonitoredObjectTopNV2

Retrieve the Top N threshold crossing events using the given threshold profile and the specified metric filters

*/
type GetThresholdCrossingByMonitoredObjectTopNV2 struct {
	Context *middleware.Context
	Handler GetThresholdCrossingByMonitoredObjectTopNV2Handler
}

func (o *GetThresholdCrossingByMonitoredObjectTopNV2) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetThresholdCrossingByMonitoredObjectTopNV2Params()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
