// Code generated by go-swagger; DO NOT EDIT.

package metrics_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetTopNForMetricV2OKCode is the HTTP code returned for type GetTopNForMetricV2OK
const GetTopNForMetricV2OKCode int = 200

/*GetTopNForMetricV2OK Top N request successfully processed

swagger:response getTopNForMetricV2OK
*/
type GetTopNForMetricV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPITopNForMetricResponse `json:"body,omitempty"`
}

// NewGetTopNForMetricV2OK creates GetTopNForMetricV2OK with default headers values
func NewGetTopNForMetricV2OK() *GetTopNForMetricV2OK {

	return &GetTopNForMetricV2OK{}
}

// WithPayload adds the payload to the get top n for metric v2 o k response
func (o *GetTopNForMetricV2OK) WithPayload(payload *swagmodels.JSONAPITopNForMetricResponse) *GetTopNForMetricV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get top n for metric v2 o k response
func (o *GetTopNForMetricV2OK) SetPayload(payload *swagmodels.JSONAPITopNForMetricResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTopNForMetricV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTopNForMetricV2BadRequestCode is the HTTP code returned for type GetTopNForMetricV2BadRequest
const GetTopNForMetricV2BadRequestCode int = 400

/*GetTopNForMetricV2BadRequest Request data does not pass validation

swagger:response getTopNForMetricV2BadRequest
*/
type GetTopNForMetricV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetTopNForMetricV2BadRequest creates GetTopNForMetricV2BadRequest with default headers values
func NewGetTopNForMetricV2BadRequest() *GetTopNForMetricV2BadRequest {

	return &GetTopNForMetricV2BadRequest{}
}

// WithPayload adds the payload to the get top n for metric v2 bad request response
func (o *GetTopNForMetricV2BadRequest) WithPayload(payload string) *GetTopNForMetricV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get top n for metric v2 bad request response
func (o *GetTopNForMetricV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTopNForMetricV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetTopNForMetricV2ForbiddenCode is the HTTP code returned for type GetTopNForMetricV2Forbidden
const GetTopNForMetricV2ForbiddenCode int = 403

/*GetTopNForMetricV2Forbidden Requestor does not have authorization to perform this action

swagger:response getTopNForMetricV2Forbidden
*/
type GetTopNForMetricV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetTopNForMetricV2Forbidden creates GetTopNForMetricV2Forbidden with default headers values
func NewGetTopNForMetricV2Forbidden() *GetTopNForMetricV2Forbidden {

	return &GetTopNForMetricV2Forbidden{}
}

// WithPayload adds the payload to the get top n for metric v2 forbidden response
func (o *GetTopNForMetricV2Forbidden) WithPayload(payload string) *GetTopNForMetricV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get top n for metric v2 forbidden response
func (o *GetTopNForMetricV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTopNForMetricV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetTopNForMetricV2NotFoundCode is the HTTP code returned for type GetTopNForMetricV2NotFound
const GetTopNForMetricV2NotFoundCode int = 404

/*GetTopNForMetricV2NotFound Missing provisioned data

swagger:response getTopNForMetricV2NotFound
*/
type GetTopNForMetricV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetTopNForMetricV2NotFound creates GetTopNForMetricV2NotFound with default headers values
func NewGetTopNForMetricV2NotFound() *GetTopNForMetricV2NotFound {

	return &GetTopNForMetricV2NotFound{}
}

// WithPayload adds the payload to the get top n for metric v2 not found response
func (o *GetTopNForMetricV2NotFound) WithPayload(payload string) *GetTopNForMetricV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get top n for metric v2 not found response
func (o *GetTopNForMetricV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTopNForMetricV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetTopNForMetricV2InternalServerErrorCode is the HTTP code returned for type GetTopNForMetricV2InternalServerError
const GetTopNForMetricV2InternalServerErrorCode int = 500

/*GetTopNForMetricV2InternalServerError Unexpected error processing request

swagger:response getTopNForMetricV2InternalServerError
*/
type GetTopNForMetricV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetTopNForMetricV2InternalServerError creates GetTopNForMetricV2InternalServerError with default headers values
func NewGetTopNForMetricV2InternalServerError() *GetTopNForMetricV2InternalServerError {

	return &GetTopNForMetricV2InternalServerError{}
}

// WithPayload adds the payload to the get top n for metric v2 internal server error response
func (o *GetTopNForMetricV2InternalServerError) WithPayload(payload string) *GetTopNForMetricV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get top n for metric v2 internal server error response
func (o *GetTopNForMetricV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTopNForMetricV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
