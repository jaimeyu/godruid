// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// CreateReportScheduleConfigOKCode is the HTTP code returned for type CreateReportScheduleConfigOK
const CreateReportScheduleConfigOKCode int = 200

/*CreateReportScheduleConfigOK create report schedule config o k

swagger:response createReportScheduleConfigOK
*/
type CreateReportScheduleConfigOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPITenantReportScheduleConfig `json:"body,omitempty"`
}

// NewCreateReportScheduleConfigOK creates CreateReportScheduleConfigOK with default headers values
func NewCreateReportScheduleConfigOK() *CreateReportScheduleConfigOK {

	return &CreateReportScheduleConfigOK{}
}

// WithPayload adds the payload to the create report schedule config o k response
func (o *CreateReportScheduleConfigOK) WithPayload(payload *swagmodels.JSONAPITenantReportScheduleConfig) *CreateReportScheduleConfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create report schedule config o k response
func (o *CreateReportScheduleConfigOK) SetPayload(payload *swagmodels.JSONAPITenantReportScheduleConfig) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateReportScheduleConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateReportScheduleConfigBadRequestCode is the HTTP code returned for type CreateReportScheduleConfigBadRequest
const CreateReportScheduleConfigBadRequestCode int = 400

/*CreateReportScheduleConfigBadRequest Request data does not pass validation

swagger:response createReportScheduleConfigBadRequest
*/
type CreateReportScheduleConfigBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateReportScheduleConfigBadRequest creates CreateReportScheduleConfigBadRequest with default headers values
func NewCreateReportScheduleConfigBadRequest() *CreateReportScheduleConfigBadRequest {

	return &CreateReportScheduleConfigBadRequest{}
}

// WithPayload adds the payload to the create report schedule config bad request response
func (o *CreateReportScheduleConfigBadRequest) WithPayload(payload string) *CreateReportScheduleConfigBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create report schedule config bad request response
func (o *CreateReportScheduleConfigBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateReportScheduleConfigBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// CreateReportScheduleConfigForbiddenCode is the HTTP code returned for type CreateReportScheduleConfigForbidden
const CreateReportScheduleConfigForbiddenCode int = 403

/*CreateReportScheduleConfigForbidden Requestor does not have authorization to perform this action

swagger:response createReportScheduleConfigForbidden
*/
type CreateReportScheduleConfigForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateReportScheduleConfigForbidden creates CreateReportScheduleConfigForbidden with default headers values
func NewCreateReportScheduleConfigForbidden() *CreateReportScheduleConfigForbidden {

	return &CreateReportScheduleConfigForbidden{}
}

// WithPayload adds the payload to the create report schedule config forbidden response
func (o *CreateReportScheduleConfigForbidden) WithPayload(payload string) *CreateReportScheduleConfigForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create report schedule config forbidden response
func (o *CreateReportScheduleConfigForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateReportScheduleConfigForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// CreateReportScheduleConfigInternalServerErrorCode is the HTTP code returned for type CreateReportScheduleConfigInternalServerError
const CreateReportScheduleConfigInternalServerErrorCode int = 500

/*CreateReportScheduleConfigInternalServerError Unexpected error processing request

swagger:response createReportScheduleConfigInternalServerError
*/
type CreateReportScheduleConfigInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateReportScheduleConfigInternalServerError creates CreateReportScheduleConfigInternalServerError with default headers values
func NewCreateReportScheduleConfigInternalServerError() *CreateReportScheduleConfigInternalServerError {

	return &CreateReportScheduleConfigInternalServerError{}
}

// WithPayload adds the payload to the create report schedule config internal server error response
func (o *CreateReportScheduleConfigInternalServerError) WithPayload(payload string) *CreateReportScheduleConfigInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create report schedule config internal server error response
func (o *CreateReportScheduleConfigInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateReportScheduleConfigInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
