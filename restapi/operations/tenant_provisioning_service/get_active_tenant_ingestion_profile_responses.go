// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetActiveTenantIngestionProfileOKCode is the HTTP code returned for type GetActiveTenantIngestionProfileOK
const GetActiveTenantIngestionProfileOKCode int = 200

/*GetActiveTenantIngestionProfileOK get active tenant ingestion profile o k

swagger:response getActiveTenantIngestionProfileOK
*/
type GetActiveTenantIngestionProfileOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPITenantIngestionProfile `json:"body,omitempty"`
}

// NewGetActiveTenantIngestionProfileOK creates GetActiveTenantIngestionProfileOK with default headers values
func NewGetActiveTenantIngestionProfileOK() *GetActiveTenantIngestionProfileOK {

	return &GetActiveTenantIngestionProfileOK{}
}

// WithPayload adds the payload to the get active tenant ingestion profile o k response
func (o *GetActiveTenantIngestionProfileOK) WithPayload(payload *swagmodels.JSONAPITenantIngestionProfile) *GetActiveTenantIngestionProfileOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get active tenant ingestion profile o k response
func (o *GetActiveTenantIngestionProfileOK) SetPayload(payload *swagmodels.JSONAPITenantIngestionProfile) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActiveTenantIngestionProfileOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetActiveTenantIngestionProfileForbiddenCode is the HTTP code returned for type GetActiveTenantIngestionProfileForbidden
const GetActiveTenantIngestionProfileForbiddenCode int = 403

/*GetActiveTenantIngestionProfileForbidden Requestor does not have authorization to perform this action

swagger:response getActiveTenantIngestionProfileForbidden
*/
type GetActiveTenantIngestionProfileForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetActiveTenantIngestionProfileForbidden creates GetActiveTenantIngestionProfileForbidden with default headers values
func NewGetActiveTenantIngestionProfileForbidden() *GetActiveTenantIngestionProfileForbidden {

	return &GetActiveTenantIngestionProfileForbidden{}
}

// WithPayload adds the payload to the get active tenant ingestion profile forbidden response
func (o *GetActiveTenantIngestionProfileForbidden) WithPayload(payload string) *GetActiveTenantIngestionProfileForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get active tenant ingestion profile forbidden response
func (o *GetActiveTenantIngestionProfileForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActiveTenantIngestionProfileForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetActiveTenantIngestionProfileInternalServerErrorCode is the HTTP code returned for type GetActiveTenantIngestionProfileInternalServerError
const GetActiveTenantIngestionProfileInternalServerErrorCode int = 500

/*GetActiveTenantIngestionProfileInternalServerError Unexpected error processing request

swagger:response getActiveTenantIngestionProfileInternalServerError
*/
type GetActiveTenantIngestionProfileInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetActiveTenantIngestionProfileInternalServerError creates GetActiveTenantIngestionProfileInternalServerError with default headers values
func NewGetActiveTenantIngestionProfileInternalServerError() *GetActiveTenantIngestionProfileInternalServerError {

	return &GetActiveTenantIngestionProfileInternalServerError{}
}

// WithPayload adds the payload to the get active tenant ingestion profile internal server error response
func (o *GetActiveTenantIngestionProfileInternalServerError) WithPayload(payload string) *GetActiveTenantIngestionProfileInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get active tenant ingestion profile internal server error response
func (o *GetActiveTenantIngestionProfileInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetActiveTenantIngestionProfileInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
