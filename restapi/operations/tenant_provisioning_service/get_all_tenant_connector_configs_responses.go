// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetAllTenantConnectorConfigsOKCode is the HTTP code returned for type GetAllTenantConnectorConfigsOK
const GetAllTenantConnectorConfigsOKCode int = 200

/*GetAllTenantConnectorConfigsOK get all tenant connector configs o k

swagger:response getAllTenantConnectorConfigsOK
*/
type GetAllTenantConnectorConfigsOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPITenantConnectorConfigList `json:"body,omitempty"`
}

// NewGetAllTenantConnectorConfigsOK creates GetAllTenantConnectorConfigsOK with default headers values
func NewGetAllTenantConnectorConfigsOK() *GetAllTenantConnectorConfigsOK {

	return &GetAllTenantConnectorConfigsOK{}
}

// WithPayload adds the payload to the get all tenant connector configs o k response
func (o *GetAllTenantConnectorConfigsOK) WithPayload(payload *swagmodels.JSONAPITenantConnectorConfigList) *GetAllTenantConnectorConfigsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tenant connector configs o k response
func (o *GetAllTenantConnectorConfigsOK) SetPayload(payload *swagmodels.JSONAPITenantConnectorConfigList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTenantConnectorConfigsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllTenantConnectorConfigsForbiddenCode is the HTTP code returned for type GetAllTenantConnectorConfigsForbidden
const GetAllTenantConnectorConfigsForbiddenCode int = 403

/*GetAllTenantConnectorConfigsForbidden Requestor does not have authorization to perform this action

swagger:response getAllTenantConnectorConfigsForbidden
*/
type GetAllTenantConnectorConfigsForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAllTenantConnectorConfigsForbidden creates GetAllTenantConnectorConfigsForbidden with default headers values
func NewGetAllTenantConnectorConfigsForbidden() *GetAllTenantConnectorConfigsForbidden {

	return &GetAllTenantConnectorConfigsForbidden{}
}

// WithPayload adds the payload to the get all tenant connector configs forbidden response
func (o *GetAllTenantConnectorConfigsForbidden) WithPayload(payload string) *GetAllTenantConnectorConfigsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tenant connector configs forbidden response
func (o *GetAllTenantConnectorConfigsForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTenantConnectorConfigsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetAllTenantConnectorConfigsInternalServerErrorCode is the HTTP code returned for type GetAllTenantConnectorConfigsInternalServerError
const GetAllTenantConnectorConfigsInternalServerErrorCode int = 500

/*GetAllTenantConnectorConfigsInternalServerError Unexpected error processing request

swagger:response getAllTenantConnectorConfigsInternalServerError
*/
type GetAllTenantConnectorConfigsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAllTenantConnectorConfigsInternalServerError creates GetAllTenantConnectorConfigsInternalServerError with default headers values
func NewGetAllTenantConnectorConfigsInternalServerError() *GetAllTenantConnectorConfigsInternalServerError {

	return &GetAllTenantConnectorConfigsInternalServerError{}
}

// WithPayload adds the payload to the get all tenant connector configs internal server error response
func (o *GetAllTenantConnectorConfigsInternalServerError) WithPayload(payload string) *GetAllTenantConnectorConfigsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tenant connector configs internal server error response
func (o *GetAllTenantConnectorConfigsInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTenantConnectorConfigsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
