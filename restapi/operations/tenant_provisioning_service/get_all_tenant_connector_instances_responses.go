// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetAllTenantConnectorInstancesOKCode is the HTTP code returned for type GetAllTenantConnectorInstancesOK
const GetAllTenantConnectorInstancesOKCode int = 200

/*GetAllTenantConnectorInstancesOK get all tenant connector instances o k

swagger:response getAllTenantConnectorInstancesOK
*/
type GetAllTenantConnectorInstancesOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPITenantConnectorInstanceList `json:"body,omitempty"`
}

// NewGetAllTenantConnectorInstancesOK creates GetAllTenantConnectorInstancesOK with default headers values
func NewGetAllTenantConnectorInstancesOK() *GetAllTenantConnectorInstancesOK {

	return &GetAllTenantConnectorInstancesOK{}
}

// WithPayload adds the payload to the get all tenant connector instances o k response
func (o *GetAllTenantConnectorInstancesOK) WithPayload(payload *swagmodels.JSONAPITenantConnectorInstanceList) *GetAllTenantConnectorInstancesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tenant connector instances o k response
func (o *GetAllTenantConnectorInstancesOK) SetPayload(payload *swagmodels.JSONAPITenantConnectorInstanceList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTenantConnectorInstancesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllTenantConnectorInstancesForbiddenCode is the HTTP code returned for type GetAllTenantConnectorInstancesForbidden
const GetAllTenantConnectorInstancesForbiddenCode int = 403

/*GetAllTenantConnectorInstancesForbidden Requestor does not have authorization to perform this action

swagger:response getAllTenantConnectorInstancesForbidden
*/
type GetAllTenantConnectorInstancesForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAllTenantConnectorInstancesForbidden creates GetAllTenantConnectorInstancesForbidden with default headers values
func NewGetAllTenantConnectorInstancesForbidden() *GetAllTenantConnectorInstancesForbidden {

	return &GetAllTenantConnectorInstancesForbidden{}
}

// WithPayload adds the payload to the get all tenant connector instances forbidden response
func (o *GetAllTenantConnectorInstancesForbidden) WithPayload(payload string) *GetAllTenantConnectorInstancesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tenant connector instances forbidden response
func (o *GetAllTenantConnectorInstancesForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTenantConnectorInstancesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetAllTenantConnectorInstancesInternalServerErrorCode is the HTTP code returned for type GetAllTenantConnectorInstancesInternalServerError
const GetAllTenantConnectorInstancesInternalServerErrorCode int = 500

/*GetAllTenantConnectorInstancesInternalServerError Unexpected error processing request

swagger:response getAllTenantConnectorInstancesInternalServerError
*/
type GetAllTenantConnectorInstancesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAllTenantConnectorInstancesInternalServerError creates GetAllTenantConnectorInstancesInternalServerError with default headers values
func NewGetAllTenantConnectorInstancesInternalServerError() *GetAllTenantConnectorInstancesInternalServerError {

	return &GetAllTenantConnectorInstancesInternalServerError{}
}

// WithPayload adds the payload to the get all tenant connector instances internal server error response
func (o *GetAllTenantConnectorInstancesInternalServerError) WithPayload(payload string) *GetAllTenantConnectorInstancesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tenant connector instances internal server error response
func (o *GetAllTenantConnectorInstancesInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTenantConnectorInstancesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
