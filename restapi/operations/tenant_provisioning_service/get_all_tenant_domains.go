// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetAllTenantDomainsHandlerFunc turns a function with the right signature into a get all tenant domains handler
type GetAllTenantDomainsHandlerFunc func(GetAllTenantDomainsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAllTenantDomainsHandlerFunc) Handle(params GetAllTenantDomainsParams) middleware.Responder {
	return fn(params)
}

// GetAllTenantDomainsHandler interface for that can handle valid get all tenant domains params
type GetAllTenantDomainsHandler interface {
	Handle(GetAllTenantDomainsParams) middleware.Responder
}

// NewGetAllTenantDomains creates a new http.Handler for the get all tenant domains operation
func NewGetAllTenantDomains(ctx *middleware.Context, handler GetAllTenantDomainsHandler) *GetAllTenantDomains {
	return &GetAllTenantDomains{Context: ctx, Handler: handler}
}

/*GetAllTenantDomains swagger:route GET /v1/tenants/{tenantId}/domain-list TenantProvisioningService getAllTenantDomains

Retrieve all Domains for the specified Tenant.

*/
type GetAllTenantDomains struct {
	Context *middleware.Context
	Handler GetAllTenantDomainsHandler
}

func (o *GetAllTenantDomains) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAllTenantDomainsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
