// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetAllTenantMonitoredObjectsOKCode is the HTTP code returned for type GetAllTenantMonitoredObjectsOK
const GetAllTenantMonitoredObjectsOKCode int = 200

/*GetAllTenantMonitoredObjectsOK get all tenant monitored objects o k

swagger:response getAllTenantMonitoredObjectsOK
*/
type GetAllTenantMonitoredObjectsOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPITenantMonitoredObjectList `json:"body,omitempty"`
}

// NewGetAllTenantMonitoredObjectsOK creates GetAllTenantMonitoredObjectsOK with default headers values
func NewGetAllTenantMonitoredObjectsOK() *GetAllTenantMonitoredObjectsOK {

	return &GetAllTenantMonitoredObjectsOK{}
}

// WithPayload adds the payload to the get all tenant monitored objects o k response
func (o *GetAllTenantMonitoredObjectsOK) WithPayload(payload *swagmodels.JSONAPITenantMonitoredObjectList) *GetAllTenantMonitoredObjectsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tenant monitored objects o k response
func (o *GetAllTenantMonitoredObjectsOK) SetPayload(payload *swagmodels.JSONAPITenantMonitoredObjectList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTenantMonitoredObjectsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllTenantMonitoredObjectsForbiddenCode is the HTTP code returned for type GetAllTenantMonitoredObjectsForbidden
const GetAllTenantMonitoredObjectsForbiddenCode int = 403

/*GetAllTenantMonitoredObjectsForbidden Requestor does not have authorization to perform this action

swagger:response getAllTenantMonitoredObjectsForbidden
*/
type GetAllTenantMonitoredObjectsForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAllTenantMonitoredObjectsForbidden creates GetAllTenantMonitoredObjectsForbidden with default headers values
func NewGetAllTenantMonitoredObjectsForbidden() *GetAllTenantMonitoredObjectsForbidden {

	return &GetAllTenantMonitoredObjectsForbidden{}
}

// WithPayload adds the payload to the get all tenant monitored objects forbidden response
func (o *GetAllTenantMonitoredObjectsForbidden) WithPayload(payload string) *GetAllTenantMonitoredObjectsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tenant monitored objects forbidden response
func (o *GetAllTenantMonitoredObjectsForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTenantMonitoredObjectsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetAllTenantMonitoredObjectsInternalServerErrorCode is the HTTP code returned for type GetAllTenantMonitoredObjectsInternalServerError
const GetAllTenantMonitoredObjectsInternalServerErrorCode int = 500

/*GetAllTenantMonitoredObjectsInternalServerError Unexpected error processing request

swagger:response getAllTenantMonitoredObjectsInternalServerError
*/
type GetAllTenantMonitoredObjectsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAllTenantMonitoredObjectsInternalServerError creates GetAllTenantMonitoredObjectsInternalServerError with default headers values
func NewGetAllTenantMonitoredObjectsInternalServerError() *GetAllTenantMonitoredObjectsInternalServerError {

	return &GetAllTenantMonitoredObjectsInternalServerError{}
}

// WithPayload adds the payload to the get all tenant monitored objects internal server error response
func (o *GetAllTenantMonitoredObjectsInternalServerError) WithPayload(payload string) *GetAllTenantMonitoredObjectsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all tenant monitored objects internal server error response
func (o *GetAllTenantMonitoredObjectsInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllTenantMonitoredObjectsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
