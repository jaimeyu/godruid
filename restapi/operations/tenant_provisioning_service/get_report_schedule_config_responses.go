// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetReportScheduleConfigOKCode is the HTTP code returned for type GetReportScheduleConfigOK
const GetReportScheduleConfigOKCode int = 200

/*GetReportScheduleConfigOK get report schedule config o k

swagger:response getReportScheduleConfigOK
*/
type GetReportScheduleConfigOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPITenantReportScheduleConfig `json:"body,omitempty"`
}

// NewGetReportScheduleConfigOK creates GetReportScheduleConfigOK with default headers values
func NewGetReportScheduleConfigOK() *GetReportScheduleConfigOK {

	return &GetReportScheduleConfigOK{}
}

// WithPayload adds the payload to the get report schedule config o k response
func (o *GetReportScheduleConfigOK) WithPayload(payload *swagmodels.JSONAPITenantReportScheduleConfig) *GetReportScheduleConfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get report schedule config o k response
func (o *GetReportScheduleConfigOK) SetPayload(payload *swagmodels.JSONAPITenantReportScheduleConfig) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReportScheduleConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReportScheduleConfigForbiddenCode is the HTTP code returned for type GetReportScheduleConfigForbidden
const GetReportScheduleConfigForbiddenCode int = 403

/*GetReportScheduleConfigForbidden Requestor does not have authorization to perform this action

swagger:response getReportScheduleConfigForbidden
*/
type GetReportScheduleConfigForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetReportScheduleConfigForbidden creates GetReportScheduleConfigForbidden with default headers values
func NewGetReportScheduleConfigForbidden() *GetReportScheduleConfigForbidden {

	return &GetReportScheduleConfigForbidden{}
}

// WithPayload adds the payload to the get report schedule config forbidden response
func (o *GetReportScheduleConfigForbidden) WithPayload(payload string) *GetReportScheduleConfigForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get report schedule config forbidden response
func (o *GetReportScheduleConfigForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReportScheduleConfigForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetReportScheduleConfigInternalServerErrorCode is the HTTP code returned for type GetReportScheduleConfigInternalServerError
const GetReportScheduleConfigInternalServerErrorCode int = 500

/*GetReportScheduleConfigInternalServerError Unexpected error processing request

swagger:response getReportScheduleConfigInternalServerError
*/
type GetReportScheduleConfigInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetReportScheduleConfigInternalServerError creates GetReportScheduleConfigInternalServerError with default headers values
func NewGetReportScheduleConfigInternalServerError() *GetReportScheduleConfigInternalServerError {

	return &GetReportScheduleConfigInternalServerError{}
}

// WithPayload adds the payload to the get report schedule config internal server error response
func (o *GetReportScheduleConfigInternalServerError) WithPayload(payload string) *GetReportScheduleConfigInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get report schedule config internal server error response
func (o *GetReportScheduleConfigInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReportScheduleConfigInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
