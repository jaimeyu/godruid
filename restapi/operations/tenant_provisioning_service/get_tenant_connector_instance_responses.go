// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetTenantConnectorInstanceOKCode is the HTTP code returned for type GetTenantConnectorInstanceOK
const GetTenantConnectorInstanceOKCode int = 200

/*GetTenantConnectorInstanceOK get tenant connector instance o k

swagger:response getTenantConnectorInstanceOK
*/
type GetTenantConnectorInstanceOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPITenantConnectorInstance `json:"body,omitempty"`
}

// NewGetTenantConnectorInstanceOK creates GetTenantConnectorInstanceOK with default headers values
func NewGetTenantConnectorInstanceOK() *GetTenantConnectorInstanceOK {

	return &GetTenantConnectorInstanceOK{}
}

// WithPayload adds the payload to the get tenant connector instance o k response
func (o *GetTenantConnectorInstanceOK) WithPayload(payload *swagmodels.JSONAPITenantConnectorInstance) *GetTenantConnectorInstanceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tenant connector instance o k response
func (o *GetTenantConnectorInstanceOK) SetPayload(payload *swagmodels.JSONAPITenantConnectorInstance) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTenantConnectorInstanceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTenantConnectorInstanceForbiddenCode is the HTTP code returned for type GetTenantConnectorInstanceForbidden
const GetTenantConnectorInstanceForbiddenCode int = 403

/*GetTenantConnectorInstanceForbidden Requestor does not have authorization to perform this action

swagger:response getTenantConnectorInstanceForbidden
*/
type GetTenantConnectorInstanceForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetTenantConnectorInstanceForbidden creates GetTenantConnectorInstanceForbidden with default headers values
func NewGetTenantConnectorInstanceForbidden() *GetTenantConnectorInstanceForbidden {

	return &GetTenantConnectorInstanceForbidden{}
}

// WithPayload adds the payload to the get tenant connector instance forbidden response
func (o *GetTenantConnectorInstanceForbidden) WithPayload(payload string) *GetTenantConnectorInstanceForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tenant connector instance forbidden response
func (o *GetTenantConnectorInstanceForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTenantConnectorInstanceForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetTenantConnectorInstanceInternalServerErrorCode is the HTTP code returned for type GetTenantConnectorInstanceInternalServerError
const GetTenantConnectorInstanceInternalServerErrorCode int = 500

/*GetTenantConnectorInstanceInternalServerError Unexpected error processing request

swagger:response getTenantConnectorInstanceInternalServerError
*/
type GetTenantConnectorInstanceInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetTenantConnectorInstanceInternalServerError creates GetTenantConnectorInstanceInternalServerError with default headers values
func NewGetTenantConnectorInstanceInternalServerError() *GetTenantConnectorInstanceInternalServerError {

	return &GetTenantConnectorInstanceInternalServerError{}
}

// WithPayload adds the payload to the get tenant connector instance internal server error response
func (o *GetTenantConnectorInstanceInternalServerError) WithPayload(payload string) *GetTenantConnectorInstanceInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tenant connector instance internal server error response
func (o *GetTenantConnectorInstanceInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTenantConnectorInstanceInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
