// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// PatchTenantDomainOKCode is the HTTP code returned for type PatchTenantDomainOK
const PatchTenantDomainOKCode int = 200

/*PatchTenantDomainOK Successfully patched tenant domain.

swagger:response patchTenantDomainOK
*/
type PatchTenantDomainOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPITenantDomain `json:"body,omitempty"`
}

// NewPatchTenantDomainOK creates PatchTenantDomainOK with default headers values
func NewPatchTenantDomainOK() *PatchTenantDomainOK {

	return &PatchTenantDomainOK{}
}

// WithPayload adds the payload to the patch tenant domain o k response
func (o *PatchTenantDomainOK) WithPayload(payload *swagmodels.JSONAPITenantDomain) *PatchTenantDomainOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant domain o k response
func (o *PatchTenantDomainOK) SetPayload(payload *swagmodels.JSONAPITenantDomain) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantDomainOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchTenantDomainBadRequestCode is the HTTP code returned for type PatchTenantDomainBadRequest
const PatchTenantDomainBadRequestCode int = 400

/*PatchTenantDomainBadRequest Request data does not pass validation

swagger:response patchTenantDomainBadRequest
*/
type PatchTenantDomainBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPatchTenantDomainBadRequest creates PatchTenantDomainBadRequest with default headers values
func NewPatchTenantDomainBadRequest() *PatchTenantDomainBadRequest {

	return &PatchTenantDomainBadRequest{}
}

// WithPayload adds the payload to the patch tenant domain bad request response
func (o *PatchTenantDomainBadRequest) WithPayload(payload string) *PatchTenantDomainBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant domain bad request response
func (o *PatchTenantDomainBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantDomainBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PatchTenantDomainForbiddenCode is the HTTP code returned for type PatchTenantDomainForbidden
const PatchTenantDomainForbiddenCode int = 403

/*PatchTenantDomainForbidden Requestor does not have authorization to perform this action

swagger:response patchTenantDomainForbidden
*/
type PatchTenantDomainForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPatchTenantDomainForbidden creates PatchTenantDomainForbidden with default headers values
func NewPatchTenantDomainForbidden() *PatchTenantDomainForbidden {

	return &PatchTenantDomainForbidden{}
}

// WithPayload adds the payload to the patch tenant domain forbidden response
func (o *PatchTenantDomainForbidden) WithPayload(payload string) *PatchTenantDomainForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant domain forbidden response
func (o *PatchTenantDomainForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantDomainForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PatchTenantDomainInternalServerErrorCode is the HTTP code returned for type PatchTenantDomainInternalServerError
const PatchTenantDomainInternalServerErrorCode int = 500

/*PatchTenantDomainInternalServerError Unexpected error processing request

swagger:response patchTenantDomainInternalServerError
*/
type PatchTenantDomainInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPatchTenantDomainInternalServerError creates PatchTenantDomainInternalServerError with default headers values
func NewPatchTenantDomainInternalServerError() *PatchTenantDomainInternalServerError {

	return &PatchTenantDomainInternalServerError{}
}

// WithPayload adds the payload to the patch tenant domain internal server error response
func (o *PatchTenantDomainInternalServerError) WithPayload(payload string) *PatchTenantDomainInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant domain internal server error response
func (o *PatchTenantDomainInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantDomainInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
