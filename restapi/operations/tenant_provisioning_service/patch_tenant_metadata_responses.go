// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// PatchTenantMetadataOKCode is the HTTP code returned for type PatchTenantMetadataOK
const PatchTenantMetadataOKCode int = 200

/*PatchTenantMetadataOK patch tenant metadata o k

swagger:response patchTenantMetadataOK
*/
type PatchTenantMetadataOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPITenantMetadata `json:"body,omitempty"`
}

// NewPatchTenantMetadataOK creates PatchTenantMetadataOK with default headers values
func NewPatchTenantMetadataOK() *PatchTenantMetadataOK {

	return &PatchTenantMetadataOK{}
}

// WithPayload adds the payload to the patch tenant metadata o k response
func (o *PatchTenantMetadataOK) WithPayload(payload *swagmodels.JSONAPITenantMetadata) *PatchTenantMetadataOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant metadata o k response
func (o *PatchTenantMetadataOK) SetPayload(payload *swagmodels.JSONAPITenantMetadata) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantMetadataOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchTenantMetadataBadRequestCode is the HTTP code returned for type PatchTenantMetadataBadRequest
const PatchTenantMetadataBadRequestCode int = 400

/*PatchTenantMetadataBadRequest Request data does not pass validation

swagger:response patchTenantMetadataBadRequest
*/
type PatchTenantMetadataBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPatchTenantMetadataBadRequest creates PatchTenantMetadataBadRequest with default headers values
func NewPatchTenantMetadataBadRequest() *PatchTenantMetadataBadRequest {

	return &PatchTenantMetadataBadRequest{}
}

// WithPayload adds the payload to the patch tenant metadata bad request response
func (o *PatchTenantMetadataBadRequest) WithPayload(payload string) *PatchTenantMetadataBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant metadata bad request response
func (o *PatchTenantMetadataBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantMetadataBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PatchTenantMetadataForbiddenCode is the HTTP code returned for type PatchTenantMetadataForbidden
const PatchTenantMetadataForbiddenCode int = 403

/*PatchTenantMetadataForbidden Requestor does not have authorization to perform this action

swagger:response patchTenantMetadataForbidden
*/
type PatchTenantMetadataForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPatchTenantMetadataForbidden creates PatchTenantMetadataForbidden with default headers values
func NewPatchTenantMetadataForbidden() *PatchTenantMetadataForbidden {

	return &PatchTenantMetadataForbidden{}
}

// WithPayload adds the payload to the patch tenant metadata forbidden response
func (o *PatchTenantMetadataForbidden) WithPayload(payload string) *PatchTenantMetadataForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant metadata forbidden response
func (o *PatchTenantMetadataForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantMetadataForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PatchTenantMetadataInternalServerErrorCode is the HTTP code returned for type PatchTenantMetadataInternalServerError
const PatchTenantMetadataInternalServerErrorCode int = 500

/*PatchTenantMetadataInternalServerError Unexpected error processing request

swagger:response patchTenantMetadataInternalServerError
*/
type PatchTenantMetadataInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPatchTenantMetadataInternalServerError creates PatchTenantMetadataInternalServerError with default headers values
func NewPatchTenantMetadataInternalServerError() *PatchTenantMetadataInternalServerError {

	return &PatchTenantMetadataInternalServerError{}
}

// WithPayload adds the payload to the patch tenant metadata internal server error response
func (o *PatchTenantMetadataInternalServerError) WithPayload(payload string) *PatchTenantMetadataInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tenant metadata internal server error response
func (o *PatchTenantMetadataInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTenantMetadataInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
