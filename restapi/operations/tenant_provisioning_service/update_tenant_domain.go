// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateTenantDomainHandlerFunc turns a function with the right signature into a update tenant domain handler
type UpdateTenantDomainHandlerFunc func(UpdateTenantDomainParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateTenantDomainHandlerFunc) Handle(params UpdateTenantDomainParams) middleware.Responder {
	return fn(params)
}

// UpdateTenantDomainHandler interface for that can handle valid update tenant domain params
type UpdateTenantDomainHandler interface {
	Handle(UpdateTenantDomainParams) middleware.Responder
}

// NewUpdateTenantDomain creates a new http.Handler for the update tenant domain operation
func NewUpdateTenantDomain(ctx *middleware.Context, handler UpdateTenantDomainHandler) *UpdateTenantDomain {
	return &UpdateTenantDomain{Context: ctx, Handler: handler}
}

/*UpdateTenantDomain swagger:route PUT /v1/tenants/{tenantId}/domains/{domainId} TenantProvisioningService updateTenantDomain

Update a Tenant Domain

*/
type UpdateTenantDomain struct {
	Context *middleware.Context
	Handler UpdateTenantDomainHandler
}

func (o *UpdateTenantDomain) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateTenantDomainParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
