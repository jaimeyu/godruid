// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// UpdateTenantThresholdProfileOKCode is the HTTP code returned for type UpdateTenantThresholdProfileOK
const UpdateTenantThresholdProfileOKCode int = 200

/*UpdateTenantThresholdProfileOK update tenant threshold profile o k

swagger:response updateTenantThresholdProfileOK
*/
type UpdateTenantThresholdProfileOK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.JSONAPITenantThresholdProfile `json:"body,omitempty"`
}

// NewUpdateTenantThresholdProfileOK creates UpdateTenantThresholdProfileOK with default headers values
func NewUpdateTenantThresholdProfileOK() *UpdateTenantThresholdProfileOK {

	return &UpdateTenantThresholdProfileOK{}
}

// WithPayload adds the payload to the update tenant threshold profile o k response
func (o *UpdateTenantThresholdProfileOK) WithPayload(payload *swagmodels.JSONAPITenantThresholdProfile) *UpdateTenantThresholdProfileOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update tenant threshold profile o k response
func (o *UpdateTenantThresholdProfileOK) SetPayload(payload *swagmodels.JSONAPITenantThresholdProfile) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTenantThresholdProfileOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTenantThresholdProfileBadRequestCode is the HTTP code returned for type UpdateTenantThresholdProfileBadRequest
const UpdateTenantThresholdProfileBadRequestCode int = 400

/*UpdateTenantThresholdProfileBadRequest Request data does not pass validation

swagger:response updateTenantThresholdProfileBadRequest
*/
type UpdateTenantThresholdProfileBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateTenantThresholdProfileBadRequest creates UpdateTenantThresholdProfileBadRequest with default headers values
func NewUpdateTenantThresholdProfileBadRequest() *UpdateTenantThresholdProfileBadRequest {

	return &UpdateTenantThresholdProfileBadRequest{}
}

// WithPayload adds the payload to the update tenant threshold profile bad request response
func (o *UpdateTenantThresholdProfileBadRequest) WithPayload(payload string) *UpdateTenantThresholdProfileBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update tenant threshold profile bad request response
func (o *UpdateTenantThresholdProfileBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTenantThresholdProfileBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateTenantThresholdProfileForbiddenCode is the HTTP code returned for type UpdateTenantThresholdProfileForbidden
const UpdateTenantThresholdProfileForbiddenCode int = 403

/*UpdateTenantThresholdProfileForbidden Requestor does not have authorization to perform this action

swagger:response updateTenantThresholdProfileForbidden
*/
type UpdateTenantThresholdProfileForbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateTenantThresholdProfileForbidden creates UpdateTenantThresholdProfileForbidden with default headers values
func NewUpdateTenantThresholdProfileForbidden() *UpdateTenantThresholdProfileForbidden {

	return &UpdateTenantThresholdProfileForbidden{}
}

// WithPayload adds the payload to the update tenant threshold profile forbidden response
func (o *UpdateTenantThresholdProfileForbidden) WithPayload(payload string) *UpdateTenantThresholdProfileForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update tenant threshold profile forbidden response
func (o *UpdateTenantThresholdProfileForbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTenantThresholdProfileForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateTenantThresholdProfileInternalServerErrorCode is the HTTP code returned for type UpdateTenantThresholdProfileInternalServerError
const UpdateTenantThresholdProfileInternalServerErrorCode int = 500

/*UpdateTenantThresholdProfileInternalServerError Unexpected error processing request

swagger:response updateTenantThresholdProfileInternalServerError
*/
type UpdateTenantThresholdProfileInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateTenantThresholdProfileInternalServerError creates UpdateTenantThresholdProfileInternalServerError with default headers values
func NewUpdateTenantThresholdProfileInternalServerError() *UpdateTenantThresholdProfileInternalServerError {

	return &UpdateTenantThresholdProfileInternalServerError{}
}

// WithPayload adds the payload to the update tenant threshold profile internal server error response
func (o *UpdateTenantThresholdProfileInternalServerError) WithPayload(payload string) *UpdateTenantThresholdProfileInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update tenant threshold profile internal server error response
func (o *UpdateTenantThresholdProfileInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTenantThresholdProfileInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
