// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// BulkUpdateMetricBaselinesV2OKCode is the HTTP code returned for type BulkUpdateMetricBaselinesV2OK
const BulkUpdateMetricBaselinesV2OKCode int = 200

/*BulkUpdateMetricBaselinesV2OK bulk update metric baselines v2 o k

swagger:response bulkUpdateMetricBaselinesV2OK
*/
type BulkUpdateMetricBaselinesV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.MetricBaselineBulkUpdateResponse `json:"body,omitempty"`
}

// NewBulkUpdateMetricBaselinesV2OK creates BulkUpdateMetricBaselinesV2OK with default headers values
func NewBulkUpdateMetricBaselinesV2OK() *BulkUpdateMetricBaselinesV2OK {

	return &BulkUpdateMetricBaselinesV2OK{}
}

// WithPayload adds the payload to the bulk update metric baselines v2 o k response
func (o *BulkUpdateMetricBaselinesV2OK) WithPayload(payload *swagmodels.MetricBaselineBulkUpdateResponse) *BulkUpdateMetricBaselinesV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bulk update metric baselines v2 o k response
func (o *BulkUpdateMetricBaselinesV2OK) SetPayload(payload *swagmodels.MetricBaselineBulkUpdateResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BulkUpdateMetricBaselinesV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BulkUpdateMetricBaselinesV2BadRequestCode is the HTTP code returned for type BulkUpdateMetricBaselinesV2BadRequest
const BulkUpdateMetricBaselinesV2BadRequestCode int = 400

/*BulkUpdateMetricBaselinesV2BadRequest Request data does not pass validation

swagger:response bulkUpdateMetricBaselinesV2BadRequest
*/
type BulkUpdateMetricBaselinesV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewBulkUpdateMetricBaselinesV2BadRequest creates BulkUpdateMetricBaselinesV2BadRequest with default headers values
func NewBulkUpdateMetricBaselinesV2BadRequest() *BulkUpdateMetricBaselinesV2BadRequest {

	return &BulkUpdateMetricBaselinesV2BadRequest{}
}

// WithPayload adds the payload to the bulk update metric baselines v2 bad request response
func (o *BulkUpdateMetricBaselinesV2BadRequest) WithPayload(payload string) *BulkUpdateMetricBaselinesV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bulk update metric baselines v2 bad request response
func (o *BulkUpdateMetricBaselinesV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BulkUpdateMetricBaselinesV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// BulkUpdateMetricBaselinesV2ForbiddenCode is the HTTP code returned for type BulkUpdateMetricBaselinesV2Forbidden
const BulkUpdateMetricBaselinesV2ForbiddenCode int = 403

/*BulkUpdateMetricBaselinesV2Forbidden Requestor does not have authorization to perform this action

swagger:response bulkUpdateMetricBaselinesV2Forbidden
*/
type BulkUpdateMetricBaselinesV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewBulkUpdateMetricBaselinesV2Forbidden creates BulkUpdateMetricBaselinesV2Forbidden with default headers values
func NewBulkUpdateMetricBaselinesV2Forbidden() *BulkUpdateMetricBaselinesV2Forbidden {

	return &BulkUpdateMetricBaselinesV2Forbidden{}
}

// WithPayload adds the payload to the bulk update metric baselines v2 forbidden response
func (o *BulkUpdateMetricBaselinesV2Forbidden) WithPayload(payload string) *BulkUpdateMetricBaselinesV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bulk update metric baselines v2 forbidden response
func (o *BulkUpdateMetricBaselinesV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BulkUpdateMetricBaselinesV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// BulkUpdateMetricBaselinesV2InternalServerErrorCode is the HTTP code returned for type BulkUpdateMetricBaselinesV2InternalServerError
const BulkUpdateMetricBaselinesV2InternalServerErrorCode int = 500

/*BulkUpdateMetricBaselinesV2InternalServerError Unexpected error processing request

swagger:response bulkUpdateMetricBaselinesV2InternalServerError
*/
type BulkUpdateMetricBaselinesV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewBulkUpdateMetricBaselinesV2InternalServerError creates BulkUpdateMetricBaselinesV2InternalServerError with default headers values
func NewBulkUpdateMetricBaselinesV2InternalServerError() *BulkUpdateMetricBaselinesV2InternalServerError {

	return &BulkUpdateMetricBaselinesV2InternalServerError{}
}

// WithPayload adds the payload to the bulk update metric baselines v2 internal server error response
func (o *BulkUpdateMetricBaselinesV2InternalServerError) WithPayload(payload string) *BulkUpdateMetricBaselinesV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bulk update metric baselines v2 internal server error response
func (o *BulkUpdateMetricBaselinesV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BulkUpdateMetricBaselinesV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
