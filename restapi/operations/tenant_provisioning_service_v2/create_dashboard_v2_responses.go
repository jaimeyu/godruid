// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// CreateDashboardV2CreatedCode is the HTTP code returned for type CreateDashboardV2Created
const CreateDashboardV2CreatedCode int = 201

/*CreateDashboardV2Created create dashboard v2 created

swagger:response createDashboardV2Created
*/
type CreateDashboardV2Created struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.DashboardResponse `json:"body,omitempty"`
}

// NewCreateDashboardV2Created creates CreateDashboardV2Created with default headers values
func NewCreateDashboardV2Created() *CreateDashboardV2Created {

	return &CreateDashboardV2Created{}
}

// WithPayload adds the payload to the create dashboard v2 created response
func (o *CreateDashboardV2Created) WithPayload(payload *swagmodels.DashboardResponse) *CreateDashboardV2Created {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create dashboard v2 created response
func (o *CreateDashboardV2Created) SetPayload(payload *swagmodels.DashboardResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDashboardV2Created) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateDashboardV2BadRequestCode is the HTTP code returned for type CreateDashboardV2BadRequest
const CreateDashboardV2BadRequestCode int = 400

/*CreateDashboardV2BadRequest Request data does not pass validation

swagger:response createDashboardV2BadRequest
*/
type CreateDashboardV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateDashboardV2BadRequest creates CreateDashboardV2BadRequest with default headers values
func NewCreateDashboardV2BadRequest() *CreateDashboardV2BadRequest {

	return &CreateDashboardV2BadRequest{}
}

// WithPayload adds the payload to the create dashboard v2 bad request response
func (o *CreateDashboardV2BadRequest) WithPayload(payload string) *CreateDashboardV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create dashboard v2 bad request response
func (o *CreateDashboardV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDashboardV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// CreateDashboardV2ForbiddenCode is the HTTP code returned for type CreateDashboardV2Forbidden
const CreateDashboardV2ForbiddenCode int = 403

/*CreateDashboardV2Forbidden Requestor does not have authorization to perform this action

swagger:response createDashboardV2Forbidden
*/
type CreateDashboardV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateDashboardV2Forbidden creates CreateDashboardV2Forbidden with default headers values
func NewCreateDashboardV2Forbidden() *CreateDashboardV2Forbidden {

	return &CreateDashboardV2Forbidden{}
}

// WithPayload adds the payload to the create dashboard v2 forbidden response
func (o *CreateDashboardV2Forbidden) WithPayload(payload string) *CreateDashboardV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create dashboard v2 forbidden response
func (o *CreateDashboardV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDashboardV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// CreateDashboardV2ConflictCode is the HTTP code returned for type CreateDashboardV2Conflict
const CreateDashboardV2ConflictCode int = 409

/*CreateDashboardV2Conflict The Dashboard being provisioned already exists

swagger:response createDashboardV2Conflict
*/
type CreateDashboardV2Conflict struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateDashboardV2Conflict creates CreateDashboardV2Conflict with default headers values
func NewCreateDashboardV2Conflict() *CreateDashboardV2Conflict {

	return &CreateDashboardV2Conflict{}
}

// WithPayload adds the payload to the create dashboard v2 conflict response
func (o *CreateDashboardV2Conflict) WithPayload(payload string) *CreateDashboardV2Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create dashboard v2 conflict response
func (o *CreateDashboardV2Conflict) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDashboardV2Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// CreateDashboardV2InternalServerErrorCode is the HTTP code returned for type CreateDashboardV2InternalServerError
const CreateDashboardV2InternalServerErrorCode int = 500

/*CreateDashboardV2InternalServerError Unexpected error processing request

swagger:response createDashboardV2InternalServerError
*/
type CreateDashboardV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateDashboardV2InternalServerError creates CreateDashboardV2InternalServerError with default headers values
func NewCreateDashboardV2InternalServerError() *CreateDashboardV2InternalServerError {

	return &CreateDashboardV2InternalServerError{}
}

// WithPayload adds the payload to the create dashboard v2 internal server error response
func (o *CreateDashboardV2InternalServerError) WithPayload(payload string) *CreateDashboardV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create dashboard v2 internal server error response
func (o *CreateDashboardV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDashboardV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
