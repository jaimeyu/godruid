// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CreateDataCleaningProfileHandlerFunc turns a function with the right signature into a create data cleaning profile handler
type CreateDataCleaningProfileHandlerFunc func(CreateDataCleaningProfileParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CreateDataCleaningProfileHandlerFunc) Handle(params CreateDataCleaningProfileParams) middleware.Responder {
	return fn(params)
}

// CreateDataCleaningProfileHandler interface for that can handle valid create data cleaning profile params
type CreateDataCleaningProfileHandler interface {
	Handle(CreateDataCleaningProfileParams) middleware.Responder
}

// NewCreateDataCleaningProfile creates a new http.Handler for the create data cleaning profile operation
func NewCreateDataCleaningProfile(ctx *middleware.Context, handler CreateDataCleaningProfileHandler) *CreateDataCleaningProfile {
	return &CreateDataCleaningProfile{Context: ctx, Handler: handler}
}

/*CreateDataCleaningProfile swagger:route POST /v2/data-cleaning-profiles TenantProvisioningServiceV2 createDataCleaningProfile

Provides ability to Create a Tenant Data Cleaning Profile

*/
type CreateDataCleaningProfile struct {
	Context *middleware.Context
	Handler CreateDataCleaningProfileHandler
}

func (o *CreateDataCleaningProfile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCreateDataCleaningProfileParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
