// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteCardV2HandlerFunc turns a function with the right signature into a delete card v2 handler
type DeleteCardV2HandlerFunc func(DeleteCardV2Params) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteCardV2HandlerFunc) Handle(params DeleteCardV2Params) middleware.Responder {
	return fn(params)
}

// DeleteCardV2Handler interface for that can handle valid delete card v2 params
type DeleteCardV2Handler interface {
	Handle(DeleteCardV2Params) middleware.Responder
}

// NewDeleteCardV2 creates a new http.Handler for the delete card v2 operation
func NewDeleteCardV2(ctx *middleware.Context, handler DeleteCardV2Handler) *DeleteCardV2 {
	return &DeleteCardV2{Context: ctx, Handler: handler}
}

/*DeleteCardV2 swagger:route DELETE /v2/cards/{cardId} TenantProvisioningServiceV2 deleteCardV2

Delete a Tenant Card specified by the provided Card Id.

*/
type DeleteCardV2 struct {
	Context *middleware.Context
	Handler DeleteCardV2Handler
}

func (o *DeleteCardV2) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteCardV2Params()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
