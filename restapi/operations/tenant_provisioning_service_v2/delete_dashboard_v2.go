// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteDashboardV2HandlerFunc turns a function with the right signature into a delete dashboard v2 handler
type DeleteDashboardV2HandlerFunc func(DeleteDashboardV2Params) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteDashboardV2HandlerFunc) Handle(params DeleteDashboardV2Params) middleware.Responder {
	return fn(params)
}

// DeleteDashboardV2Handler interface for that can handle valid delete dashboard v2 params
type DeleteDashboardV2Handler interface {
	Handle(DeleteDashboardV2Params) middleware.Responder
}

// NewDeleteDashboardV2 creates a new http.Handler for the delete dashboard v2 operation
func NewDeleteDashboardV2(ctx *middleware.Context, handler DeleteDashboardV2Handler) *DeleteDashboardV2 {
	return &DeleteDashboardV2{Context: ctx, Handler: handler}
}

/*DeleteDashboardV2 swagger:route DELETE /v2/dashboards/{dashboardId} TenantProvisioningServiceV2 deleteDashboardV2

Delete a Tenant Dashboard specified by the provided Dashboard Id.

*/
type DeleteDashboardV2 struct {
	Context *middleware.Context
	Handler DeleteDashboardV2Handler
}

func (o *DeleteDashboardV2) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteDashboardV2Params()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
