// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteMetricBaselineByMonitoredObjectIDV2Params creates a new DeleteMetricBaselineByMonitoredObjectIDV2Params object
// with the default values initialized.
func NewDeleteMetricBaselineByMonitoredObjectIDV2Params() DeleteMetricBaselineByMonitoredObjectIDV2Params {

	var (
		// initialize parameters with default values

		resetDefault = bool(false)
	)

	return DeleteMetricBaselineByMonitoredObjectIDV2Params{
		Reset: resetDefault,
	}
}

// DeleteMetricBaselineByMonitoredObjectIDV2Params contains all the bound params for the delete metric baseline by monitored object Id v2 operation
// typically these are obtained from a http.Request
//
// swagger:parameters DeleteMetricBaselineByMonitoredObjectIdV2
type DeleteMetricBaselineByMonitoredObjectIDV2Params struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  Required: true
	  In: path
	*/
	MonitoredObjectID string
	/*If true, will only reset all Metric Baselines for the Monitored Object. If false, will delete all Metric Baseline records for the monitored object
	  Required: true
	  In: query
	  Default: false
	*/
	Reset bool
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewDeleteMetricBaselineByMonitoredObjectIDV2Params() beforehand.
func (o *DeleteMetricBaselineByMonitoredObjectIDV2Params) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	rMonitoredObjectID, rhkMonitoredObjectID, _ := route.Params.GetOK("monitoredObjectId")
	if err := o.bindMonitoredObjectID(rMonitoredObjectID, rhkMonitoredObjectID, route.Formats); err != nil {
		res = append(res, err)
	}

	qReset, qhkReset, _ := qs.GetOK("reset")
	if err := o.bindReset(qReset, qhkReset, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindMonitoredObjectID binds and validates parameter MonitoredObjectID from path.
func (o *DeleteMetricBaselineByMonitoredObjectIDV2Params) bindMonitoredObjectID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	o.MonitoredObjectID = raw

	return nil
}

// bindReset binds and validates parameter Reset from query.
func (o *DeleteMetricBaselineByMonitoredObjectIDV2Params) bindReset(rawData []string, hasKey bool, formats strfmt.Registry) error {
	if !hasKey {
		return errors.Required("reset", "query")
	}
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// AllowEmptyValue: false
	if err := validate.RequiredString("reset", "query", raw); err != nil {
		return err
	}

	value, err := swag.ConvertBool(raw)
	if err != nil {
		return errors.InvalidType("reset", "query", "bool", raw)
	}
	o.Reset = value

	return nil
}
