// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetAllSLAReportsV2OKCode is the HTTP code returned for type GetAllSLAReportsV2OK
const GetAllSLAReportsV2OKCode int = 200

/*GetAllSLAReportsV2OK get all Sla reports v2 o k

swagger:response getAllSlaReportsV2OK
*/
type GetAllSLAReportsV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.GathergrpcJSONAPIObjectList `json:"body,omitempty"`
}

// NewGetAllSLAReportsV2OK creates GetAllSLAReportsV2OK with default headers values
func NewGetAllSLAReportsV2OK() *GetAllSLAReportsV2OK {

	return &GetAllSLAReportsV2OK{}
}

// WithPayload adds the payload to the get all Sla reports v2 o k response
func (o *GetAllSLAReportsV2OK) WithPayload(payload *swagmodels.GathergrpcJSONAPIObjectList) *GetAllSLAReportsV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all Sla reports v2 o k response
func (o *GetAllSLAReportsV2OK) SetPayload(payload *swagmodels.GathergrpcJSONAPIObjectList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllSLAReportsV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAllSLAReportsV2ForbiddenCode is the HTTP code returned for type GetAllSLAReportsV2Forbidden
const GetAllSLAReportsV2ForbiddenCode int = 403

/*GetAllSLAReportsV2Forbidden Requestor does not have authorization to perform this action

swagger:response getAllSlaReportsV2Forbidden
*/
type GetAllSLAReportsV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAllSLAReportsV2Forbidden creates GetAllSLAReportsV2Forbidden with default headers values
func NewGetAllSLAReportsV2Forbidden() *GetAllSLAReportsV2Forbidden {

	return &GetAllSLAReportsV2Forbidden{}
}

// WithPayload adds the payload to the get all Sla reports v2 forbidden response
func (o *GetAllSLAReportsV2Forbidden) WithPayload(payload string) *GetAllSLAReportsV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all Sla reports v2 forbidden response
func (o *GetAllSLAReportsV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllSLAReportsV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetAllSLAReportsV2NotFoundCode is the HTTP code returned for type GetAllSLAReportsV2NotFound
const GetAllSLAReportsV2NotFoundCode int = 404

/*GetAllSLAReportsV2NotFound No Reports are provisioned in Datahub

swagger:response getAllSlaReportsV2NotFound
*/
type GetAllSLAReportsV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAllSLAReportsV2NotFound creates GetAllSLAReportsV2NotFound with default headers values
func NewGetAllSLAReportsV2NotFound() *GetAllSLAReportsV2NotFound {

	return &GetAllSLAReportsV2NotFound{}
}

// WithPayload adds the payload to the get all Sla reports v2 not found response
func (o *GetAllSLAReportsV2NotFound) WithPayload(payload string) *GetAllSLAReportsV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all Sla reports v2 not found response
func (o *GetAllSLAReportsV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllSLAReportsV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetAllSLAReportsV2InternalServerErrorCode is the HTTP code returned for type GetAllSLAReportsV2InternalServerError
const GetAllSLAReportsV2InternalServerErrorCode int = 500

/*GetAllSLAReportsV2InternalServerError Unexpected error processing request

swagger:response getAllSlaReportsV2InternalServerError
*/
type GetAllSLAReportsV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetAllSLAReportsV2InternalServerError creates GetAllSLAReportsV2InternalServerError with default headers values
func NewGetAllSLAReportsV2InternalServerError() *GetAllSLAReportsV2InternalServerError {

	return &GetAllSLAReportsV2InternalServerError{}
}

// WithPayload adds the payload to the get all Sla reports v2 internal server error response
func (o *GetAllSLAReportsV2InternalServerError) WithPayload(payload string) *GetAllSLAReportsV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all Sla reports v2 internal server error response
func (o *GetAllSLAReportsV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllSLAReportsV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
