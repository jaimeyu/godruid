// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetFilteredMonitoredObjectListV2OKCode is the HTTP code returned for type GetFilteredMonitoredObjectListV2OK
const GetFilteredMonitoredObjectListV2OKCode int = 200

/*GetFilteredMonitoredObjectListV2OK Response list containing all monitored object IDs that match the provided meta filter criteria

swagger:response getFilteredMonitoredObjectListV2OK
*/
type GetFilteredMonitoredObjectListV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.MonitoredObjectFilteredListResponse `json:"body,omitempty"`
}

// NewGetFilteredMonitoredObjectListV2OK creates GetFilteredMonitoredObjectListV2OK with default headers values
func NewGetFilteredMonitoredObjectListV2OK() *GetFilteredMonitoredObjectListV2OK {

	return &GetFilteredMonitoredObjectListV2OK{}
}

// WithPayload adds the payload to the get filtered monitored object list v2 o k response
func (o *GetFilteredMonitoredObjectListV2OK) WithPayload(payload *swagmodels.MonitoredObjectFilteredListResponse) *GetFilteredMonitoredObjectListV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get filtered monitored object list v2 o k response
func (o *GetFilteredMonitoredObjectListV2OK) SetPayload(payload *swagmodels.MonitoredObjectFilteredListResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilteredMonitoredObjectListV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFilteredMonitoredObjectListV2BadRequestCode is the HTTP code returned for type GetFilteredMonitoredObjectListV2BadRequest
const GetFilteredMonitoredObjectListV2BadRequestCode int = 400

/*GetFilteredMonitoredObjectListV2BadRequest Request data does not pass validation

swagger:response getFilteredMonitoredObjectListV2BadRequest
*/
type GetFilteredMonitoredObjectListV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetFilteredMonitoredObjectListV2BadRequest creates GetFilteredMonitoredObjectListV2BadRequest with default headers values
func NewGetFilteredMonitoredObjectListV2BadRequest() *GetFilteredMonitoredObjectListV2BadRequest {

	return &GetFilteredMonitoredObjectListV2BadRequest{}
}

// WithPayload adds the payload to the get filtered monitored object list v2 bad request response
func (o *GetFilteredMonitoredObjectListV2BadRequest) WithPayload(payload string) *GetFilteredMonitoredObjectListV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get filtered monitored object list v2 bad request response
func (o *GetFilteredMonitoredObjectListV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilteredMonitoredObjectListV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetFilteredMonitoredObjectListV2ForbiddenCode is the HTTP code returned for type GetFilteredMonitoredObjectListV2Forbidden
const GetFilteredMonitoredObjectListV2ForbiddenCode int = 403

/*GetFilteredMonitoredObjectListV2Forbidden Requestor does not have authorization to perform this action

swagger:response getFilteredMonitoredObjectListV2Forbidden
*/
type GetFilteredMonitoredObjectListV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetFilteredMonitoredObjectListV2Forbidden creates GetFilteredMonitoredObjectListV2Forbidden with default headers values
func NewGetFilteredMonitoredObjectListV2Forbidden() *GetFilteredMonitoredObjectListV2Forbidden {

	return &GetFilteredMonitoredObjectListV2Forbidden{}
}

// WithPayload adds the payload to the get filtered monitored object list v2 forbidden response
func (o *GetFilteredMonitoredObjectListV2Forbidden) WithPayload(payload string) *GetFilteredMonitoredObjectListV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get filtered monitored object list v2 forbidden response
func (o *GetFilteredMonitoredObjectListV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilteredMonitoredObjectListV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetFilteredMonitoredObjectListV2InternalServerErrorCode is the HTTP code returned for type GetFilteredMonitoredObjectListV2InternalServerError
const GetFilteredMonitoredObjectListV2InternalServerErrorCode int = 500

/*GetFilteredMonitoredObjectListV2InternalServerError Unexpected error processing request

swagger:response getFilteredMonitoredObjectListV2InternalServerError
*/
type GetFilteredMonitoredObjectListV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetFilteredMonitoredObjectListV2InternalServerError creates GetFilteredMonitoredObjectListV2InternalServerError with default headers values
func NewGetFilteredMonitoredObjectListV2InternalServerError() *GetFilteredMonitoredObjectListV2InternalServerError {

	return &GetFilteredMonitoredObjectListV2InternalServerError{}
}

// WithPayload adds the payload to the get filtered monitored object list v2 internal server error response
func (o *GetFilteredMonitoredObjectListV2InternalServerError) WithPayload(payload string) *GetFilteredMonitoredObjectListV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get filtered monitored object list v2 internal server error response
func (o *GetFilteredMonitoredObjectListV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilteredMonitoredObjectListV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
