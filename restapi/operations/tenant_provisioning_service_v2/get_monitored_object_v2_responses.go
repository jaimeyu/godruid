// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// GetMonitoredObjectV2OKCode is the HTTP code returned for type GetMonitoredObjectV2OK
const GetMonitoredObjectV2OKCode int = 200

/*GetMonitoredObjectV2OK get monitored object v2 o k

swagger:response getMonitoredObjectV2OK
*/
type GetMonitoredObjectV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.MonitoredObjectResponse `json:"body,omitempty"`
}

// NewGetMonitoredObjectV2OK creates GetMonitoredObjectV2OK with default headers values
func NewGetMonitoredObjectV2OK() *GetMonitoredObjectV2OK {

	return &GetMonitoredObjectV2OK{}
}

// WithPayload adds the payload to the get monitored object v2 o k response
func (o *GetMonitoredObjectV2OK) WithPayload(payload *swagmodels.MonitoredObjectResponse) *GetMonitoredObjectV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get monitored object v2 o k response
func (o *GetMonitoredObjectV2OK) SetPayload(payload *swagmodels.MonitoredObjectResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMonitoredObjectV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMonitoredObjectV2ForbiddenCode is the HTTP code returned for type GetMonitoredObjectV2Forbidden
const GetMonitoredObjectV2ForbiddenCode int = 403

/*GetMonitoredObjectV2Forbidden Requestor does not have authorization to perform this action

swagger:response getMonitoredObjectV2Forbidden
*/
type GetMonitoredObjectV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetMonitoredObjectV2Forbidden creates GetMonitoredObjectV2Forbidden with default headers values
func NewGetMonitoredObjectV2Forbidden() *GetMonitoredObjectV2Forbidden {

	return &GetMonitoredObjectV2Forbidden{}
}

// WithPayload adds the payload to the get monitored object v2 forbidden response
func (o *GetMonitoredObjectV2Forbidden) WithPayload(payload string) *GetMonitoredObjectV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get monitored object v2 forbidden response
func (o *GetMonitoredObjectV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMonitoredObjectV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetMonitoredObjectV2NotFoundCode is the HTTP code returned for type GetMonitoredObjectV2NotFound
const GetMonitoredObjectV2NotFoundCode int = 404

/*GetMonitoredObjectV2NotFound The requested Monitored Object is not provisioned

swagger:response getMonitoredObjectV2NotFound
*/
type GetMonitoredObjectV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetMonitoredObjectV2NotFound creates GetMonitoredObjectV2NotFound with default headers values
func NewGetMonitoredObjectV2NotFound() *GetMonitoredObjectV2NotFound {

	return &GetMonitoredObjectV2NotFound{}
}

// WithPayload adds the payload to the get monitored object v2 not found response
func (o *GetMonitoredObjectV2NotFound) WithPayload(payload string) *GetMonitoredObjectV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get monitored object v2 not found response
func (o *GetMonitoredObjectV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMonitoredObjectV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetMonitoredObjectV2InternalServerErrorCode is the HTTP code returned for type GetMonitoredObjectV2InternalServerError
const GetMonitoredObjectV2InternalServerErrorCode int = 500

/*GetMonitoredObjectV2InternalServerError Unexpected error processing request

swagger:response getMonitoredObjectV2InternalServerError
*/
type GetMonitoredObjectV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetMonitoredObjectV2InternalServerError creates GetMonitoredObjectV2InternalServerError with default headers values
func NewGetMonitoredObjectV2InternalServerError() *GetMonitoredObjectV2InternalServerError {

	return &GetMonitoredObjectV2InternalServerError{}
}

// WithPayload adds the payload to the get monitored object v2 internal server error response
func (o *GetMonitoredObjectV2InternalServerError) WithPayload(payload string) *GetMonitoredObjectV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get monitored object v2 internal server error response
func (o *GetMonitoredObjectV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMonitoredObjectV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
