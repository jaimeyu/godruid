// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// UpdateBrandingV2OKCode is the HTTP code returned for type UpdateBrandingV2OK
const UpdateBrandingV2OKCode int = 200

/*UpdateBrandingV2OK update branding v2 o k

swagger:response updateBrandingV2OK
*/
type UpdateBrandingV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.BrandingResponse `json:"body,omitempty"`
}

// NewUpdateBrandingV2OK creates UpdateBrandingV2OK with default headers values
func NewUpdateBrandingV2OK() *UpdateBrandingV2OK {

	return &UpdateBrandingV2OK{}
}

// WithPayload adds the payload to the update branding v2 o k response
func (o *UpdateBrandingV2OK) WithPayload(payload *swagmodels.BrandingResponse) *UpdateBrandingV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update branding v2 o k response
func (o *UpdateBrandingV2OK) SetPayload(payload *swagmodels.BrandingResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateBrandingV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateBrandingV2BadRequestCode is the HTTP code returned for type UpdateBrandingV2BadRequest
const UpdateBrandingV2BadRequestCode int = 400

/*UpdateBrandingV2BadRequest Request data does not pass validation

swagger:response updateBrandingV2BadRequest
*/
type UpdateBrandingV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateBrandingV2BadRequest creates UpdateBrandingV2BadRequest with default headers values
func NewUpdateBrandingV2BadRequest() *UpdateBrandingV2BadRequest {

	return &UpdateBrandingV2BadRequest{}
}

// WithPayload adds the payload to the update branding v2 bad request response
func (o *UpdateBrandingV2BadRequest) WithPayload(payload string) *UpdateBrandingV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update branding v2 bad request response
func (o *UpdateBrandingV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateBrandingV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateBrandingV2ForbiddenCode is the HTTP code returned for type UpdateBrandingV2Forbidden
const UpdateBrandingV2ForbiddenCode int = 403

/*UpdateBrandingV2Forbidden Requestor does not have authorization to perform this action

swagger:response updateBrandingV2Forbidden
*/
type UpdateBrandingV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateBrandingV2Forbidden creates UpdateBrandingV2Forbidden with default headers values
func NewUpdateBrandingV2Forbidden() *UpdateBrandingV2Forbidden {

	return &UpdateBrandingV2Forbidden{}
}

// WithPayload adds the payload to the update branding v2 forbidden response
func (o *UpdateBrandingV2Forbidden) WithPayload(payload string) *UpdateBrandingV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update branding v2 forbidden response
func (o *UpdateBrandingV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateBrandingV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateBrandingV2NotFoundCode is the HTTP code returned for type UpdateBrandingV2NotFound
const UpdateBrandingV2NotFoundCode int = 404

/*UpdateBrandingV2NotFound The specified branding is not provisioned

swagger:response updateBrandingV2NotFound
*/
type UpdateBrandingV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateBrandingV2NotFound creates UpdateBrandingV2NotFound with default headers values
func NewUpdateBrandingV2NotFound() *UpdateBrandingV2NotFound {

	return &UpdateBrandingV2NotFound{}
}

// WithPayload adds the payload to the update branding v2 not found response
func (o *UpdateBrandingV2NotFound) WithPayload(payload string) *UpdateBrandingV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update branding v2 not found response
func (o *UpdateBrandingV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateBrandingV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateBrandingV2ConflictCode is the HTTP code returned for type UpdateBrandingV2Conflict
const UpdateBrandingV2ConflictCode int = 409

/*UpdateBrandingV2Conflict Incorrect revision number passed in to the branding being updated

swagger:response updateBrandingV2Conflict
*/
type UpdateBrandingV2Conflict struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateBrandingV2Conflict creates UpdateBrandingV2Conflict with default headers values
func NewUpdateBrandingV2Conflict() *UpdateBrandingV2Conflict {

	return &UpdateBrandingV2Conflict{}
}

// WithPayload adds the payload to the update branding v2 conflict response
func (o *UpdateBrandingV2Conflict) WithPayload(payload string) *UpdateBrandingV2Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update branding v2 conflict response
func (o *UpdateBrandingV2Conflict) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateBrandingV2Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateBrandingV2InternalServerErrorCode is the HTTP code returned for type UpdateBrandingV2InternalServerError
const UpdateBrandingV2InternalServerErrorCode int = 500

/*UpdateBrandingV2InternalServerError Unexpected error processing request

swagger:response updateBrandingV2InternalServerError
*/
type UpdateBrandingV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateBrandingV2InternalServerError creates UpdateBrandingV2InternalServerError with default headers values
func NewUpdateBrandingV2InternalServerError() *UpdateBrandingV2InternalServerError {

	return &UpdateBrandingV2InternalServerError{}
}

// WithPayload adds the payload to the update branding v2 internal server error response
func (o *UpdateBrandingV2InternalServerError) WithPayload(payload string) *UpdateBrandingV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update branding v2 internal server error response
func (o *UpdateBrandingV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateBrandingV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
