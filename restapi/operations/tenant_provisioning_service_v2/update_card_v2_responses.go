// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// UpdateCardV2OKCode is the HTTP code returned for type UpdateCardV2OK
const UpdateCardV2OKCode int = 200

/*UpdateCardV2OK update card v2 o k

swagger:response updateCardV2OK
*/
type UpdateCardV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.CardResponse `json:"body,omitempty"`
}

// NewUpdateCardV2OK creates UpdateCardV2OK with default headers values
func NewUpdateCardV2OK() *UpdateCardV2OK {

	return &UpdateCardV2OK{}
}

// WithPayload adds the payload to the update card v2 o k response
func (o *UpdateCardV2OK) WithPayload(payload *swagmodels.CardResponse) *UpdateCardV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update card v2 o k response
func (o *UpdateCardV2OK) SetPayload(payload *swagmodels.CardResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCardV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCardV2BadRequestCode is the HTTP code returned for type UpdateCardV2BadRequest
const UpdateCardV2BadRequestCode int = 400

/*UpdateCardV2BadRequest Request data does not pass validation

swagger:response updateCardV2BadRequest
*/
type UpdateCardV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateCardV2BadRequest creates UpdateCardV2BadRequest with default headers values
func NewUpdateCardV2BadRequest() *UpdateCardV2BadRequest {

	return &UpdateCardV2BadRequest{}
}

// WithPayload adds the payload to the update card v2 bad request response
func (o *UpdateCardV2BadRequest) WithPayload(payload string) *UpdateCardV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update card v2 bad request response
func (o *UpdateCardV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCardV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateCardV2ForbiddenCode is the HTTP code returned for type UpdateCardV2Forbidden
const UpdateCardV2ForbiddenCode int = 403

/*UpdateCardV2Forbidden Requestor does not have authorization to perform this action

swagger:response updateCardV2Forbidden
*/
type UpdateCardV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateCardV2Forbidden creates UpdateCardV2Forbidden with default headers values
func NewUpdateCardV2Forbidden() *UpdateCardV2Forbidden {

	return &UpdateCardV2Forbidden{}
}

// WithPayload adds the payload to the update card v2 forbidden response
func (o *UpdateCardV2Forbidden) WithPayload(payload string) *UpdateCardV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update card v2 forbidden response
func (o *UpdateCardV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCardV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateCardV2NotFoundCode is the HTTP code returned for type UpdateCardV2NotFound
const UpdateCardV2NotFoundCode int = 404

/*UpdateCardV2NotFound The specified Cards is not provisioned

swagger:response updateCardV2NotFound
*/
type UpdateCardV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateCardV2NotFound creates UpdateCardV2NotFound with default headers values
func NewUpdateCardV2NotFound() *UpdateCardV2NotFound {

	return &UpdateCardV2NotFound{}
}

// WithPayload adds the payload to the update card v2 not found response
func (o *UpdateCardV2NotFound) WithPayload(payload string) *UpdateCardV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update card v2 not found response
func (o *UpdateCardV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCardV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateCardV2ConflictCode is the HTTP code returned for type UpdateCardV2Conflict
const UpdateCardV2ConflictCode int = 409

/*UpdateCardV2Conflict Incorrect revision number passed in to the Cards being updated

swagger:response updateCardV2Conflict
*/
type UpdateCardV2Conflict struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateCardV2Conflict creates UpdateCardV2Conflict with default headers values
func NewUpdateCardV2Conflict() *UpdateCardV2Conflict {

	return &UpdateCardV2Conflict{}
}

// WithPayload adds the payload to the update card v2 conflict response
func (o *UpdateCardV2Conflict) WithPayload(payload string) *UpdateCardV2Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update card v2 conflict response
func (o *UpdateCardV2Conflict) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCardV2Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateCardV2InternalServerErrorCode is the HTTP code returned for type UpdateCardV2InternalServerError
const UpdateCardV2InternalServerErrorCode int = 500

/*UpdateCardV2InternalServerError Unexpected error processing request

swagger:response updateCardV2InternalServerError
*/
type UpdateCardV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateCardV2InternalServerError creates UpdateCardV2InternalServerError with default headers values
func NewUpdateCardV2InternalServerError() *UpdateCardV2InternalServerError {

	return &UpdateCardV2InternalServerError{}
}

// WithPayload adds the payload to the update card v2 internal server error response
func (o *UpdateCardV2InternalServerError) WithPayload(payload string) *UpdateCardV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update card v2 internal server error response
func (o *UpdateCardV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCardV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
