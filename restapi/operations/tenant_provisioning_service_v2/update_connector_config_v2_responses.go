// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// UpdateConnectorConfigV2OKCode is the HTTP code returned for type UpdateConnectorConfigV2OK
const UpdateConnectorConfigV2OKCode int = 200

/*UpdateConnectorConfigV2OK update connector config v2 o k

swagger:response updateConnectorConfigV2OK
*/
type UpdateConnectorConfigV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.ConnectorConfigResponse `json:"body,omitempty"`
}

// NewUpdateConnectorConfigV2OK creates UpdateConnectorConfigV2OK with default headers values
func NewUpdateConnectorConfigV2OK() *UpdateConnectorConfigV2OK {

	return &UpdateConnectorConfigV2OK{}
}

// WithPayload adds the payload to the update connector config v2 o k response
func (o *UpdateConnectorConfigV2OK) WithPayload(payload *swagmodels.ConnectorConfigResponse) *UpdateConnectorConfigV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector config v2 o k response
func (o *UpdateConnectorConfigV2OK) SetPayload(payload *swagmodels.ConnectorConfigResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorConfigV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateConnectorConfigV2BadRequestCode is the HTTP code returned for type UpdateConnectorConfigV2BadRequest
const UpdateConnectorConfigV2BadRequestCode int = 400

/*UpdateConnectorConfigV2BadRequest Request data does not pass validation

swagger:response updateConnectorConfigV2BadRequest
*/
type UpdateConnectorConfigV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateConnectorConfigV2BadRequest creates UpdateConnectorConfigV2BadRequest with default headers values
func NewUpdateConnectorConfigV2BadRequest() *UpdateConnectorConfigV2BadRequest {

	return &UpdateConnectorConfigV2BadRequest{}
}

// WithPayload adds the payload to the update connector config v2 bad request response
func (o *UpdateConnectorConfigV2BadRequest) WithPayload(payload string) *UpdateConnectorConfigV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector config v2 bad request response
func (o *UpdateConnectorConfigV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorConfigV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateConnectorConfigV2ForbiddenCode is the HTTP code returned for type UpdateConnectorConfigV2Forbidden
const UpdateConnectorConfigV2ForbiddenCode int = 403

/*UpdateConnectorConfigV2Forbidden Requestor does not have authorization to perform this action

swagger:response updateConnectorConfigV2Forbidden
*/
type UpdateConnectorConfigV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateConnectorConfigV2Forbidden creates UpdateConnectorConfigV2Forbidden with default headers values
func NewUpdateConnectorConfigV2Forbidden() *UpdateConnectorConfigV2Forbidden {

	return &UpdateConnectorConfigV2Forbidden{}
}

// WithPayload adds the payload to the update connector config v2 forbidden response
func (o *UpdateConnectorConfigV2Forbidden) WithPayload(payload string) *UpdateConnectorConfigV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector config v2 forbidden response
func (o *UpdateConnectorConfigV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorConfigV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateConnectorConfigV2NotFoundCode is the HTTP code returned for type UpdateConnectorConfigV2NotFound
const UpdateConnectorConfigV2NotFoundCode int = 404

/*UpdateConnectorConfigV2NotFound The specified Connector Configuration is not provisioned

swagger:response updateConnectorConfigV2NotFound
*/
type UpdateConnectorConfigV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateConnectorConfigV2NotFound creates UpdateConnectorConfigV2NotFound with default headers values
func NewUpdateConnectorConfigV2NotFound() *UpdateConnectorConfigV2NotFound {

	return &UpdateConnectorConfigV2NotFound{}
}

// WithPayload adds the payload to the update connector config v2 not found response
func (o *UpdateConnectorConfigV2NotFound) WithPayload(payload string) *UpdateConnectorConfigV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector config v2 not found response
func (o *UpdateConnectorConfigV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorConfigV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateConnectorConfigV2ConflictCode is the HTTP code returned for type UpdateConnectorConfigV2Conflict
const UpdateConnectorConfigV2ConflictCode int = 409

/*UpdateConnectorConfigV2Conflict Incorrect revision number passed in to the Connector Configuration being updated

swagger:response updateConnectorConfigV2Conflict
*/
type UpdateConnectorConfigV2Conflict struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateConnectorConfigV2Conflict creates UpdateConnectorConfigV2Conflict with default headers values
func NewUpdateConnectorConfigV2Conflict() *UpdateConnectorConfigV2Conflict {

	return &UpdateConnectorConfigV2Conflict{}
}

// WithPayload adds the payload to the update connector config v2 conflict response
func (o *UpdateConnectorConfigV2Conflict) WithPayload(payload string) *UpdateConnectorConfigV2Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector config v2 conflict response
func (o *UpdateConnectorConfigV2Conflict) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorConfigV2Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateConnectorConfigV2InternalServerErrorCode is the HTTP code returned for type UpdateConnectorConfigV2InternalServerError
const UpdateConnectorConfigV2InternalServerErrorCode int = 500

/*UpdateConnectorConfigV2InternalServerError Unexpected error processing request

swagger:response updateConnectorConfigV2InternalServerError
*/
type UpdateConnectorConfigV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateConnectorConfigV2InternalServerError creates UpdateConnectorConfigV2InternalServerError with default headers values
func NewUpdateConnectorConfigV2InternalServerError() *UpdateConnectorConfigV2InternalServerError {

	return &UpdateConnectorConfigV2InternalServerError{}
}

// WithPayload adds the payload to the update connector config v2 internal server error response
func (o *UpdateConnectorConfigV2InternalServerError) WithPayload(payload string) *UpdateConnectorConfigV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector config v2 internal server error response
func (o *UpdateConnectorConfigV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorConfigV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
