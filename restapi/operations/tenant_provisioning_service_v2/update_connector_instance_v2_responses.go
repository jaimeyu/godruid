// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// UpdateConnectorInstanceV2OKCode is the HTTP code returned for type UpdateConnectorInstanceV2OK
const UpdateConnectorInstanceV2OKCode int = 200

/*UpdateConnectorInstanceV2OK update connector instance v2 o k

swagger:response updateConnectorInstanceV2OK
*/
type UpdateConnectorInstanceV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.ConnectorInstanceResponse `json:"body,omitempty"`
}

// NewUpdateConnectorInstanceV2OK creates UpdateConnectorInstanceV2OK with default headers values
func NewUpdateConnectorInstanceV2OK() *UpdateConnectorInstanceV2OK {

	return &UpdateConnectorInstanceV2OK{}
}

// WithPayload adds the payload to the update connector instance v2 o k response
func (o *UpdateConnectorInstanceV2OK) WithPayload(payload *swagmodels.ConnectorInstanceResponse) *UpdateConnectorInstanceV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector instance v2 o k response
func (o *UpdateConnectorInstanceV2OK) SetPayload(payload *swagmodels.ConnectorInstanceResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorInstanceV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateConnectorInstanceV2BadRequestCode is the HTTP code returned for type UpdateConnectorInstanceV2BadRequest
const UpdateConnectorInstanceV2BadRequestCode int = 400

/*UpdateConnectorInstanceV2BadRequest Request data does not pass validation

swagger:response updateConnectorInstanceV2BadRequest
*/
type UpdateConnectorInstanceV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateConnectorInstanceV2BadRequest creates UpdateConnectorInstanceV2BadRequest with default headers values
func NewUpdateConnectorInstanceV2BadRequest() *UpdateConnectorInstanceV2BadRequest {

	return &UpdateConnectorInstanceV2BadRequest{}
}

// WithPayload adds the payload to the update connector instance v2 bad request response
func (o *UpdateConnectorInstanceV2BadRequest) WithPayload(payload string) *UpdateConnectorInstanceV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector instance v2 bad request response
func (o *UpdateConnectorInstanceV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorInstanceV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateConnectorInstanceV2ForbiddenCode is the HTTP code returned for type UpdateConnectorInstanceV2Forbidden
const UpdateConnectorInstanceV2ForbiddenCode int = 403

/*UpdateConnectorInstanceV2Forbidden Requestor does not have authorization to perform this action

swagger:response updateConnectorInstanceV2Forbidden
*/
type UpdateConnectorInstanceV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateConnectorInstanceV2Forbidden creates UpdateConnectorInstanceV2Forbidden with default headers values
func NewUpdateConnectorInstanceV2Forbidden() *UpdateConnectorInstanceV2Forbidden {

	return &UpdateConnectorInstanceV2Forbidden{}
}

// WithPayload adds the payload to the update connector instance v2 forbidden response
func (o *UpdateConnectorInstanceV2Forbidden) WithPayload(payload string) *UpdateConnectorInstanceV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector instance v2 forbidden response
func (o *UpdateConnectorInstanceV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorInstanceV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateConnectorInstanceV2NotFoundCode is the HTTP code returned for type UpdateConnectorInstanceV2NotFound
const UpdateConnectorInstanceV2NotFoundCode int = 404

/*UpdateConnectorInstanceV2NotFound The requested Connector Instance is not provisioned

swagger:response updateConnectorInstanceV2NotFound
*/
type UpdateConnectorInstanceV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateConnectorInstanceV2NotFound creates UpdateConnectorInstanceV2NotFound with default headers values
func NewUpdateConnectorInstanceV2NotFound() *UpdateConnectorInstanceV2NotFound {

	return &UpdateConnectorInstanceV2NotFound{}
}

// WithPayload adds the payload to the update connector instance v2 not found response
func (o *UpdateConnectorInstanceV2NotFound) WithPayload(payload string) *UpdateConnectorInstanceV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector instance v2 not found response
func (o *UpdateConnectorInstanceV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorInstanceV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateConnectorInstanceV2ConflictCode is the HTTP code returned for type UpdateConnectorInstanceV2Conflict
const UpdateConnectorInstanceV2ConflictCode int = 409

/*UpdateConnectorInstanceV2Conflict Incorrect revision number passed in to the Connector Instance being updated

swagger:response updateConnectorInstanceV2Conflict
*/
type UpdateConnectorInstanceV2Conflict struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateConnectorInstanceV2Conflict creates UpdateConnectorInstanceV2Conflict with default headers values
func NewUpdateConnectorInstanceV2Conflict() *UpdateConnectorInstanceV2Conflict {

	return &UpdateConnectorInstanceV2Conflict{}
}

// WithPayload adds the payload to the update connector instance v2 conflict response
func (o *UpdateConnectorInstanceV2Conflict) WithPayload(payload string) *UpdateConnectorInstanceV2Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector instance v2 conflict response
func (o *UpdateConnectorInstanceV2Conflict) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorInstanceV2Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateConnectorInstanceV2InternalServerErrorCode is the HTTP code returned for type UpdateConnectorInstanceV2InternalServerError
const UpdateConnectorInstanceV2InternalServerErrorCode int = 500

/*UpdateConnectorInstanceV2InternalServerError Unexpected error processing request

swagger:response updateConnectorInstanceV2InternalServerError
*/
type UpdateConnectorInstanceV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateConnectorInstanceV2InternalServerError creates UpdateConnectorInstanceV2InternalServerError with default headers values
func NewUpdateConnectorInstanceV2InternalServerError() *UpdateConnectorInstanceV2InternalServerError {

	return &UpdateConnectorInstanceV2InternalServerError{}
}

// WithPayload adds the payload to the update connector instance v2 internal server error response
func (o *UpdateConnectorInstanceV2InternalServerError) WithPayload(payload string) *UpdateConnectorInstanceV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update connector instance v2 internal server error response
func (o *UpdateConnectorInstanceV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConnectorInstanceV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
