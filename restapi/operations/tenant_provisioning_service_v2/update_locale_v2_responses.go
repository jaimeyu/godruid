// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// UpdateLocaleV2OKCode is the HTTP code returned for type UpdateLocaleV2OK
const UpdateLocaleV2OKCode int = 200

/*UpdateLocaleV2OK update locale v2 o k

swagger:response updateLocaleV2OK
*/
type UpdateLocaleV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.LocaleResponse `json:"body,omitempty"`
}

// NewUpdateLocaleV2OK creates UpdateLocaleV2OK with default headers values
func NewUpdateLocaleV2OK() *UpdateLocaleV2OK {

	return &UpdateLocaleV2OK{}
}

// WithPayload adds the payload to the update locale v2 o k response
func (o *UpdateLocaleV2OK) WithPayload(payload *swagmodels.LocaleResponse) *UpdateLocaleV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update locale v2 o k response
func (o *UpdateLocaleV2OK) SetPayload(payload *swagmodels.LocaleResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLocaleV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateLocaleV2BadRequestCode is the HTTP code returned for type UpdateLocaleV2BadRequest
const UpdateLocaleV2BadRequestCode int = 400

/*UpdateLocaleV2BadRequest Request data does not pass validation

swagger:response updateLocaleV2BadRequest
*/
type UpdateLocaleV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateLocaleV2BadRequest creates UpdateLocaleV2BadRequest with default headers values
func NewUpdateLocaleV2BadRequest() *UpdateLocaleV2BadRequest {

	return &UpdateLocaleV2BadRequest{}
}

// WithPayload adds the payload to the update locale v2 bad request response
func (o *UpdateLocaleV2BadRequest) WithPayload(payload string) *UpdateLocaleV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update locale v2 bad request response
func (o *UpdateLocaleV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLocaleV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateLocaleV2ForbiddenCode is the HTTP code returned for type UpdateLocaleV2Forbidden
const UpdateLocaleV2ForbiddenCode int = 403

/*UpdateLocaleV2Forbidden Requestor does not have authorization to perform this action

swagger:response updateLocaleV2Forbidden
*/
type UpdateLocaleV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateLocaleV2Forbidden creates UpdateLocaleV2Forbidden with default headers values
func NewUpdateLocaleV2Forbidden() *UpdateLocaleV2Forbidden {

	return &UpdateLocaleV2Forbidden{}
}

// WithPayload adds the payload to the update locale v2 forbidden response
func (o *UpdateLocaleV2Forbidden) WithPayload(payload string) *UpdateLocaleV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update locale v2 forbidden response
func (o *UpdateLocaleV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLocaleV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateLocaleV2NotFoundCode is the HTTP code returned for type UpdateLocaleV2NotFound
const UpdateLocaleV2NotFoundCode int = 404

/*UpdateLocaleV2NotFound The requested Locale is not provisioned

swagger:response updateLocaleV2NotFound
*/
type UpdateLocaleV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateLocaleV2NotFound creates UpdateLocaleV2NotFound with default headers values
func NewUpdateLocaleV2NotFound() *UpdateLocaleV2NotFound {

	return &UpdateLocaleV2NotFound{}
}

// WithPayload adds the payload to the update locale v2 not found response
func (o *UpdateLocaleV2NotFound) WithPayload(payload string) *UpdateLocaleV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update locale v2 not found response
func (o *UpdateLocaleV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLocaleV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateLocaleV2ConflictCode is the HTTP code returned for type UpdateLocaleV2Conflict
const UpdateLocaleV2ConflictCode int = 409

/*UpdateLocaleV2Conflict Incorrect revision number passed in to the Locale being updated

swagger:response updateLocaleV2Conflict
*/
type UpdateLocaleV2Conflict struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateLocaleV2Conflict creates UpdateLocaleV2Conflict with default headers values
func NewUpdateLocaleV2Conflict() *UpdateLocaleV2Conflict {

	return &UpdateLocaleV2Conflict{}
}

// WithPayload adds the payload to the update locale v2 conflict response
func (o *UpdateLocaleV2Conflict) WithPayload(payload string) *UpdateLocaleV2Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update locale v2 conflict response
func (o *UpdateLocaleV2Conflict) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLocaleV2Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateLocaleV2InternalServerErrorCode is the HTTP code returned for type UpdateLocaleV2InternalServerError
const UpdateLocaleV2InternalServerErrorCode int = 500

/*UpdateLocaleV2InternalServerError Unexpected error processing request

swagger:response updateLocaleV2InternalServerError
*/
type UpdateLocaleV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateLocaleV2InternalServerError creates UpdateLocaleV2InternalServerError with default headers values
func NewUpdateLocaleV2InternalServerError() *UpdateLocaleV2InternalServerError {

	return &UpdateLocaleV2InternalServerError{}
}

// WithPayload adds the payload to the update locale v2 internal server error response
func (o *UpdateLocaleV2InternalServerError) WithPayload(payload string) *UpdateLocaleV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update locale v2 internal server error response
func (o *UpdateLocaleV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateLocaleV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
