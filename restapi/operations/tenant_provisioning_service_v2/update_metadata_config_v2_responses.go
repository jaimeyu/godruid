// Code generated by go-swagger; DO NOT EDIT.

package tenant_provisioning_service_v2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	swagmodels "github.com/accedian/adh-gather/swagmodels"
)

// UpdateMetadataConfigV2OKCode is the HTTP code returned for type UpdateMetadataConfigV2OK
const UpdateMetadataConfigV2OKCode int = 200

/*UpdateMetadataConfigV2OK update metadata config v2 o k

swagger:response updateMetadataConfigV2OK
*/
type UpdateMetadataConfigV2OK struct {

	/*
	  In: Body
	*/
	Payload *swagmodels.MetadataConfigResponse `json:"body,omitempty"`
}

// NewUpdateMetadataConfigV2OK creates UpdateMetadataConfigV2OK with default headers values
func NewUpdateMetadataConfigV2OK() *UpdateMetadataConfigV2OK {

	return &UpdateMetadataConfigV2OK{}
}

// WithPayload adds the payload to the update metadata config v2 o k response
func (o *UpdateMetadataConfigV2OK) WithPayload(payload *swagmodels.MetadataConfigResponse) *UpdateMetadataConfigV2OK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update metadata config v2 o k response
func (o *UpdateMetadataConfigV2OK) SetPayload(payload *swagmodels.MetadataConfigResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMetadataConfigV2OK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMetadataConfigV2BadRequestCode is the HTTP code returned for type UpdateMetadataConfigV2BadRequest
const UpdateMetadataConfigV2BadRequestCode int = 400

/*UpdateMetadataConfigV2BadRequest Request data does not pass validation

swagger:response updateMetadataConfigV2BadRequest
*/
type UpdateMetadataConfigV2BadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateMetadataConfigV2BadRequest creates UpdateMetadataConfigV2BadRequest with default headers values
func NewUpdateMetadataConfigV2BadRequest() *UpdateMetadataConfigV2BadRequest {

	return &UpdateMetadataConfigV2BadRequest{}
}

// WithPayload adds the payload to the update metadata config v2 bad request response
func (o *UpdateMetadataConfigV2BadRequest) WithPayload(payload string) *UpdateMetadataConfigV2BadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update metadata config v2 bad request response
func (o *UpdateMetadataConfigV2BadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMetadataConfigV2BadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateMetadataConfigV2ForbiddenCode is the HTTP code returned for type UpdateMetadataConfigV2Forbidden
const UpdateMetadataConfigV2ForbiddenCode int = 403

/*UpdateMetadataConfigV2Forbidden Requestor does not have authorization to perform this action

swagger:response updateMetadataConfigV2Forbidden
*/
type UpdateMetadataConfigV2Forbidden struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateMetadataConfigV2Forbidden creates UpdateMetadataConfigV2Forbidden with default headers values
func NewUpdateMetadataConfigV2Forbidden() *UpdateMetadataConfigV2Forbidden {

	return &UpdateMetadataConfigV2Forbidden{}
}

// WithPayload adds the payload to the update metadata config v2 forbidden response
func (o *UpdateMetadataConfigV2Forbidden) WithPayload(payload string) *UpdateMetadataConfigV2Forbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update metadata config v2 forbidden response
func (o *UpdateMetadataConfigV2Forbidden) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMetadataConfigV2Forbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateMetadataConfigV2NotFoundCode is the HTTP code returned for type UpdateMetadataConfigV2NotFound
const UpdateMetadataConfigV2NotFoundCode int = 404

/*UpdateMetadataConfigV2NotFound The specified Metadata Configuration is not provisioned

swagger:response updateMetadataConfigV2NotFound
*/
type UpdateMetadataConfigV2NotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateMetadataConfigV2NotFound creates UpdateMetadataConfigV2NotFound with default headers values
func NewUpdateMetadataConfigV2NotFound() *UpdateMetadataConfigV2NotFound {

	return &UpdateMetadataConfigV2NotFound{}
}

// WithPayload adds the payload to the update metadata config v2 not found response
func (o *UpdateMetadataConfigV2NotFound) WithPayload(payload string) *UpdateMetadataConfigV2NotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update metadata config v2 not found response
func (o *UpdateMetadataConfigV2NotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMetadataConfigV2NotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateMetadataConfigV2ConflictCode is the HTTP code returned for type UpdateMetadataConfigV2Conflict
const UpdateMetadataConfigV2ConflictCode int = 409

/*UpdateMetadataConfigV2Conflict Incorrect revision provided for th update request

swagger:response updateMetadataConfigV2Conflict
*/
type UpdateMetadataConfigV2Conflict struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateMetadataConfigV2Conflict creates UpdateMetadataConfigV2Conflict with default headers values
func NewUpdateMetadataConfigV2Conflict() *UpdateMetadataConfigV2Conflict {

	return &UpdateMetadataConfigV2Conflict{}
}

// WithPayload adds the payload to the update metadata config v2 conflict response
func (o *UpdateMetadataConfigV2Conflict) WithPayload(payload string) *UpdateMetadataConfigV2Conflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update metadata config v2 conflict response
func (o *UpdateMetadataConfigV2Conflict) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMetadataConfigV2Conflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UpdateMetadataConfigV2InternalServerErrorCode is the HTTP code returned for type UpdateMetadataConfigV2InternalServerError
const UpdateMetadataConfigV2InternalServerErrorCode int = 500

/*UpdateMetadataConfigV2InternalServerError Unexpected error processing request

swagger:response updateMetadataConfigV2InternalServerError
*/
type UpdateMetadataConfigV2InternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUpdateMetadataConfigV2InternalServerError creates UpdateMetadataConfigV2InternalServerError with default headers values
func NewUpdateMetadataConfigV2InternalServerError() *UpdateMetadataConfigV2InternalServerError {

	return &UpdateMetadataConfigV2InternalServerError{}
}

// WithPayload adds the payload to the update metadata config v2 internal server error response
func (o *UpdateMetadataConfigV2InternalServerError) WithPayload(payload string) *UpdateMetadataConfigV2InternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update metadata config v2 internal server error response
func (o *UpdateMetadataConfigV2InternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMetadataConfigV2InternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
