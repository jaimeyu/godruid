// Code generated by go-swagger; DO NOT EDIT.

package swagmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// CardMetric card metric
// swagger:model CardMetric
type CardMetric struct {

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// key
	Key string `json:"key,omitempty"`

	// label
	Label string `json:"label,omitempty"`

	// metric
	Metric string `json:"metric,omitempty"`

	// metric key
	MetricKey string `json:"metricKey,omitempty"`

	// monitored object types
	MonitoredObjectTypes []string `json:"monitoredObjectTypes"`

	// object type
	ObjectType string `json:"objectType,omitempty"`

	// options
	Options *CardMetricOptions `json:"options,omitempty"`

	// raw metric Id
	RawMetricID string `json:"rawMetricId,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// unit
	Unit string `json:"unit,omitempty"`

	// units
	Units []string `json:"units"`

	// vendor key
	VendorKey string `json:"vendorKey,omitempty"`

	// vendor label
	VendorLabel string `json:"vendorLabel,omitempty"`
}

// Validate validates this card metric
func (m *CardMetric) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOptions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CardMetric) validateOptions(formats strfmt.Registry) error {

	if swag.IsZero(m.Options) { // not required
		return nil
	}

	if m.Options != nil {
		if err := m.Options.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("options")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CardMetric) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CardMetric) UnmarshalBinary(b []byte) error {
	var res CardMetric
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// CardMetricOptions card metric options
// swagger:model CardMetricOptions
type CardMetricOptions struct {

	// bins
	Bins []float64 `json:"bins"`

	// format unit
	FormatUnit string `json:"formatUnit,omitempty"`

	// series
	Series []string `json:"series"`

	// use bins
	UseBins bool `json:"useBins,omitempty"`

	// use explicit series
	UseExplicitSeries bool `json:"useExplicitSeries,omitempty"`
}

// Validate validates this card metric options
func (m *CardMetricOptions) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CardMetricOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CardMetricOptions) UnmarshalBinary(b []byte) error {
	var res CardMetricOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
