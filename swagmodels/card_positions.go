// Code generated by go-swagger; DO NOT EDIT.

package swagmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CardPositions card positions
// swagger:model CardPositions
type CardPositions map[string]CardPositionsAnon

// Validate validates this card positions
func (m CardPositions) Validate(formats strfmt.Registry) error {
	var res []error

	for k := range m {

		if swag.IsZero(m[k]) { // not required
			continue
		}
		if val, ok := m[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// CardPositionsAnon card positions anon
// swagger:model CardPositionsAnon
type CardPositionsAnon struct {

	// dimensions
	Dimensions *CardPositionsAnonDimensions `json:"dimensions,omitempty"`

	// position
	// Required: true
	Position *int64 `json:"position"`
}

// Validate validates this card positions anon
func (m *CardPositionsAnon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDimensions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePosition(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CardPositionsAnon) validateDimensions(formats strfmt.Registry) error {

	if swag.IsZero(m.Dimensions) { // not required
		return nil
	}

	if m.Dimensions != nil {
		if err := m.Dimensions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dimensions")
			}
			return err
		}
	}

	return nil
}

func (m *CardPositionsAnon) validatePosition(formats strfmt.Registry) error {

	if err := validate.Required("position", "body", m.Position); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CardPositionsAnon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CardPositionsAnon) UnmarshalBinary(b []byte) error {
	var res CardPositionsAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// CardPositionsAnonDimensions card positions anon dimensions
// swagger:model CardPositionsAnonDimensions
type CardPositionsAnonDimensions struct {

	// columns
	Columns int64 `json:"columns,omitempty"`

	// rows
	Rows int64 `json:"rows,omitempty"`
}

// Validate validates this card positions anon dimensions
func (m *CardPositionsAnonDimensions) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CardPositionsAnonDimensions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CardPositionsAnonDimensions) UnmarshalBinary(b []byte) error {
	var res CardPositionsAnonDimensions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
