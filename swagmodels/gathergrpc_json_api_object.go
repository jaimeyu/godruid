// Code generated by go-swagger; DO NOT EDIT.

package swagmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GathergrpcJSONAPIObject gathergrpc JSON API object
// swagger:model gathergrpcJSONAPIObject
type GathergrpcJSONAPIObject struct {

	// data
	Data []*GathergrpcData `json:"data"`

	// errors
	Errors []*GathergrpcError `json:"errors"`

	// included
	Included []*GathergrpcResource `json:"included"`

	// jsonapi
	Jsonapi map[string]string `json:"jsonapi,omitempty"`

	// links
	Links *GathergrpcLinks `json:"links,omitempty"`

	// metadata
	Metadata map[string]string `json:"metadata,omitempty"`
}

// Validate validates this gathergrpc JSON API object
func (m *GathergrpcJSONAPIObject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIncluded(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GathergrpcJSONAPIObject) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	for i := 0; i < len(m.Data); i++ {
		if swag.IsZero(m.Data[i]) { // not required
			continue
		}

		if m.Data[i] != nil {
			if err := m.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *GathergrpcJSONAPIObject) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(m.Errors) { // not required
		return nil
	}

	for i := 0; i < len(m.Errors); i++ {
		if swag.IsZero(m.Errors[i]) { // not required
			continue
		}

		if m.Errors[i] != nil {
			if err := m.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *GathergrpcJSONAPIObject) validateIncluded(formats strfmt.Registry) error {

	if swag.IsZero(m.Included) { // not required
		return nil
	}

	for i := 0; i < len(m.Included); i++ {
		if swag.IsZero(m.Included[i]) { // not required
			continue
		}

		if m.Included[i] != nil {
			if err := m.Included[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("included" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *GathergrpcJSONAPIObject) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.Links) { // not required
		return nil
	}

	if m.Links != nil {
		if err := m.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("links")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GathergrpcJSONAPIObject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GathergrpcJSONAPIObject) UnmarshalBinary(b []byte) error {
	var res GathergrpcJSONAPIObject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
