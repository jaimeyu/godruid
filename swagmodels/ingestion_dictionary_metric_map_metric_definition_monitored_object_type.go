// Code generated by go-swagger; DO NOT EDIT.

package swagmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// IngestionDictionaryMetricMapMetricDefinitionMonitoredObjectType ingestion dictionary metric map metric definition monitored object type
// swagger:model IngestionDictionaryMetricMapMetricDefinitionMonitoredObjectType
type IngestionDictionaryMetricMapMetricDefinitionMonitoredObjectType struct {

	// directions
	Directions []string `json:"directions"`

	// key
	Key string `json:"key,omitempty"`

	// raw metric Id
	RawMetricID string `json:"rawMetricId,omitempty"`

	// units
	Units []string `json:"units"`
}

// Validate validates this ingestion dictionary metric map metric definition monitored object type
func (m *IngestionDictionaryMetricMapMetricDefinitionMonitoredObjectType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirections(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUnits(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IngestionDictionaryMetricMapMetricDefinitionMonitoredObjectType) validateDirections(formats strfmt.Registry) error {

	if swag.IsZero(m.Directions) { // not required
		return nil
	}

	return nil
}

func (m *IngestionDictionaryMetricMapMetricDefinitionMonitoredObjectType) validateUnits(formats strfmt.Registry) error {

	if swag.IsZero(m.Units) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IngestionDictionaryMetricMapMetricDefinitionMonitoredObjectType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IngestionDictionaryMetricMapMetricDefinitionMonitoredObjectType) UnmarshalBinary(b []byte) error {
	var res IngestionDictionaryMetricMapMetricDefinitionMonitoredObjectType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
