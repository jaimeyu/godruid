// Code generated by go-swagger; DO NOT EDIT.

package swagmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// IngestionProfileMetrics This object will be deprecated in a future version of the Datahub API
// swagger:model IngestionProfileMetrics
type IngestionProfileMetrics struct {

	// vendor map
	VendorMap map[string]IngestionProfileMetricsVendorMapAnon `json:"vendorMap,omitempty"`
}

// Validate validates this ingestion profile metrics
func (m *IngestionProfileMetrics) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVendorMap(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IngestionProfileMetrics) validateVendorMap(formats strfmt.Registry) error {

	if swag.IsZero(m.VendorMap) { // not required
		return nil
	}

	for k := range m.VendorMap {

		if swag.IsZero(m.VendorMap[k]) { // not required
			continue
		}
		if val, ok := m.VendorMap[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *IngestionProfileMetrics) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IngestionProfileMetrics) UnmarshalBinary(b []byte) error {
	var res IngestionProfileMetrics
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// IngestionProfileMetricsVendorMapAnon ingestion profile metrics vendor map anon
// swagger:model IngestionProfileMetricsVendorMapAnon
type IngestionProfileMetricsVendorMapAnon struct {

	// monitored object type map
	MonitoredObjectTypeMap map[string]IngestionProfileMetricsVendorMapAnonMonitoredObjectTypeMapAnon `json:"monitoredObjectTypeMap,omitempty"`
}

// Validate validates this ingestion profile metrics vendor map anon
func (m *IngestionProfileMetricsVendorMapAnon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMonitoredObjectTypeMap(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IngestionProfileMetricsVendorMapAnon) validateMonitoredObjectTypeMap(formats strfmt.Registry) error {

	if swag.IsZero(m.MonitoredObjectTypeMap) { // not required
		return nil
	}

	for k := range m.MonitoredObjectTypeMap {

		if swag.IsZero(m.MonitoredObjectTypeMap[k]) { // not required
			continue
		}
		if val, ok := m.MonitoredObjectTypeMap[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *IngestionProfileMetricsVendorMapAnon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IngestionProfileMetricsVendorMapAnon) UnmarshalBinary(b []byte) error {
	var res IngestionProfileMetricsVendorMapAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// IngestionProfileMetricsVendorMapAnonMonitoredObjectTypeMapAnon ingestion profile metrics vendor map anon monitored object type map anon
// swagger:model IngestionProfileMetricsVendorMapAnonMonitoredObjectTypeMapAnon
type IngestionProfileMetricsVendorMapAnonMonitoredObjectTypeMapAnon struct {

	// metric map
	MetricMap map[string]bool `json:"metricMap,omitempty"`
}

// Validate validates this ingestion profile metrics vendor map anon monitored object type map anon
func (m *IngestionProfileMetricsVendorMapAnonMonitoredObjectTypeMapAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IngestionProfileMetricsVendorMapAnonMonitoredObjectTypeMapAnon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IngestionProfileMetricsVendorMapAnonMonitoredObjectTypeMapAnon) UnmarshalBinary(b []byte) error {
	var res IngestionProfileMetricsVendorMapAnonMonitoredObjectTypeMapAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
