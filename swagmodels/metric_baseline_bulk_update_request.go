// Code generated by go-swagger; DO NOT EDIT.

package swagmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MetricBaselineBulkUpdateRequest Object used to update Metric Baselines for multiple Monitored Objects in Datahub
// swagger:model MetricBaselineBulkUpdateRequest
type MetricBaselineBulkUpdateRequest struct {

	// data
	// Required: true
	Data *MetricBaselineBulkUpdateRequestData `json:"data"`
}

// Validate validates this metric baseline bulk update request
func (m *MetricBaselineBulkUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MetricBaselineBulkUpdateRequest) validateData(formats strfmt.Registry) error {

	if err := validate.Required("data", "body", m.Data); err != nil {
		return err
	}

	if m.Data != nil {
		if err := m.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MetricBaselineBulkUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MetricBaselineBulkUpdateRequest) UnmarshalBinary(b []byte) error {
	var res MetricBaselineBulkUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// MetricBaselineBulkUpdateRequestData metric baseline bulk update request data
// swagger:model MetricBaselineBulkUpdateRequestData
type MetricBaselineBulkUpdateRequestData struct {

	// attributes
	// Required: true
	Attributes []*MetricBaselineBulkUpdateRequestDataAttributesItems0 `json:"attributes"`

	// id
	ID string `json:"id,omitempty"`

	// type
	// Required: true
	// Enum: [metricBaselineBulkUpdate]
	Type *string `json:"type"`
}

// Validate validates this metric baseline bulk update request data
func (m *MetricBaselineBulkUpdateRequestData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttributes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MetricBaselineBulkUpdateRequestData) validateAttributes(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"attributes", "body", m.Attributes); err != nil {
		return err
	}

	for i := 0; i < len(m.Attributes); i++ {
		if swag.IsZero(m.Attributes[i]) { // not required
			continue
		}

		if m.Attributes[i] != nil {
			if err := m.Attributes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("data" + "." + "attributes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var metricBaselineBulkUpdateRequestDataTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["metricBaselineBulkUpdate"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		metricBaselineBulkUpdateRequestDataTypeTypePropEnum = append(metricBaselineBulkUpdateRequestDataTypeTypePropEnum, v)
	}
}

const (

	// MetricBaselineBulkUpdateRequestDataTypeMetricBaselineBulkUpdate captures enum value "metricBaselineBulkUpdate"
	MetricBaselineBulkUpdateRequestDataTypeMetricBaselineBulkUpdate string = "metricBaselineBulkUpdate"
)

// prop value enum
func (m *MetricBaselineBulkUpdateRequestData) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, metricBaselineBulkUpdateRequestDataTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *MetricBaselineBulkUpdateRequestData) validateType(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("data"+"."+"type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MetricBaselineBulkUpdateRequestData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MetricBaselineBulkUpdateRequestData) UnmarshalBinary(b []byte) error {
	var res MetricBaselineBulkUpdateRequestData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// MetricBaselineBulkUpdateRequestDataAttributesItems0 metric baseline bulk update request data attributes items0
// swagger:model MetricBaselineBulkUpdateRequestDataAttributesItems0
type MetricBaselineBulkUpdateRequestDataAttributesItems0 struct {

	// Contains the dynamically calculated baseline values for the metrics collected by Datahub
	Baselines []*MetricBaselineData `json:"baselines"`

	// Integer value of the day of the week and hour of day for which this baseline is calculated. Values are 0-167 which corresponds to each our of each day in one week
	// Maximum: 167
	// Minimum: 0
	HourOfWeek *int32 `json:"hourOfWeek,omitempty"`

	// Unique identifier of the Monitored Object for which these baselines are applicable
	MonitoredObjectID string `json:"monitoredObjectId,omitempty"`
}

// Validate validates this metric baseline bulk update request data attributes items0
func (m *MetricBaselineBulkUpdateRequestDataAttributesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBaselines(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHourOfWeek(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MetricBaselineBulkUpdateRequestDataAttributesItems0) validateBaselines(formats strfmt.Registry) error {

	if swag.IsZero(m.Baselines) { // not required
		return nil
	}

	for i := 0; i < len(m.Baselines); i++ {
		if swag.IsZero(m.Baselines[i]) { // not required
			continue
		}

		if m.Baselines[i] != nil {
			if err := m.Baselines[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("baselines" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *MetricBaselineBulkUpdateRequestDataAttributesItems0) validateHourOfWeek(formats strfmt.Registry) error {

	if swag.IsZero(m.HourOfWeek) { // not required
		return nil
	}

	if err := validate.MinimumInt("hourOfWeek", "body", int64(*m.HourOfWeek), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("hourOfWeek", "body", int64(*m.HourOfWeek), 167, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MetricBaselineBulkUpdateRequestDataAttributesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MetricBaselineBulkUpdateRequestDataAttributesItems0) UnmarshalBinary(b []byte) error {
	var res MetricBaselineBulkUpdateRequestDataAttributesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
