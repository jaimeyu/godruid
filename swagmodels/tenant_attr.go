// Code generated by go-swagger; DO NOT EDIT.

package swagmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TenantAttr tenant attr
// swagger:model TenantAttr
type TenantAttr struct {

	// id
	ID string `json:"_id,omitempty"`

	// rev
	Rev string `json:"_rev,omitempty"`

	// created timestamp
	CreatedTimestamp int64 `json:"createdTimestamp,omitempty"`

	// datatype
	Datatype string `json:"datatype,omitempty"`

	// last modified timestamp
	LastModifiedTimestamp int64 `json:"lastModifiedTimestamp,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// state
	State string `json:"state,omitempty"`

	// url subdomain
	URLSubdomain string `json:"urlSubdomain,omitempty"`
}

// Validate validates this tenant attr
func (m *TenantAttr) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateState(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var tenantAttrTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["USER_UNKNOWN","INVITED","ACTIVE","SUSPENDED","PENDING_DELETE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tenantAttrTypeStatePropEnum = append(tenantAttrTypeStatePropEnum, v)
	}
}

const (

	// TenantAttrStateUSERUNKNOWN captures enum value "USER_UNKNOWN"
	TenantAttrStateUSERUNKNOWN string = "USER_UNKNOWN"

	// TenantAttrStateINVITED captures enum value "INVITED"
	TenantAttrStateINVITED string = "INVITED"

	// TenantAttrStateACTIVE captures enum value "ACTIVE"
	TenantAttrStateACTIVE string = "ACTIVE"

	// TenantAttrStateSUSPENDED captures enum value "SUSPENDED"
	TenantAttrStateSUSPENDED string = "SUSPENDED"

	// TenantAttrStatePENDINGDELETE captures enum value "PENDING_DELETE"
	TenantAttrStatePENDINGDELETE string = "PENDING_DELETE"
)

// prop value enum
func (m *TenantAttr) validateStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, tenantAttrTypeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TenantAttr) validateState(formats strfmt.Registry) error {

	if swag.IsZero(m.State) { // not required
		return nil
	}

	// value enum
	if err := m.validateStateEnum("state", "body", m.State); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TenantAttr) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TenantAttr) UnmarshalBinary(b []byte) error {
	var res TenantAttr
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
