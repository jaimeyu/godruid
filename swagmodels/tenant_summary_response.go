// Code generated by go-swagger; DO NOT EDIT.

package swagmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TenantSummaryResponse Contains the mapping of an alias to a Tenant ID
// swagger:model TenantSummaryResponse
type TenantSummaryResponse struct {

	// data
	Data *TenantSummaryResponseData `json:"data,omitempty"`
}

// Validate validates this tenant summary response
func (m *TenantSummaryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TenantSummaryResponse) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	if m.Data != nil {
		if err := m.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TenantSummaryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TenantSummaryResponse) UnmarshalBinary(b []byte) error {
	var res TenantSummaryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// TenantSummaryResponseData tenant summary response data
// swagger:model TenantSummaryResponseData
type TenantSummaryResponseData struct {

	// attributes
	Attributes *TenantSummaryResponseDataAttributes `json:"attributes,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// type
	// Enum: [tenantSummaries]
	Type string `json:"type,omitempty"`
}

// Validate validates this tenant summary response data
func (m *TenantSummaryResponseData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttributes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TenantSummaryResponseData) validateAttributes(formats strfmt.Registry) error {

	if swag.IsZero(m.Attributes) { // not required
		return nil
	}

	if m.Attributes != nil {
		if err := m.Attributes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("data" + "." + "attributes")
			}
			return err
		}
	}

	return nil
}

var tenantSummaryResponseDataTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["tenantSummaries"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tenantSummaryResponseDataTypeTypePropEnum = append(tenantSummaryResponseDataTypeTypePropEnum, v)
	}
}

const (

	// TenantSummaryResponseDataTypeTenantSummaries captures enum value "tenantSummaries"
	TenantSummaryResponseDataTypeTenantSummaries string = "tenantSummaries"
)

// prop value enum
func (m *TenantSummaryResponseData) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, tenantSummaryResponseDataTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TenantSummaryResponseData) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("data"+"."+"type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TenantSummaryResponseData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TenantSummaryResponseData) UnmarshalBinary(b []byte) error {
	var res TenantSummaryResponseData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// TenantSummaryResponseDataAttributes tenant summary response data attributes
// swagger:model TenantSummaryResponseDataAttributes
type TenantSummaryResponseDataAttributes struct {

	// A known alias for the Tenant in Datahub
	Alias string `json:"alias,omitempty"`

	// The unique identifier of the Tenant in Datahub
	ID string `json:"id,omitempty"`
}

// Validate validates this tenant summary response data attributes
func (m *TenantSummaryResponseDataAttributes) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TenantSummaryResponseDataAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TenantSummaryResponseDataAttributes) UnmarshalBinary(b []byte) error {
	var res TenantSummaryResponseDataAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
