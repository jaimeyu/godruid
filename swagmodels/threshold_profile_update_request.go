// Code generated by go-swagger; DO NOT EDIT.

package swagmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ThresholdProfileUpdateRequest Object used to update an existing Threshold Profile in Datahub
// swagger:model ThresholdProfileUpdateRequest
type ThresholdProfileUpdateRequest struct {

	// data
	// Required: true
	Data *ThresholdProfileUpdateRequestData `json:"data"`
}

// Validate validates this threshold profile update request
func (m *ThresholdProfileUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThresholdProfileUpdateRequest) validateData(formats strfmt.Registry) error {

	if err := validate.Required("data", "body", m.Data); err != nil {
		return err
	}

	if m.Data != nil {
		if err := m.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ThresholdProfileUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThresholdProfileUpdateRequest) UnmarshalBinary(b []byte) error {
	var res ThresholdProfileUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ThresholdProfileUpdateRequestData threshold profile update request data
// swagger:model ThresholdProfileUpdateRequestData
type ThresholdProfileUpdateRequestData struct {

	// attributes
	// Required: true
	Attributes *ThresholdProfileUpdateRequestDataAttributes `json:"attributes"`

	// id
	// Required: true
	ID *string `json:"id"`

	// type
	// Required: true
	// Enum: [thresholdProfiles]
	Type *string `json:"type"`
}

// Validate validates this threshold profile update request data
func (m *ThresholdProfileUpdateRequestData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAttributes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThresholdProfileUpdateRequestData) validateAttributes(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"attributes", "body", m.Attributes); err != nil {
		return err
	}

	if m.Attributes != nil {
		if err := m.Attributes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("data" + "." + "attributes")
			}
			return err
		}
	}

	return nil
}

func (m *ThresholdProfileUpdateRequestData) validateID(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

var thresholdProfileUpdateRequestDataTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["thresholdProfiles"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		thresholdProfileUpdateRequestDataTypeTypePropEnum = append(thresholdProfileUpdateRequestDataTypeTypePropEnum, v)
	}
}

const (

	// ThresholdProfileUpdateRequestDataTypeThresholdProfiles captures enum value "thresholdProfiles"
	ThresholdProfileUpdateRequestDataTypeThresholdProfiles string = "thresholdProfiles"
)

// prop value enum
func (m *ThresholdProfileUpdateRequestData) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, thresholdProfileUpdateRequestDataTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ThresholdProfileUpdateRequestData) validateType(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("data"+"."+"type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ThresholdProfileUpdateRequestData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThresholdProfileUpdateRequestData) UnmarshalBinary(b []byte) error {
	var res ThresholdProfileUpdateRequestData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ThresholdProfileUpdateRequestDataAttributes threshold profile update request data attributes
// swagger:model ThresholdProfileUpdateRequestDataAttributes
type ThresholdProfileUpdateRequestDataAttributes struct {

	// rev
	// Required: true
	Rev *string `json:"_rev"`

	// name
	Name string `json:"name,omitempty"`

	// thresholds
	Thresholds *ThresholdsObject `json:"thresholds,omitempty"`
}

// Validate validates this threshold profile update request data attributes
func (m *ThresholdProfileUpdateRequestDataAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRev(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateThresholds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThresholdProfileUpdateRequestDataAttributes) validateRev(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"attributes"+"."+"_rev", "body", m.Rev); err != nil {
		return err
	}

	return nil
}

func (m *ThresholdProfileUpdateRequestDataAttributes) validateThresholds(formats strfmt.Registry) error {

	if swag.IsZero(m.Thresholds) { // not required
		return nil
	}

	if m.Thresholds != nil {
		if err := m.Thresholds.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("data" + "." + "attributes" + "." + "thresholds")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ThresholdProfileUpdateRequestDataAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThresholdProfileUpdateRequestDataAttributes) UnmarshalBinary(b []byte) error {
	var res ThresholdProfileUpdateRequestDataAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
