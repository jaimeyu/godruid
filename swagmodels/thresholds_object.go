// Code generated by go-swagger; DO NOT EDIT.

package swagmodels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ThresholdsObject thresholds object
// swagger:model ThresholdsObject
type ThresholdsObject struct {

	// vendor map
	VendorMap map[string]ThresholdsObjectVendorMapAnon `json:"vendorMap,omitempty"`
}

// Validate validates this thresholds object
func (m *ThresholdsObject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVendorMap(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThresholdsObject) validateVendorMap(formats strfmt.Registry) error {

	if swag.IsZero(m.VendorMap) { // not required
		return nil
	}

	for k := range m.VendorMap {

		if swag.IsZero(m.VendorMap[k]) { // not required
			continue
		}
		if val, ok := m.VendorMap[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ThresholdsObject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThresholdsObject) UnmarshalBinary(b []byte) error {
	var res ThresholdsObject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ThresholdsObjectVendorMapAnon thresholds object vendor map anon
// swagger:model ThresholdsObjectVendorMapAnon
type ThresholdsObjectVendorMapAnon struct {

	// metric map
	MetricMap map[string]ThresholdsObjectVendorMapAnonMetricMapAnon `json:"metricMap,omitempty"`

	// monitored object type map
	MonitoredObjectTypeMap map[string]ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnon `json:"monitoredObjectTypeMap,omitempty"`
}

// Validate validates this thresholds object vendor map anon
func (m *ThresholdsObjectVendorMapAnon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMetricMap(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMonitoredObjectTypeMap(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThresholdsObjectVendorMapAnon) validateMetricMap(formats strfmt.Registry) error {

	if swag.IsZero(m.MetricMap) { // not required
		return nil
	}

	for k := range m.MetricMap {

		if swag.IsZero(m.MetricMap[k]) { // not required
			continue
		}
		if val, ok := m.MetricMap[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *ThresholdsObjectVendorMapAnon) validateMonitoredObjectTypeMap(formats strfmt.Registry) error {

	if swag.IsZero(m.MonitoredObjectTypeMap) { // not required
		return nil
	}

	for k := range m.MonitoredObjectTypeMap {

		if swag.IsZero(m.MonitoredObjectTypeMap[k]) { // not required
			continue
		}
		if val, ok := m.MonitoredObjectTypeMap[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnon) UnmarshalBinary(b []byte) error {
	var res ThresholdsObjectVendorMapAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ThresholdsObjectVendorMapAnonMetricMapAnon thresholds object vendor map anon metric map anon
// swagger:model ThresholdsObjectVendorMapAnonMetricMapAnon
type ThresholdsObjectVendorMapAnonMetricMapAnon struct {

	// event attr map
	EventAttrMap map[string]string `json:"eventAttrMap,omitempty"`
}

// Validate validates this thresholds object vendor map anon metric map anon
func (m *ThresholdsObjectVendorMapAnonMetricMapAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnonMetricMapAnon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnonMetricMapAnon) UnmarshalBinary(b []byte) error {
	var res ThresholdsObjectVendorMapAnonMetricMapAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnon thresholds object vendor map anon monitored object type map anon
// swagger:model ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnon
type ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnon struct {

	// metric map
	MetricMap map[string]ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnon `json:"metricMap,omitempty"`
}

// Validate validates this thresholds object vendor map anon monitored object type map anon
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMetricMap(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnon) validateMetricMap(formats strfmt.Registry) error {

	if swag.IsZero(m.MetricMap) { // not required
		return nil
	}

	for k := range m.MetricMap {

		if swag.IsZero(m.MetricMap[k]) { // not required
			continue
		}
		if val, ok := m.MetricMap[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnon) UnmarshalBinary(b []byte) error {
	var res ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnon thresholds object vendor map anon monitored object type map anon metric map anon
// swagger:model ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnon
type ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnon struct {

	// direction map
	DirectionMap map[string]ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnon `json:"directionMap,omitempty"`
}

// Validate validates this thresholds object vendor map anon monitored object type map anon metric map anon
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirectionMap(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnon) validateDirectionMap(formats strfmt.Registry) error {

	if swag.IsZero(m.DirectionMap) { // not required
		return nil
	}

	for k := range m.DirectionMap {

		if swag.IsZero(m.DirectionMap[k]) { // not required
			continue
		}
		if val, ok := m.DirectionMap[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnon) UnmarshalBinary(b []byte) error {
	var res ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnon thresholds object vendor map anon monitored object type map anon metric map anon direction map anon
// swagger:model ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnon
type ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnon struct {

	// event map
	EventMap map[string]ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnonEventMapAnon `json:"eventMap,omitempty"`
}

// Validate validates this thresholds object vendor map anon monitored object type map anon metric map anon direction map anon
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEventMap(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnon) validateEventMap(formats strfmt.Registry) error {

	if swag.IsZero(m.EventMap) { // not required
		return nil
	}

	for k := range m.EventMap {

		if swag.IsZero(m.EventMap[k]) { // not required
			continue
		}
		if val, ok := m.EventMap[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnon) UnmarshalBinary(b []byte) error {
	var res ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnonEventMapAnon thresholds object vendor map anon monitored object type map anon metric map anon direction map anon event map anon
// swagger:model ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnonEventMapAnon
type ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnonEventMapAnon struct {

	// event attr map
	EventAttrMap map[string]string `json:"eventAttrMap,omitempty"`
}

// Validate validates this thresholds object vendor map anon monitored object type map anon metric map anon direction map anon event map anon
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnonEventMapAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnonEventMapAnon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnonEventMapAnon) UnmarshalBinary(b []byte) error {
	var res ThresholdsObjectVendorMapAnonMonitoredObjectTypeMapAnonMetricMapAnonDirectionMapAnonEventMapAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
